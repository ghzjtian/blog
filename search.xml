<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2016泰国旅游后记录</title>
    <url>/2016/10/15/2016%E6%B3%B0%E5%9B%BD%E6%97%85%E6%B8%B8%E5%90%8E%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<h2 id="2016泰国旅游后记录"><a href="#2016泰国旅游后记录" class="headerlink" title="2016泰国旅游后记录"></a>2016泰国旅游后记录</h2><a id="more"></a>

<blockquote>
<p>回来一个星期，终于有闲心记下旅途所遇了。</p>
</blockquote>
<hr>
<hr>
<hr>
<h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><h6 id="1-gt-泰国大事"><a href="#1-gt-泰国大事" class="headerlink" title="1. -&gt; 泰国大事"></a><a href="#project1">1. -&gt; 泰国大事</a></h6><h5 id="1-1-gt-推荐泰国旅游详细微信公众号"><a href="#1-1-gt-推荐泰国旅游详细微信公众号" class="headerlink" title="1.1 -&gt; 推荐泰国旅游详细微信公众号"></a><a href="#project1.1">1.1 -&gt; 推荐泰国旅游详细微信公众号</a></h5><h6 id="2-gt-行程"><a href="#2-gt-行程" class="headerlink" title="2.-&gt;行程"></a><a href="#project2">2.-&gt;行程</a></h6><h6 id="3-gt-旅途杂事"><a href="#3-gt-旅途杂事" class="headerlink" title="3.-&gt;旅途杂事"></a><a href="#project3">3.-&gt;旅途杂事</a></h6><h6 id="3-1-gt-租车篇"><a href="#3-1-gt-租车篇" class="headerlink" title="3.1 -&gt;租车篇"></a><a href="#project3.1">3.1 -&gt;租车篇</a></h6><h6 id="3-2-gt-东芭乐园"><a href="#3-2-gt-东芭乐园" class="headerlink" title="3.2 -&gt;东芭乐园"></a><a href="#project3.2">3.2 -&gt;东芭乐园</a></h6><h6 id="3-3-gt-骗子篇"><a href="#3-3-gt-骗子篇" class="headerlink" title="3.3 -&gt;骗子篇"></a><a href="#project3.3">3.3 -&gt;骗子篇</a></h6><h6 id="3-4-gt-四方水上市场-Pattaya-Floating-Market"><a href="#3-4-gt-四方水上市场-Pattaya-Floating-Market" class="headerlink" title="3.4 -&gt;四方水上市场(Pattaya Floating Market)"></a><a href="#project3.4">3.4 -&gt;四方水上市场(Pattaya Floating Market)</a></h6><h6 id="3-5-gt-蒂芬妮人妖秀-（Tiffany’s-Show）"><a href="#3-5-gt-蒂芬妮人妖秀-（Tiffany’s-Show）" class="headerlink" title="3.5 -&gt;蒂芬妮人妖秀 （Tiffany’s Show）"></a><a href="#project3.5">3.5 -&gt;蒂芬妮人妖秀 （Tiffany’s Show）</a></h6><h6 id="3-6-gt-食物"><a href="#3-6-gt-食物" class="headerlink" title="3.6 -&gt;食物"></a><a href="#project3.6">3.6 -&gt;食物</a></h6><h6 id="3-7-gt-酒店"><a href="#3-7-gt-酒店" class="headerlink" title="3.7 -&gt;酒店"></a><a href="#project3.7">3.7 -&gt;酒店</a></h6><h6 id="3-8-gt-寺庙"><a href="#3-8-gt-寺庙" class="headerlink" title="3.8 -&gt;寺庙"></a><a href="#project3.8">3.8 -&gt;寺庙</a></h6><h6 id="3-9-gt-沙滩"><a href="#3-9-gt-沙滩" class="headerlink" title="3.9 -&gt;沙滩"></a><a href="#project3.9">3.9 -&gt;沙滩</a></h6><h6 id="3-10-gt-Massage"><a href="#3-10-gt-Massage" class="headerlink" title="3.10 -&gt;Massage"></a><a href="#project3.10">3.10 -&gt;Massage</a></h6><h6 id="4-gt-交通"><a href="#4-gt-交通" class="headerlink" title="4 -&gt;交通"></a><a href="#project4">4 -&gt;交通</a></h6><h6 id="5-gt-玩"><a href="#5-gt-玩" class="headerlink" title="5 -&gt;玩"></a><a href="#project5">5 -&gt;玩</a></h6><h6 id="6-gt-购物"><a href="#6-gt-购物" class="headerlink" title="6 -&gt;购物"></a><a href="#project6">6 -&gt;购物</a></h6><hr>
<hr>
<hr>
<h2 id="泰国大事🇹🇭"><a href="#泰国大事🇹🇭" class="headerlink" title="泰国大事🇹🇭"></a><a name="project1"/>泰国大事🇹🇭</h2><p>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-15">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-15</a> 120806.png)</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	整个泰国的国旗降了半旗，电视(都是在播国王的生平事迹)，网络(google)都是黑白的，</span><br><span class="line">	不过感觉泰国的民众对待外国人还是很热情和友好的.</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;	</span><br><span class="line"></span><br><span class="line">----------</span><br><span class="line"></span><br><span class="line">### &lt;a name&#x3D;&quot;project1.1&quot;&#x2F;&gt;推荐泰国旅游详细微信公众号</span><br></pre></td></tr></table></figure>
<pre><code>在芭提雅的游船上看到个介绍泰国的微信公众号，觉得不错(里面啥都有)，推荐给大家：
泰帅
微信号:taishuai999</code></pre>
<pre><code>![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-11-08 093519.png)
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-11-08 093646.png)



----------
----------

## &lt;a name=&quot;project2&quot;/&gt;行程
&gt; 基本的行程如  《2016泰国旅游行程详细版》 所写

* 1. 22号,曼谷(素万那普 机场) -&gt; 机场搭大巴直达 芭提雅
* 2. (22-23-24-25号早上)芭提雅 -&gt;24号(格兰岛)
* 3. (25号-&gt;26号)芭提雅 -&gt; 清迈（大巴直达）
* 4. 28号,清迈  飞  曼谷(素万那普 机场)
* 5. 29号，曼谷(素万那普 机场) 飞  广州


----------
----------

## &lt;a name=&quot;project3&quot;/&gt;旅途杂事
### 芭提雅
###### 芭提雅的人的夜生活超丰富，而且，超多老外(西方老外)，当然，我也是老外 :) .
----------
##### &lt;a name=&quot;project3.1&quot;/&gt;23号，租车篇.

######## 之前看过网上在泰国可以租车去玩,便租了两辆摩托去玩，没想到，刚刚开到下一个街口，就遇到了警察，他一招手，手上变多了一张罚单，罪名：无证驾驶.金额:800泰株,交完罚款后，立刻又把车还了，虽然那个租车的老板娘说有罚在手，这两天都不怕交警的了，但，我们还是怂了.
* 有单为纪念:
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-11-04 214556.jpg)
---
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-23 103554.jpg)
---
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-23 101050.jpg)

----------    

##### &lt;a name=&quot;project3.2&quot;/&gt;东芭乐园(Nong Nooch Tropical Botanical Garden)
######## 里面挺漂亮的（表演(主要应该是反映泰国历史的)和大象show挺不错），很大，可惜那天太阳太猛，时间也不允许，要不然，真的可以逛上大半天.
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-23 144726.jpg)
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-23 152605.jpg)
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-23 133204.jpg)
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-23 133631.jpg)

----------

##### &lt;a name=&quot;project3.3&quot;/&gt;23号，骗子篇(至少我们认为是).
######## 去那个  东芭乐园  玩，搭乘当地的  条条车  ，正值路上塞车,突然路边有个拿着吉他，操着一口不流利的普通话，穿着拖鞋的青年人热情地向我们打招呼,说能不能载他一程，还让我们付路费，我和小伙伴们以为遇到一个泰国通，虽然穿着落魄，像个流浪歌手，但想到可以有个沿途介绍泰国风土人情的人，本着扶危济困的思想，竟然答应了让他上车（在外国放松了警惕）。
######## 他一上车，就说他是缅甸的华侨，后面的故事套路都是那样，说他三天没吃饭，很饿，父母双亡，流落泰国。说得我们实在受不了了，给了他200泰铢，还好言相劝，总算让他半路下车了。
----------    
##### &lt;a name=&quot;project3.4&quot;/&gt;四方水上市场(Pattaya Floating Market)
######## 那里的烤香蕉不错，不过,感觉跟网络上看的图片差很多，所以,我还是比较喜欢乌镇多一点，虽然乌镇的水有点异味散发出来.

![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-23 174204.jpg)    

![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-23 171757.jpg)    

![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-23 172110.jpg)        

----------

##### &lt;a name=&quot;project3.5&quot;/&gt;蒂芬妮人妖秀 （Tiffany&#39;s Show）
芭提雅有挺多人妖秀表演的场所的，我们就挑了最出名的Tiffany去过过瘾
######## 很妖艳，比女人更女人，不过，感觉   只可远观，不可亵玩 .
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-23 232509.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-23 215241.jpg  )

----------    

##### &lt;a name=&quot;project3.6&quot;/&gt;食物
以酸辣甜为主的食物味道搭配(个人觉得吃得不习惯)，感觉街边的食物价格跟我们的街边美食差不多。
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-24 093412.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-24 212446.jpg  )
泰国吃的美式早餐(那几天吃的最好的一顿早餐)
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-25 101239.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-25 153808.jpg  )
清迈街头美食(Kad Suan Kaew商场下面)
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-27 202512.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-27 203231.jpg  )
清迈早餐
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-28 083816.jpg  )
曼谷机场大餐
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-29 135959.jpg  )

----------

##### &lt;a name=&quot;project3.7&quot;/&gt;酒店
泰国的酒店都挺整洁的，不过，听说没有(至少我住过的3间酒店)如：拖鞋，牙膏，牙刷,梳子 等等的一次性的用品，不过满大街都是7/11便利店，可以随时买得到。

![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-27 171032(1).jpg  )

----------

##### &lt;a name=&quot;project3.8&quot;/&gt;寺庙
泰国有很多寺庙,在清迈的古城内，基本每隔几百米就有一座寺庙，都是外表装饰得金碧辉煌的(都很安静，干静，进去要脱鞋，而且也不能奇装异服或穿短裤等，没有想象中的，我们这的香火缭绕的情况).
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-24 095442.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-26 100819.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-26 101026.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-26 132149.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-24 095521.jpg  )

----------

三王寺
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-26 131907.jpg  )
清迈双龙寺(又叫素帖寺)
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-28 114810.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-28 115012.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-28 115408.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-28 120825.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-28 122007(1).jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-28 122752.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-28 115002.jpg  )

----------

双龙寺远眺清迈
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-28 120735.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-28 121644.jpg  )

----------
##### &lt;a name=&quot;project3.9&quot;/&gt;沙滩
芭提雅的沙滩（特别是格兰岛上）沙很细，水很清,而且水上活动也挺多的
    ![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-24 143841.jpg  )
    ![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-24 111901.jpg  )
    ![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-24 164840.jpg  )

----------
###### &lt;a name=&quot;project3.10&quot;/&gt;Massage
泰式按摩，名不虚传，在街边，好多这种按摩店.(觉得清迈那家 女子监狱massage不错，价格也不贵,body massage才400/2h)
    ![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-24 221945.jpg  )
    ![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-24 221954.jpg  )
女子监狱massage(Chiang Mai Womens Correctional Institute Massage)
    ![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-26 125921(1).jpg  )
    ![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-26 131125(1).jpg  )

----------

##### &lt;a name=&quot;project4&quot;/&gt;交通
###### 1.可以租车(摩托或汽车，很少见到有自行车，看到有都是老外在骑),不过要小心，因为那边的行驶方向跟中国不同，而且，一般外国人都是无证驾驶.
###### 2.条条车,价格不贵，而且，可以讲价(别太狠就行了)，一般都可以比他开价的便宜 10％～20%  。

----------

###### 3.大巴车，我们从芭提雅NCA车站(Nakhonchaiair Bus Terminal)去清迈就是做大巴车（NCA）的，坐了大概13个小时,中间有一次零食，一顿盒饭，早上还有牛奶送，座位挺舒服的，可以调坐或躺，也不像国内的卧铺大巴那样一股异味.
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-25 165136.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-25 174406.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-25 174409.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-25 175614.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-24 104417.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-26 072407.jpg  )

----------
###### 4.火车，(要提前至少一个星期，我那时就是迟了一两天，已经没票了，后来去到火车站买，特快的已经没票了),而且听说，他们的火车是上车开动后才检票的！！！    
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-26 075451.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-26 084413.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-26 075127.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-26 080926(1).jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-26 082859(1).jpg  )

----------
##### &lt;a name=&quot;project5&quot;/&gt;玩
我发现泰国 芭提雅  那的商场有些很豪华(如Mike Shopping Mall)，    里面感觉比国内一线城市的都豪华.

信不信由你博物馆(Ripley&#39;s Believe It or Not!Museum)(里面感觉就一商场，最顶楼就是一个玩的商场（我们玩了   鬼屋，幻影屋，火车游戏屋(这个游戏我还破纪录了，被留名(第一次踏上人生巅峰 !!! )));
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-25 125956.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-25 145555.jpg  )

清迈MAYA商场(MAYA Lifestyle Shopping Center)
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-26 215951.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-26 200419.jpg  )
清迈丛林飞跃(没试过可以试下，我们玩的那个缩小版的，感觉，不咋滴)

----------
##### &lt;a name=&quot;project6&quot;/&gt;购物
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-27 224451.jpg  )
![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand/2016-10-28 152718.jpg  )
</code></pre>
]]></content>
      <categories>
        <category>Travel</category>
      </categories>
      <tags>
        <tag>Travel</tag>
      </tags>
  </entry>
  <entry>
    <title>2016泰国旅游后记录_我们</title>
    <url>/2016/10/15/2016%E6%B3%B0%E5%9B%BD%E6%97%85%E6%B8%B8%E5%90%8E%E8%AE%B0%E5%BD%95_%E6%88%91%E4%BB%AC/</url>
    <content><![CDATA[<h2 id="我们"><a href="#我们" class="headerlink" title="我们"></a>我们</h2><a id="more"></a>


<p>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-22">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-22</a> 144905.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-22">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-22</a> 145622.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-22">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-22</a> 154407.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-22">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-22</a> 154537.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 101056.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 101142(1).jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 101154.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 124431.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 124445.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 124545.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 124719.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 130947.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 130953.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 134731.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 134757.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 134817.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 180045.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 213614.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-23</a> 232659.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-24">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-24</a> 111235.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-24">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-24</a> 111900.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-24">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-24</a> 113722.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-24">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-24</a> 113745.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-24">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-24</a> 124450.jpg “Title here”)</p>
<!--![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-24 135737.jpg "Title here")-->
<!--![Smaller icon](http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-24 135739.jpg "Title here")-->

<p>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-26">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-26</a> 212907.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-28">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-28</a> 121258.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-28">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-28</a> 121510.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-28">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-28</a> 121531.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-28">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-28</a> 123436.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-28">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-28</a> 132639.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-28">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-28</a> 152957.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-29">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-29</a> 162959.jpg “Title here”)<br>![Smaller icon](<a href="http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-29">http://pic.pgyjz.cn/blog/travel/Thailand/After_Thailand_we/2016-10-29</a> 224135.jpg “Title here”)</p>
<hr>
<hr>
<p>纪念终将逝去的青春</p>
]]></content>
      <categories>
        <category>Travel</category>
      </categories>
      <tags>
        <tag>Travel</tag>
      </tags>
  </entry>
  <entry>
    <title>2016泰国旅游计划</title>
    <url>/2016/10/15/2016%E6%B3%B0%E5%9B%BD%E6%97%85%E6%B8%B8%E8%AE%A1%E5%88%92/</url>
    <content><![CDATA[<h2 id="记录下泰国出游前的准备"><a href="#记录下泰国出游前的准备" class="headerlink" title="记录下泰国出游前的准备"></a>记录下泰国出游前的准备</h2><a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">机票时间</span><br><span class="line">【南方航空 广州新白云-曼谷素万那普 10月22日16:05-10月22日17:55（2）南方航空 曼谷素万那普-广州新白云 10月29日18:55-10月29日22:45 』建议提前3小时到达机场办理值机。</span><br></pre></td></tr></table></figure>

<ol>
<li><p> <a href="http://www.mafengwo.cn/wenda/detail-1387913.html">换</a> 点 泰铢 ,<a href="https://www.baidu.com/s?wd=%E6%B3%B0%E6%A0%AA%E4%B8%8E%E4%BA%BA%E6%B0%91%E5%B8%81%E7%9A%84%E6%B1%87%E7%8E%87&rsv_spt=1&rsv_iqid=0xbdf5eb71000166a1&issp=1&f=8&rsv_bp=1&rsv_idx=2&ie=utf-8&rqlang=cn&tn=baiduhome_pg&rsv_enter=1&oq=%E6%B3%B0%E5%9B%BD%E8%80%83%E5%B1%B1%E8%B7%AF&inputT=9790&rsv_t=1119ib/Rca8+AErPdEBwfZ6E9nvJtWtCvLEzRiEO+3Vspa8m0YIu5LBJqYRSfxp53Hfe&rsv_sug3=26&rsv_pq=c2e75a93000190b5&rsv_sug1=29&rsv_sug7=100&bs=%E6%B3%B0%E5%9B%BD%E8%80%83%E5%B1%B1%E8%B7%AF">当前汇率</a> </p>
</li>
<li><p>中国驻泰国使馆电话</p>
<ul>
<li><p>0066-854833327</p>
<p>－ 0066-2-2457010</p>
</li>
</ul>
</li>
</ol>
<h3 id="说明"><a href="#说明" class="headerlink" title="说明:"></a>说明:</h3><pre><code>- 第一次到曼谷主要是游玩，第二次回曼谷再买东西.
- 因为 芭提雅 的 `格兰岛`,西南边的 &#39;普吉岛&#39;,&#39;苏梅岛&#39; 和 罗勇 的 `沙美岛` 都是 岛，所以只去一个岛就行了.(个人觉得 `沙美岛` 更好,人少很多，沙也细很多)
-建议我们都下载 google 地图(要下载导航)
-先统一了路线，最好今晚就统一()</code></pre>
<hr>
<hr>
<h3 id="路线1"><a href="#路线1" class="headerlink" title="路线1:"></a>路线1:</h3><pre><code>广州-曼谷(22号，23号,24号),曼谷-芭提雅(24号,25号)(2小时),芭提雅-沙美岛(25号,26号),沙美岛-清迈(26号，27号,28)，清迈-曼谷(28,29号),曼谷－广州</code></pre>
<h3 id="路线2"><a href="#路线2" class="headerlink" title="路线2:"></a>路线2:</h3><pre><code>广州-曼谷(22号，23号,24号),曼谷-芭提雅(24号,25号)(2小时),芭提雅-格兰岛(25号,26号),格兰岛-清迈(26号，27号,28)，清迈-曼谷(28,29号),曼谷－广州</code></pre>
<h3 id="路线3"><a href="#路线3" class="headerlink" title="路线3:"></a>路线3:</h3><pre><code>广州-曼谷(22号，23号,24号),曼谷-苏梅岛(24号,25号,26,27)(12小时),苏梅岛-曼谷(28,29号),曼谷－广州</code></pre>
<h3 id="路线4"><a href="#路线4" class="headerlink" title="路线4:"></a>路线4:</h3><pre><code>广州-曼谷(22号，23号,24号),曼谷-普吉岛(24号,25号,26,27)(11小时汽车),普吉岛-曼谷(27,29号)(11小时汽车),曼谷－广州</code></pre>
<h3 id="路线5-租汽车"><a href="#路线5-租汽车" class="headerlink" title="路线5(租汽车):"></a>路线5(租汽车):</h3><pre><code>广州-曼谷(22号，23号,24号),曼谷-芭提雅(24号,25号,26)(2小时),芭提雅-沙美岛(26,27号),沙美岛-芭提雅(27,并租车,在附近玩到28号还车(租一日车)，然后回曼谷),曼谷－广州(29号)</code></pre>
<h3 id="路线6-租汽车-没去岛玩"><a href="#路线6-租汽车-没去岛玩" class="headerlink" title="路线6(租汽车,没去岛玩):"></a>路线6(租汽车,没去岛玩):</h3><pre><code>广州-曼谷(22号，23号,24号),曼谷-芭提雅(24号,25号,26)(2小时),芭提雅(26,并租车,在附近玩到28号还车(租3日车)，然后回曼谷),曼谷－广州(29号)</code></pre>
<h3 id="路线7-租汽车-没去岛玩-个人😍这条线路-泰国的火车挺漂亮的"><a href="#路线7-租汽车-没去岛玩-个人😍这条线路-泰国的火车挺漂亮的" class="headerlink" title="路线7(租汽车,没去岛玩)(个人😍这条线路,泰国的火车挺漂亮的):"></a>路线7(租汽车,没去岛玩)(个人😍这条线路,泰国的火车挺漂亮的):</h3><pre><code>广州-曼谷(22号，23号,24号),曼谷-清迈(24号,25号,26,27,28)(12小时,搭火车(那晚就在火车上住，睡一晚))(25日租车,在附近玩到28号还车(租4日车)，然后回曼谷,回程可坐汽车，飞机或火车),曼谷－广州(29号)    </code></pre>
<h3 id="路线8-租汽车-没去岛玩"><a href="#路线8-租汽车-没去岛玩" class="headerlink" title="路线8(租汽车,没去岛玩):"></a>路线8(租汽车,没去岛玩):</h3><pre><code>广州-曼谷(22号，23号,24号),曼谷-清迈(24号,25号,26,27,28)(24日租车,开车去清迈,慢慢开，可以随时停下来玩,玩到28号会曼谷还车(租5日车),曼谷－广州(29号)    </code></pre>
<h2 id="扫盲地图"><a href="#扫盲地图" class="headerlink" title="扫盲地图"></a>扫盲地图</h2><p><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/travel_map.png" alt="icon"></p>
<hr>
<hr>
<hr>
<h2 id="曼谷Bangkok"><a href="#曼谷Bangkok" class="headerlink" title="[曼谷Bangkok]"></a>[曼谷Bangkok]</h2><h3 id="曼谷-靠山路-在曼谷，主要为夜市和酒吧-介绍"><a href="#曼谷-靠山路-在曼谷，主要为夜市和酒吧-介绍" class="headerlink" title="[曼谷 靠山路]        在曼谷，主要为夜市和酒吧,介绍"></a>[曼谷 靠山路]        在曼谷，主要为夜市和酒吧,<a href="http://bbs.16fan.com/thread-116658-1-1.html">介绍</a></h3><h3 id="路线1-1"><a href="#路线1-1" class="headerlink" title="路线1:"></a><a href="http://www.mafengwo.cn/mdd/cityroute/11045_102.html">路线1:</a></h3><h6 id="D1-大皇宫-3小时-→-卧佛寺-0-5小时-→-郑王庙-黎明寺-0-5小时-→-考山路-2小时-→-湄南河-2小时"><a href="#D1-大皇宫-3小时-→-卧佛寺-0-5小时-→-郑王庙-黎明寺-0-5小时-→-考山路-2小时-→-湄南河-2小时" class="headerlink" title="D1:大皇宫(3小时) → 卧佛寺(0.5小时) → 郑王庙(黎明寺)(0.5小时) → 考山路(2小时) → 湄南河(2小时)"></a>D1:大皇宫(3小时) → 卧佛寺(0.5小时) → 郑王庙(黎明寺)(0.5小时) → 考山路(2小时) → 湄南河(2小时)</h6><h6 id="D2-曼谷艺术文化中心-1-5小时-→-四面佛-0-5小时-→-暹罗海洋世界-2小时-→-唐人街-2小时"><a href="#D2-曼谷艺术文化中心-1-5小时-→-四面佛-0-5小时-→-暹罗海洋世界-2小时-→-唐人街-2小时" class="headerlink" title="D2:曼谷艺术文化中心(1.5小时) → 四面佛(0.5小时) → 暹罗海洋世界(2小时) → 唐人街(2小时)]"></a>D2:曼谷艺术文化中心(1.5小时) → 四面佛(0.5小时) → 暹罗海洋世界(2小时) → 唐人街(2小时)]</h6><hr>
<hr>
<hr>
<h3 id="沙美岛"><a href="#沙美岛" class="headerlink" title="[沙美岛]"></a>[沙美岛]</h3><h2 id="介绍及酒店住宿-等…"><a href="#介绍及酒店住宿-等…" class="headerlink" title="介绍及酒店住宿 等…"></a><a href="http://bbs.16fan.com/thread-98030-1-1.html">介绍及酒店住宿 等…</a></h2><hr>
<h3 id="苏梅岛"><a href="#苏梅岛" class="headerlink" title="[苏梅岛]"></a>[苏梅岛]</h3><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a><a href="http://bbs.16fan.com/thread-82001-1-1.html">介绍</a></h2><hr>
<h3 id="芭提雅-格兰岛Ko-Lan"><a href="#芭提雅-格兰岛Ko-Lan" class="headerlink" title="[芭提雅 格兰岛Ko Lan]"></a>[芭提雅 格兰岛Ko Lan]</h3><h2 id="介绍1-介绍2-介绍3"><a href="#介绍1-介绍2-介绍3" class="headerlink" title="介绍1,介绍2,介绍3"></a><a href="http://www.mafengwo.cn/poi/6013326.html">介绍1</a>,<a href="http://www.dianping.com/shop/25003385">介绍2</a>,<a href="http://blog.sina.com.cn/s/blog_12f80bd710102vyvx.html">介绍3</a></h2><hr>
<h2 id="清迈Chiang-Mai"><a href="#清迈Chiang-Mai" class="headerlink" title="[清迈Chiang Mai]"></a>[清迈Chiang Mai]</h2><h3 id="路线1-2"><a href="#路线1-2" class="headerlink" title="路线1:"></a><a href="http://www.mafengwo.cn/mdd/cityroute/15284_116.html">路线1</a>:</h3><h6 id="D1-清迈古城-半天-→-契迪龙寺-1小时-→-塔佩门-1小时"><a href="#D1-清迈古城-半天-→-契迪龙寺-1小时-→-塔佩门-1小时" class="headerlink" title="D1:清迈古城(半天) → 契迪龙寺(1小时) → 塔佩门(1小时)"></a>D1:清迈古城(半天) → 契迪龙寺(1小时) → 塔佩门(1小时)</h6><h6 id="D2-素贴山-2小时-→-双龙寺-1小时-→-蒲屏皇宫-1小时-→-清迈大学-1小时-→-宁曼路-1小时"><a href="#D2-素贴山-2小时-→-双龙寺-1小时-→-蒲屏皇宫-1小时-→-清迈大学-1小时-→-宁曼路-1小时" class="headerlink" title="D2:素贴山(2小时) → 双龙寺(1小时) → 蒲屏皇宫(1小时) → 清迈大学(1小时) → 宁曼路(1小时)"></a>D2:素贴山(2小时) → 双龙寺(1小时) → 蒲屏皇宫(1小时) → 清迈大学(1小时) → 宁曼路(1小时)</h6><h6 id="D3-美旺大象营-半天-→-清迈女子监狱按摩馆-2小时-→-清迈夜间动物园-3小时"><a href="#D3-美旺大象营-半天-→-清迈女子监狱按摩馆-2小时-→-清迈夜间动物园-3小时" class="headerlink" title="D3:美旺大象营(半天) → 清迈女子监狱按摩馆(2小时) → 清迈夜间动物园(3小时)"></a>D3:美旺大象营(半天) → 清迈女子监狱按摩馆(2小时) → 清迈夜间动物园(3小时)</h6><h6 id="D4-丛林飞跃-5小时-→-周日夜市-周日步行街-2小时"><a href="#D4-丛林飞跃-5小时-→-周日夜市-周日步行街-2小时" class="headerlink" title="D4:丛林飞跃(5小时) → 周日夜市(周日步行街)(2小时)"></a>D4:丛林飞跃(5小时) → 周日夜市(周日步行街)(2小时)</h6><h6 id="D5-老虎园-大猫乐园-3小时-→-帕辛寺-清迈-2小时"><a href="#D5-老虎园-大猫乐园-3小时-→-帕辛寺-清迈-2小时" class="headerlink" title="D5:老虎园(大猫乐园)(3小时) → 帕辛寺(清迈)(2小时)"></a>D5:老虎园(大猫乐园)(3小时) → 帕辛寺(清迈)(2小时)</h6><hr>
<h2 id="芭堤雅Pattaya"><a href="#芭堤雅Pattaya" class="headerlink" title="[芭堤雅Pattaya]"></a>[芭堤雅Pattaya]</h2><p>###<a href="http://www.mafengwo.cn/mdd/cityroute/11046_137.html">路线1:</a></p>
<h6 id="D1-东芭乐园-3小时-→-四方水上市场-四合镇水乡-2小时-→-芭提雅海滩-2小时-→-蒂芬妮人妖秀-1-5小时"><a href="#D1-东芭乐园-3小时-→-四方水上市场-四合镇水乡-2小时-→-芭提雅海滩-2小时-→-蒂芬妮人妖秀-1-5小时" class="headerlink" title="D1:东芭乐园(3小时) → 四方水上市场/四合镇水乡(2小时) → 芭提雅海滩(2小时) → 蒂芬妮人妖秀(1.5小时)"></a>D1:东芭乐园(3小时) → 四方水上市场/四合镇水乡(2小时) → 芭提雅海滩(2小时) → 蒂芬妮人妖秀(1.5小时)</h6><h3 id="路线2-1"><a href="#路线2-1" class="headerlink" title="路线2:"></a><a href="http://www.mafengwo.cn/mdd/cityroute/11046_245.html">路线2:</a></h3><h6 id="D1-东芭乐园-3小时-→-四方水上市场-四合镇水乡-2小时-→-芭提雅海滩-2小时-→-蒂芬妮人妖秀-1-5小时-1"><a href="#D1-东芭乐园-3小时-→-四方水上市场-四合镇水乡-2小时-→-芭提雅海滩-2小时-→-蒂芬妮人妖秀-1-5小时-1" class="headerlink" title="D1:东芭乐园(3小时) → 四方水上市场/四合镇水乡(2小时) → 芭提雅海滩(2小时) → 蒂芬妮人妖秀(1.5小时)"></a>D1:东芭乐园(3小时) → 四方水上市场/四合镇水乡(2小时) → 芭提雅海滩(2小时) → 蒂芬妮人妖秀(1.5小时)</h6><h6 id="D2-格兰岛-1天"><a href="#D2-格兰岛-1天" class="headerlink" title="D2:格兰岛(1天)"></a>D2:格兰岛(1天)</h6><h6 id="D3-泰国热带水果园-3小时-→-尚泰芭提雅海滩购物中心-2小时"><a href="#D3-泰国热带水果园-3小时-→-尚泰芭提雅海滩购物中心-2小时" class="headerlink" title="D3:泰国热带水果园(3小时) → 尚泰芭提雅海滩购物中心(2小时)"></a>D3:泰国热带水果园(3小时) → 尚泰芭提雅海滩购物中心(2小时)</h6><hr>
<hr>
<hr>
<h1 id="交通"><a href="#交通" class="headerlink" title="交通"></a>交通</h1><ul>
<li><p> <a href="http://bbs.16fan.com/thread-503159-1-1.html">曼谷-芭提雅  芭提雅-清迈 交通</a></p>
</li>
<li><p> <a href="http://bbs.16fan.com/thread-71421-1-1.html">泰国交通全攻略</a></p>
</li>
<li><p> <a href="http://wenda.16fan.com/question/130942.html">芭提雅到沙美岛</a></p>
</li>
<li><p> <a href="http://www.mafengwo.cn/i/1123158.html">曼谷-沙美岛Rayong, Koh Samet</a>)</p>
</li>
<li><p> <a href="http://bbs.16fan.com/thread-63343-1-1.html">曼谷-普吉岛</a></p>
</li>
<li><p> <a href="http://bbs.16fan.com/thread-63173-1-1.html">火车买票</a></p>
</li>
<li><p> <a href="http://www.mafengwo.cn/i/1000834.html">租车自驾游</a></p>
</li>
<li><p>   <a href="http://www.mafengwo.cn/i/3310188.html">租车自驾游2</a></p>
</li>
<li><p><a href="http://club.autohome.com.cn/bbs/thread-a-100024-42848036-1.html">租车自驾游3</a></p>
</li>
<li><p><a href="http://car.ctrip.com/OSDWeb/o/adv/requiredmat">携程租车</a></p>
</li>
</ul>
<ul>
<li><p>清迈 - 沙美岛</p>
<p> 从清迈到沙美岛最快的方式就是飞曼谷，然后坐车去罗勇的班配码头，再坐船到沙美岛，我们计算一下时间，清迈飞曼谷70分钟，曼谷到班配码头3个小时左右，班配码头到沙美岛40分钟，也就是说至少5小时，算上转乘折腾的时间，6小时以上，如果是从早上出发，那么就只能晚上到沙美岛了，搞不好过了公共船上岛的时间就只能包船上岛，那就只能第二套方案了，坐NCA的夜间大巴，早上8点左右抵达罗勇，再从罗勇前往班配码头，从时间上来说，不影响第二天在岛上的时间，保证能上岛，缺点也很明显，坐一夜的车，如果路况不好就很痛苦了。</p>
</li>
</ul>
<hr>
<h1 id="泰国地图"><a href="#泰国地图" class="headerlink" title="泰国地图"></a>泰国地图</h1><ol>
<li>泰国1<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/taiguo3.png" alt="Smaller icon"></li>
<li>泰国2<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/taiguo4.png" alt="Smaller icon"></li>
<li>泰国3<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/taiguo5.png" alt="Smaller icon"></li>
</ol>
<hr>
<h2 id="芭提雅"><a href="#芭提雅" class="headerlink" title="芭提雅"></a>芭提雅</h2><ol start="4">
<li>芭提雅1<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/taiguo1.png" alt="Smaller icon"></li>
<li>芭提雅2<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/taiguo2.png" alt="Smaller icon"></li>
</ol>
<hr>
<h2 id="曼谷"><a href="#曼谷" class="headerlink" title="曼谷"></a>曼谷</h2><ol start="6">
<li>曼谷1<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/taiguo6.png" alt="Smaller icon"></li>
<li>曼谷素万那普机场1<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/%E6%9B%BC%E8%B0%B7%E7%B4%A0%E4%B8%87%E9%82%A3%E6%99%AE_airport1.png" alt="Smaller icon"></li>
<li>曼谷素万那普机场2<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/%E6%9B%BC%E8%B0%B7%E7%B4%A0%E4%B8%87%E9%82%A3%E6%99%AE_airport2.png" alt="Smaller icon"></li>
<li>曼谷  靠山路位置1<br> <img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/khaosan_road1.jpg" alt="Smaller icon"></li>
<li>曼谷   靠山路位置2<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/khaosan_road2.png" alt="Smaller icon"></li>
<li> 曼谷   靠山路位置3<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/khaosan_road3.png" alt="Smaller icon"></li>
</ol>
<p>-.  曼谷  唐人街<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/mangu_chinatown.png" alt="icon"></p>
<hr>
<h2 id="罗勇-班配码头"><a href="#罗勇-班配码头" class="headerlink" title="罗勇  班配码头"></a>罗勇  班配码头</h2><p><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/luoyong1.png" alt="Smaller icon"><br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/luoyong1.png" alt="Smaller icon"></p>
<hr>
<h2 id="沙美岛-1"><a href="#沙美岛-1" class="headerlink" title="沙美岛"></a>沙美岛</h2><ol start="13">
<li><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/sameio_island.jpg" alt="Smaller icon"></li>
<li>沙美岛1<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/%E6%B2%99%E7%BE%8E%E5%B2%9B3.png" alt="Smaller icon"></li>
<li>沙美岛2<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/%E6%B2%99%E7%BE%8E%E5%B2%9B1.png" alt="Smaller icon"></li>
<li>沙美岛3<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/%E6%B2%99%E7%BE%8E%E5%B2%9B2.png" alt="Smaller icon"></li>
</ol>
<hr>
<ol start="14">
<li>苏梅岛1<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/Samui_1.png" alt="Smaller icon"></li>
<li>苏梅岛2<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/Samui_2.png" alt="Smaller icon"></li>
</ol>
<hr>
<h2 id="普吉岛"><a href="#普吉岛" class="headerlink" title="普吉岛"></a>普吉岛</h2><pre><code>16. 普吉岛1</code></pre>
<p><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/pujidao1.png" alt="Smaller icon"></p>
<pre><code>17. 普吉岛2</code></pre>
<h2 id=""><a href="#" class="headerlink" title=""></a><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/pujidao2.png" alt="Smaller icon"></h2><hr>
<h2 id="清迈"><a href="#清迈" class="headerlink" title="清迈"></a>清迈</h2><p><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/chiangmai_1.png" alt="icon"><br>清迈大学<br><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/Pictures/chiangmai_1.png" alt="icon"></p>
<hr>
<hr>
<hr>
<h2 id="他人-旅游参考"><a href="#他人-旅游参考" class="headerlink" title="他人  旅游参考"></a>他人  旅游参考</h2><ul>
<li><p><a href="http://bbs.16fan.com/thread-4416-1-1.html">泰国</a></p>
</li>
<li><p><a href="http://bbs.16fan.com/thread-6858-1-1.html">清迈:景点＋交通＋住宿</a> </p>
</li>
<li><p><a href="http://bbs.16fan.com/thread-63644-1-1.html">曼谷</a></p>
</li>
<li><p><a href="http://bbs.16fan.com/thread-6864-1-1.html#29605">普吉岛1</a></p>
</li>
<li><p><a href="http://bbs.16fan.com/thread-6530-1-1.html">普吉岛2</a></p>
</li>
<li><p><a href="http://bbs.16fan.com/thread-6861-1-1.html#5682">素可泰Sukhothai</a></p>
</li>
<li><p><a href="http://www.mafengwo.cn/i/1123158.html">沙美岛Rayong, Koh Samet</a></p>
</li>
<li><p><a href="http://bbs.16fan.com/thread-82001-1-1.html">苏梅岛Samui </a></p>
</li>
</ul>
<ul>
<li><p><a href="http://360.mafengwo.cn/travels/info.php?id=687324">曼谷-芭提雅-沙美岛</a></p>
</li>
<li><p><a href="http://360.mafengwo.cn/travels/info.php?id=1126390">曼谷-沙美岛-清迈-曼谷</a></p>
</li>
<li><p><a href="http://bbs.qyer.com/thread-867635-1.html"> 曼谷-清迈-沙美  9日游计划</a></p>
</li>
<li><p><a href="http://360.mafengwo.cn/travels/info.php?id=2968362">曼谷-芭提雅  8天深度自由行</a></p>
</li>
<li><p><a href="http://360.mafengwo.cn/travels/info.php?id=687324">从广州-曼谷，曼谷-靠山路 ，靠山路-沙美岛 ，沙美岛-芭提雅 ，芭提雅-KOH LAN ，KOH LAN- BANGKOK ，BANGKOK- 广州</a></p>
</li>
</ul>
<hr>
<hr>
<h1 id="Happy-Ending"><a href="#Happy-Ending" class="headerlink" title="Happy Ending"></a>Happy Ending</h1>]]></content>
      <categories>
        <category>Travel</category>
      </categories>
      <tags>
        <tag>Travel</tag>
      </tags>
  </entry>
  <entry>
    <title>2016泰国旅游计划_详细版</title>
    <url>/2016/10/15/2016%E6%B3%B0%E5%9B%BD%E6%97%85%E6%B8%B8%E8%AE%A1%E5%88%92_%E8%AF%A6%E7%BB%86%E7%89%88/</url>
    <content><![CDATA[<h2 id="记录下泰国出游前的准备-详细版"><a href="#记录下泰国出游前的准备-详细版" class="headerlink" title="记录下泰国出游前的准备(详细版)"></a>记录下泰国出游前的准备(详细版)</h2><a id="more"></a>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> 机票时间</span><br><span class="line">『（1）南方航空 广州新白云-曼谷素万那普 10月22日16:05-10月22日17:55（2）南方航空 曼谷素万那普-广州新白云 10月29日18:55-10月29日22:45 』建议提前3小时到达机场办理值机。可在APP『行程』频道查看行程，值机选座、退改点击</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="记得"><a href="#记得" class="headerlink" title="记得"></a>记得</h2><ul>
<li>1.下载google map地图</li>
<li>2.记住 中国驻泰领事馆电话<ul>
<li>0066-854833327</li>
<li>0066-2-2457010</li>
</ul>
</li>
</ul>
<h2 id="旅游定酒店网址"><a href="#旅游定酒店网址" class="headerlink" title="旅游定酒店网址:"></a>旅游定酒店网址:</h2><pre><code> booking
  agoda</code></pre>
<h2 id="英文名对照"><a href="#英文名对照" class="headerlink" title="英文名对照"></a>英文名对照</h2><ul>
<li><p>芭提雅Pattaya</p>
</li>
<li><p>曼谷Bangkok</p>
</li>
<li><p>格兰岛Ko Lan</p>
</li>
<li><p>Sabai Resort（萨拜度假酒店）</p>
</li>
<li><p>芭提雅NCA车站</p>
</li>
<li><p>廊曼国际机场(Don Mueang Airport，三字代码DMK)</p>
</li>
<li><p>素万那普国际机场(Suvarnabhumi Airport，三字代码BKK)（出发和回程机场）。</p>
</li>
<li><p>NCA是NakhonchaiAir的缩写，号称陆地航班,Nakhonchai Air Company Limited<br>－蒂芬妮人妖秀 （Tiffany’s Show）</p>
</li>
<li><p>清迈Chiang Mai</p>
</li>
<li><p>Cozy Inn Chiang Mai（清迈舒适住宿加早餐旅馆）</p>
</li>
<li><p>–</p>
</li>
<li><p>–</p>
<h2 id="大致路线"><a href="#大致路线" class="headerlink" title="大致路线"></a>大致路线</h2><h3 id="［｀芭提雅的格兰岛的酒店已经没有房了22-29号-所以只有在芭提雅住3天｀］"><a href="#［｀芭提雅的格兰岛的酒店已经没有房了22-29号-所以只有在芭提雅住3天｀］" class="headerlink" title="［｀芭提雅的格兰岛的酒店已经没有房了22-29号,所以只有在芭提雅住3天｀］"></a>［｀芭提雅的格兰岛的酒店已经没有房了22-29号,所以只有在芭提雅住3天｀］</h3></li>
</ul>
<ul>
<li>1.(22号)一下飞机(曼谷素万那普)就搭车到 (芭提雅Pattaya)</li>
</ul>
<ul>
<li><p>2.(22-23-24-25号早上)芭提雅-格兰岛(24号可到岛上游玩一天,傍晚返回芭提雅)(住3晚)</p>
</li>
<li><p>4.(25晚上-26号早上)芭提雅-曼谷-清迈(坐大巴最省事）</p>
</li>
<li><p>坐飞机要从芭提雅坐车到曼谷估计2小时，等飞一个小时，飞一个小时，最快也要4到5个小时)</p>
</li>
<li><p>坐火车，先到曼谷 2 小时，等1小时，坐11小时</p>
</li>
<li><p>坐大巴车直达要12小时</p>
</li>
<li><p>5.(26-27-28号中午)清迈(住2晚)</p>
</li>
<li><p>6.(28-29号)清迈-曼谷(路程搭火车11小时，睡一觉)(也可把在芭提雅的一天提出来，放到清迈或曼谷)</p>
</li>
</ul>
<hr>
<hr>
<h2 id="详细路线"><a href="#详细路线" class="headerlink" title="详细路线"></a>详细路线</h2><h3 id="芭提雅路线-不一定要这样走的"><a href="#芭提雅路线-不一定要这样走的" class="headerlink" title="芭提雅路线(不一定要这样走的)"></a>芭提雅路线(不一定要这样走的)</h3><h4 id="D1-23号-东芭乐园-3小时-→七珍佛山或九世皇庙-→-四方水上市场-四合镇水乡-2小时-→-芭提雅海滩-2小时-→-蒂芬妮人妖秀-1-5小时"><a href="#D1-23号-东芭乐园-3小时-→七珍佛山或九世皇庙-→-四方水上市场-四合镇水乡-2小时-→-芭提雅海滩-2小时-→-蒂芬妮人妖秀-1-5小时" class="headerlink" title="D1(23号):东芭乐园(3小时)→七珍佛山或九世皇庙 → 四方水上市场/四合镇水乡(2小时) → 芭提雅海滩(2小时) → 蒂芬妮人妖秀(1.5小时)"></a>D1(23号):东芭乐园(3小时)→七珍佛山或九世皇庙 → 四方水上市场/四合镇水乡(2小时) → 芭提雅海滩(2小时) → 蒂芬妮人妖秀(1.5小时)</h4><h4 id="D2-24号-格兰岛-浮潜-海底漫步-滑翔伞-摩托艇-香蕉船-可以酒店套票或到walking-street买票150B-人"><a href="#D2-24号-格兰岛-浮潜-海底漫步-滑翔伞-摩托艇-香蕉船-可以酒店套票或到walking-street买票150B-人" class="headerlink" title="D2(24号):格兰岛(浮潜+海底漫步+滑翔伞+摩托艇+香蕉船)(可以酒店套票或到walking street买票150B/人)"></a>D2(24号):格兰岛(浮潜+海底漫步+滑翔伞+摩托艇+香蕉船)(可以酒店套票或到walking street买票150B/人)</h4><h4 id="D3-25号-行李可以先寄存在酒店-gt-泰国热带水果园-3小时-→-尚泰芭提雅海滩购物中心-2小时"><a href="#D3-25号-行李可以先寄存在酒店-gt-泰国热带水果园-3小时-→-尚泰芭提雅海滩购物中心-2小时" class="headerlink" title="D3(25号):(行李可以先寄存在酒店) -&gt;泰国热带水果园(3小时) → 尚泰芭提雅海滩购物中心(2小时)"></a>D3(25号):(行李可以先寄存在酒店) -&gt;泰国热带水果园(3小时) → 尚泰芭提雅海滩购物中心(2小时)</h4><hr>
<h3 id="清迈路线-不一定要这样走的"><a href="#清迈路线-不一定要这样走的" class="headerlink" title="清迈路线(不一定要这样走的)"></a>清迈路线(不一定要这样走的)</h3><h6 id="D1-26号-清迈古城-半天-→-契迪龙寺-1小时-→-塔佩门-1小时"><a href="#D1-26号-清迈古城-半天-→-契迪龙寺-1小时-→-塔佩门-1小时" class="headerlink" title="D1(26号):清迈古城(半天) → 契迪龙寺(1小时) → 塔佩门(1小时)"></a>D1(26号):清迈古城(半天) → 契迪龙寺(1小时) → 塔佩门(1小时)</h6><h6 id="D2-27号-素贴山-2小时-→-双龙寺-1小时-→-蒲屏皇宫-1小时-→-清迈大学-1小时-→-宁曼路-1小时"><a href="#D2-27号-素贴山-2小时-→-双龙寺-1小时-→-蒲屏皇宫-1小时-→-清迈大学-1小时-→-宁曼路-1小时" class="headerlink" title="D2(27号):素贴山(2小时) → 双龙寺(1小时) → 蒲屏皇宫(1小时) → 清迈大学(1小时) → 宁曼路(1小时)"></a>D2(27号):素贴山(2小时) → 双龙寺(1小时) → 蒲屏皇宫(1小时) → 清迈大学(1小时) → 宁曼路(1小时)</h6><h6 id="D3-28号半天-美旺大象营-半天-→-清迈女子监狱按摩馆-马杀鸡馆-2小时-→-清迈夜间动物园-3小时-周日夜市-周日步行街-2小时"><a href="#D3-28号半天-美旺大象营-半天-→-清迈女子监狱按摩馆-马杀鸡馆-2小时-→-清迈夜间动物园-3小时-周日夜市-周日步行街-2小时" class="headerlink" title="D3(28号半天):美旺大象营(半天) → 清迈女子监狱按摩馆(马杀鸡馆)(2小时) → 清迈夜间动物园(3小时) -周日夜市(周日步行街)(2小时)"></a>D3(28号半天):美旺大象营(半天) → 清迈女子监狱按摩馆(马杀鸡馆)(2小时) → 清迈夜间动物园(3小时) -周日夜市(周日步行街)(2小时)</h6><h5 id="丛林飞跃-5小时-→-周日夜市-周日步行街-2小时"><a href="#丛林飞跃-5小时-→-周日夜市-周日步行街-2小时" class="headerlink" title="丛林飞跃(5小时) → 周日夜市(周日步行街)(2小时)"></a>丛林飞跃(5小时) → 周日夜市(周日步行街)(2小时)</h5><h6 id="清迈女子监狱按摩馆"><a href="#清迈女子监狱按摩馆" class="headerlink" title="清迈女子监狱按摩馆"></a><a href="http://bbs.16fan.com/thread-117881-1-1.html">清迈女子监狱按摩馆</a></h6><pre><code>价格：足底按摩150B/时、泰式按摩180B/时
地址：地址在三王广场后面的巷子里，营业到下午4点，只接受当天预约，方法是早上8点到店里排队预约。
营业时间：星期一至星期五：上午08：00~下午4：30；星期六至星期日：上午09：00~下午4：30
是否要预约：只接受当天预约，早上8点到店里排队预约，过去要拿号在外等几分钟。</code></pre>
<h6 id="美旺大象城"><a href="#美旺大象城" class="headerlink" title="美旺大象城"></a><a href="http://www.chuguoqu.com/au/product-13635/">美旺大象城</a></h6><pre><code>离清迈市区开车1个多小时。建议当地参团前往</code></pre>
<h6 id="丛林飞跃"><a href="#丛林飞跃" class="headerlink" title="丛林飞跃"></a><a href="http://bbs.16fan.com/thread-332616-1-1.html">丛林飞跃</a></h6><pre><code>听说不太安全    </code></pre>
<hr>
<hr>
<h2 id="交通详细"><a href="#交通详细" class="headerlink" title="交通详细"></a>交通详细</h2><h3 id="曼谷-素万那普-到-芭提雅Pattaya"><a href="#曼谷-素万那普-到-芭提雅Pattaya" class="headerlink" title="曼谷 素万那普  到 (芭提雅Pattaya)"></a>曼谷 素万那普  到 (芭提雅Pattaya)</h3><ul>
<li>1.的士(打表)</li>
<li>2.389 路大巴 - 素旺那普机场——芭提雅</li>
<li>3.<a href="http://taiiwan.com.tw/7159/bangkok-airport-pattaya-transportation">机场班车</a></li>
</ul>
<h3 id="芭提雅－清迈-大巴买票流程"><a href="#芭提雅－清迈-大巴买票流程" class="headerlink" title="芭提雅－清迈(大巴买票流程)"></a>芭提雅－清迈(大巴买票流程)</h3><ul>
<li>1.芭提雅-清迈</li>
<li><a href="http://bbs.qyer.com/thread-1107179-1.html">大巴车教程1</a></li>
<li><a href="http://www.mafengwo.cn/wenda/detail-2193606.html">大巴车教程2</a></li>
</ul>
<ul>
<li><a href="http://bbs.16fan.com/forum.php?mod=viewthread&tid=551454">大巴车教程3</a></li>
<li><a href="http://bbs.tianya.cn/post-no11-4011445-1.shtml">泰国NCA大巴乘车指南</a></li>
<li><a href="http://bbs.16fan.com/thread-112755-1-1.html">泰国NCA大巴乘车指南2</a></li>
<li><a href="http://place.qyer.com/poi/V2YJY1FkBzJTY1I_/">芭堤雅NCA车站</a></li>
</ul>
<ul>
<li><p>2.至少提前一天(24号)去买票</p>
</li>
<li><p>3.买票的车站(芭提雅NCA车站)在(芭提雅南边,sukhumvit road中文：素坤逸路59号)</p>
</li>
<li><p>4.票价  ，750b一个人（150元）</p>
</li>
<li><p>5.可以提前30天，打电话订票，9号键为英语。预订好对方会给你一个号码，到当地任何一家7-11就可以直接购买。也可以提前50天，并可以凭电话中的所得确认码在7-11付费，凭付款单上车，7-11会收取20泰铢手续费，订票电话：</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">　* 027900009</span><br><span class="line">　* 029360009</span><br></pre></td></tr></table></figure>



<h3 id="清迈-曼谷"><a href="#清迈-曼谷" class="headerlink" title="清迈-曼谷"></a>清迈-曼谷</h3><ul>
<li>2.<a href="http://bbs.16fan.com/thread-115740-1-1.html">火车订票1</a></li>
</ul>
<hr>
<hr>
<h1 id="地图"><a href="#地图" class="headerlink" title="地图"></a>地图</h1><h2 id="芭提雅旅游地图"><a href="#芭提雅旅游地图" class="headerlink" title="芭提雅旅游地图"></a>芭提雅旅游地图</h2><h4 id="Sabai-Resort（芭提雅旅游地图）1"><a href="#Sabai-Resort（芭提雅旅游地图）1" class="headerlink" title="Sabai Resort（芭提雅旅游地图）1"></a>Sabai Resort（芭提雅旅游地图）1</h4><p><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/picture_detail/Pattaya_travel_1.png" alt="Smaller icon"></p>
<h4 id="Sabai-Resort（芭提雅旅游地图）2"><a href="#Sabai-Resort（芭提雅旅游地图）2" class="headerlink" title="Sabai Resort（芭提雅旅游地图）2"></a>Sabai Resort（芭提雅旅游地图）2</h4><p><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/picture_detail/Pattaya_travel_2.png" alt="Smaller icon"></p>
<h4 id="Sabai-Resort（芭提雅旅游地图）3"><a href="#Sabai-Resort（芭提雅旅游地图）3" class="headerlink" title="Sabai Resort（芭提雅旅游地图）3"></a>Sabai Resort（芭提雅旅游地图）3</h4><p><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/picture_detail/Pattaya_travel_3.png" alt="Smaller icon"></p>
<h2 id="清迈旅游地图"><a href="#清迈旅游地图" class="headerlink" title="清迈旅游地图"></a>清迈旅游地图</h2><h4 id="Chiang-Mai（清迈旅游地图）1"><a href="#Chiang-Mai（清迈旅游地图）1" class="headerlink" title="Chiang Mai（清迈旅游地图）1"></a>Chiang Mai（清迈旅游地图）1</h4><p><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/picture_detail/Chiang_Mai_travel_1.png" alt="Smaller icon"></p>
<h4 id="Chiang-Mai（清迈旅游地图）2"><a href="#Chiang-Mai（清迈旅游地图）2" class="headerlink" title="Chiang Mai（清迈旅游地图）2"></a>Chiang Mai（清迈旅游地图）2</h4><p><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/picture_detail/Chiang_Mai_travel_2.png" alt="Smaller icon"></p>
<h4 id="Chiang-Mai（清迈旅游地图）3"><a href="#Chiang-Mai（清迈旅游地图）3" class="headerlink" title="Chiang Mai（清迈旅游地图）3"></a>Chiang Mai（清迈旅游地图）3</h4><p><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/picture_detail/Chiang_Mai_travel_3.png" alt="Smaller icon"></p>
<h4 id="Chiang-Mai（清迈旅游地图）4"><a href="#Chiang-Mai（清迈旅游地图）4" class="headerlink" title="Chiang Mai（清迈旅游地图）4"></a>Chiang Mai（清迈旅游地图）4</h4><p><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/picture_detail/Chiang_Mai_travel_4.jpg" alt="Smaller icon"></p>
<h2 id="酒店地图"><a href="#酒店地图" class="headerlink" title="酒店地图"></a>酒店地图</h2><h3 id="Pattaya-芭提雅-Sabai-Resort（萨拜度假酒店）"><a href="#Pattaya-芭提雅-Sabai-Resort（萨拜度假酒店）" class="headerlink" title="Pattaya 芭提雅 Sabai Resort（萨拜度假酒店）"></a>Pattaya 芭提雅 Sabai Resort（萨拜度假酒店）</h3><h4 id="Sabai-Resort（萨拜度假酒店）1"><a href="#Sabai-Resort（萨拜度假酒店）1" class="headerlink" title="Sabai Resort（萨拜度假酒店）1"></a>Sabai Resort（萨拜度假酒店）1</h4><p><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/picture_detail/SabaiResort_Hotel.png" alt="Smaller icon"></p>
<h4 id="Sabai-Resort（萨拜度假酒店）2"><a href="#Sabai-Resort（萨拜度假酒店）2" class="headerlink" title="Sabai Resort（萨拜度假酒店）2"></a>Sabai Resort（萨拜度假酒店）2</h4><p> <img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/picture_detail/SabaiResort_Hotel_2.png" alt="Smaller icon"></p>
<h3 id="清迈Chiang-Mai-Cozy-（清迈舒适住宿加早餐旅馆）Inn-Chiang-Mai"><a href="#清迈Chiang-Mai-Cozy-（清迈舒适住宿加早餐旅馆）Inn-Chiang-Mai" class="headerlink" title="清迈Chiang Mai Cozy （清迈舒适住宿加早餐旅馆）Inn Chiang Mai"></a>清迈Chiang Mai Cozy （清迈舒适住宿加早餐旅馆）Inn Chiang Mai</h3><h2 id="芭提雅汽车站地址"><a href="#芭提雅汽车站地址" class="headerlink" title="芭提雅汽车站地址"></a>芭提雅汽车站地址</h2><h4 id="Sabai-Resort（芭提雅汽车站地址）1"><a href="#Sabai-Resort（芭提雅汽车站地址）1" class="headerlink" title="Sabai Resort（芭提雅汽车站地址）1"></a>Sabai Resort（芭提雅汽车站地址）1</h4><p> <img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/picture_detail/Pattaya_NCA_station_1.png" alt="Smaller icon"></p>
<h4 id="Sabai-Resort（芭提雅汽车站地址）2"><a href="#Sabai-Resort（芭提雅汽车站地址）2" class="headerlink" title="Sabai Resort（芭提雅汽车站地址）2"></a>Sabai Resort（芭提雅汽车站地址）2</h4><p> <img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/picture_detail/Pattaya_NCA_station_2.png" alt="Smaller icon"></p>
<h4 id="Sabai-Resort（芭提雅汽车站地址）3"><a href="#Sabai-Resort（芭提雅汽车站地址）3" class="headerlink" title="Sabai Resort（芭提雅汽车站地址）3"></a>Sabai Resort（芭提雅汽车站地址）3</h4><p> <img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/picture_detail/Pattaya_NCA_station_3.png" alt="Smaller icon"></p>
<h2 id="清迈汽车站地址"><a href="#清迈汽车站地址" class="headerlink" title="清迈汽车站地址"></a>清迈汽车站地址</h2><h3 id="清迈汽车站地址1"><a href="#清迈汽车站地址1" class="headerlink" title="清迈汽车站地址1"></a>清迈汽车站地址1</h3><p><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/picture_detail/Chiang_Mai_NCA_station_1.png" alt="Smaller icon"></p>
<h3 id="清迈汽车站地址2"><a href="#清迈汽车站地址2" class="headerlink" title="清迈汽车站地址2"></a>清迈汽车站地址2</h3><p><img src="http://pic.pgyjz.cn/blog/travel/Thailand/before/picture_detail/Chiang_Mai_NCA_station_2.jpg" alt="Smaller icon"></p>
<hr>
<hr>
<h1 id="不确定性"><a href="#不确定性" class="headerlink" title="不确定性"></a>不确定性</h1><h3 id="1-清迈－曼谷的火车-如果买不到票-23或24号将知道-，就坐飞机，提前一天回曼谷-在曼谷过夜-或29号才回曼谷-在清迈过夜-要先订好酒店和机票"><a href="#1-清迈－曼谷的火车-如果买不到票-23或24号将知道-，就坐飞机，提前一天回曼谷-在曼谷过夜-或29号才回曼谷-在清迈过夜-要先订好酒店和机票" class="headerlink" title="1.清迈－曼谷的火车(如果买不到票(23或24号将知道)，就坐飞机，提前一天回曼谷(在曼谷过夜)或29号才回曼谷(在清迈过夜),要先订好酒店和机票)"></a>1.清迈－曼谷的火车(如果买不到票(23或24号将知道)，就坐飞机，提前一天回曼谷(在曼谷过夜)或29号才回曼谷(在清迈过夜),要先订好酒店和机票)</h3><h3 id="2-各个景点的活动不知会不会关闭"><a href="#2-各个景点的活动不知会不会关闭" class="headerlink" title="2.各个景点的活动不知会不会关闭"></a>2.各个景点的活动不知会不会关闭</h3><h3 id="3-这两天台风的影响"><a href="#3-这两天台风的影响" class="headerlink" title="3.这两天台风的影响."></a>3.这两天台风的影响.</h3><h1 id="Happy-Ending"><a href="#Happy-Ending" class="headerlink" title="Happy Ending"></a>Happy Ending</h1>]]></content>
      <categories>
        <category>Travel</category>
      </categories>
      <tags>
        <tag>Travel</tag>
      </tags>
  </entry>
  <entry>
    <title>Android APP基本组件</title>
    <url>/2018/07/04/Android%20APP%E5%9F%BA%E6%9C%AC%E7%BB%84%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="Android-APP基本组件"><a href="#Android-APP基本组件" class="headerlink" title="Android APP基本组件"></a>Android APP基本组件</h1><blockquote>
<p>记录 APP 相关的组件及链接.</p>
</blockquote>
<a id="more"></a>

<h3 id="1-通用开发"><a href="#1-通用开发" class="headerlink" title="1.通用开发"></a>1.通用开发</h3><h3 id="2-Android-所用的外部库"><a href="#2-Android-所用的外部库" class="headerlink" title="2.Android 所用的外部库"></a><a href="#third_lib">2.Android 所用的外部库</a></h3><h3 id="3-Android-自带的-View"><a href="#3-Android-自带的-View" class="headerlink" title="3.Android 自带的 View"></a><a href="#self_android_view">3.Android 自带的 View</a></h3><hr>
<hr>
<hr>
<h3 id="1-通用开发-1"><a href="#1-通用开发-1" class="headerlink" title="1.通用开发"></a>1.通用开发</h3><hr>
<h3 id="2-Android-所用的外部库-1"><a href="#2-Android-所用的外部库-1" class="headerlink" title="2.Android 所用的外部库"></a>2.Android 所用的外部库<a name="third_lib"/></h3><h5 id="1-网络相关"><a href="#1-网络相关" class="headerlink" title="1.网络相关"></a>1.网络相关</h5><ul>
<li><p>1.异步http请求</p>
<blockquote>
<p>android-async-http</p>
</blockquote>
<ul>
<li><p><a href="https://github.com/loopj/android-async-http">1.GitHub 上的源码及使用文档</a></p>
</li>
<li><p><a href="http://www.jianshu.com/p/2fe3e305404e">2.http://www.jianshu.com/p/2fe3e305404e</a></p>
</li>
<li><p>3.混淆代码:</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	#android-async-http</span><br><span class="line">-keep class cz.msebera.android.httpclient.** &#123; *; &#125;</span><br><span class="line">-keep class com.loopj.android.http.** &#123; *; &#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>2.http 请求封装</p>
<blockquote>
<p>httpmime-4.1.3.jar</p>
<p><a href="https://github.com/apache/httpcomponents-client">https://github.com/apache/httpcomponents-client</a></p>
<p><a href="http://www.jianshu.com/p/ab6a2b90ae5e">http://www.jianshu.com/p/ab6a2b90ae5e</a></p>
</blockquote>
</li>
</ul>
<ul>
<li>3.网络图片加载库 Fresco<blockquote>
<p>com.facebook.fresco:fresco:0.10.+</p>
</blockquote>
<ul>
<li><a href="https://github.com/facebook/fresco">1.https://github.com/facebook/fresco</a></li>
<li><a href="https://www.fresco-cn.org/docs/index.html">2.https://www.fresco-cn.org/docs/index.html</a></li>
<li><a href="http://www.jianshu.com/p/bb32bca8796b">3.http://www.jianshu.com/p/bb32bca8796b</a></li>
<li><a href="http://frescolib.org/docs/shipping.html">4.官方混淆介绍</a></li>
<li>5.图片加载比例的显示效果 <code>scaleType</code><ul>
<li><a href="https://stackoverflow.com/questions/33174607/fresco-library-issues">1.不能用 <code>android:scaleType </code> ,要用 <code>fresco:actualImageScaleType </code> 代替.</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<ul>
<li><p>4.okhttp</p>
<ul>
<li>1.<a href="https://github.com/square/okhttp">GitHub 地址</a></li>
<li>2.<a href="https://www.jianshu.com/p/c478d7a20d03">Android OkHttp的基本用法</a></li>
</ul>
</li>
<li><p>5.Gson</p>
<ul>
<li><a href="https://www.jianshu.com/p/886f7b7fca7d">1.用法1</a></li>
<li><a href="https://www.jianshu.com/p/e740196225a4">2.用法2</a></li>
<li><a href="https://github.com/google/gson">3.GitHub 源代码</a></li>
<li>4.混淆代码:</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#---------------Begin: proguard configuration for Gson  ----------</span><br><span class="line"># Gson uses generic type information stored in a class file when working with fields. Proguard</span><br><span class="line"># removes such information by default, so configure it to keep all of it.</span><br><span class="line">-keepattributes Signature</span><br><span class="line"># For using GSON @Expose annotation</span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line"># Gson specific classes</span><br><span class="line">-dontwarn sun.misc.**</span><br><span class="line">#-keep class com.google.gson.stream.** &#123; *; &#125;</span><br><span class="line"># Application classes that will be serialized&#x2F;deserialized over Gson</span><br><span class="line">-keep class com.google.gson.examples.android.model.** &#123; *; &#125;</span><br><span class="line"># Prevent proguard from stripping interface information from TypeAdapterFactory,</span><br><span class="line"># JsonSerializer, JsonDeserializer instances (so they can be used in @JsonAdapter)</span><br><span class="line">-keep class * implements com.google.gson.TypeAdapterFactory</span><br><span class="line">-keep class * implements com.google.gson.JsonSerializer</span><br><span class="line">-keep class * implements com.google.gson.JsonDeserializer</span><br></pre></td></tr></table></figure>



<h5 id="2-其它相关"><a href="#2-其它相关" class="headerlink" title="2.其它相关"></a>2.其它相关</h5><ul>
<li><ol>
<li>滚动选择器(com.bigkoo.pickerview)</li>
</ol>
<ul>
<li><a href="https://github.com/Bigkoo/Android-PickerView">1.GitHub 地址</a></li>
<li><a href="http://www.jianshu.com/p/bdbe1dd7926c">2.Android仿ios条件选择器pickerview</a></li>
<li><a href="https://github.com/Bigkoo/Android-PickerView/issues/544">3.proguard 不用提供</a></li>
</ul>
</li>
<li><p>5.一键生成 View 与 Activity 的代码链接</p>
<blockquote>
<p>‘com.jakewharton:butterknife:8.8.1’</p>
<p><a href="https://github.com/JakeWharton/butterknife">https://github.com/JakeWharton/butterknife</a></p>
<p><a href="http://www.jianshu.com/p/390677e35048">http://www.jianshu.com/p/390677e35048</a></p>
</blockquote>
</li>
<li><p>6.简化信息订阅的方法.</p>
<blockquote>
<p>‘org.greenrobot:eventbus:3.1.1’</p>
<p><a href="https://github.com/greenrobot/EventBus">https://github.com/greenrobot/EventBus</a></p>
<p><a href="http://www.jianshu.com/p/bd645ace4f73">http://www.jianshu.com/p/bd645ace4f73</a></p>
</blockquote>
</li>
<li><p>8.图片的选择器</p>
<blockquote>
<p><a href="https://github.com/crazycodeboy/TakePhoto">https://github.com/crazycodeboy/TakePhoto</a></p>
</blockquote>
</li>
<li><p>9.Bugly Crash report </p>
<ul>
<li><a href="https://github.com/BuglyDevTeam">1.GitHub 地址</a></li>
<li><a href="https://bugly.qq.com/v2/">2.官方文档</a></li>
<li><a href="https://buglydevteam.github.io/">3.Bugly技术团队博客</a></li>
<li><a href="http://blog.tian.tianlovezhen.site/2018/02/08/bugly%E9%9B%86%E6%88%90/">4.Android 个人集成的例子</a></li>
<li><a href="https://bugly.qq.com/docs/user-guide/instruction-manual-android/?v=20180709165613">5.混淆代码</a></li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-dontwarn com.tencent.bugly.**</span><br><span class="line">-keep public class com.tencent.bugly.**&#123;*;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>10.免 root 查看 db 信息 (facebook stetho)<ul>
<li><a href="https://github.com/facebook/stetho">1.Stetho GitHub 地址</a></li>
<li><a href="https://ghzjtian.github.io/2017/12/15/Android_%E5%85%8Droot%E6%9F%A5%E7%9C%8BDB/">2.个人使用心得及教程</a></li>
<li>3.混淆代码</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Stetho</span><br><span class="line">-keep class com.facebook.stetho.** &#123; *; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>11.自定义 Toast 显示(有 icon)<ul>
<li><a href="https://github.com/GrenderG/Toasty">1.GitHub 地址</a></li>
<li>2.混淆代码</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Toasty</span><br><span class="line">-keep class es.dmoral.toasty.** &#123; *; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>12.自定义的 Logger 显示<ul>
<li><a href="https://github.com/orhanobut/logger">1.orhanobut logger GitHub 地址</a></li>
<li>2.混淆代码:</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Logger</span><br><span class="line">-keep class com.orhanobut.logger.** &#123; *; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<ul>
<li><p>13.下拉刷新控件 SmartRefreshLayout</p>
<ul>
<li><a href="https://github.com/scwang90/SmartRefreshLayout">1.GitHub 地址</a></li>
<li><a href="https://segmentfault.com/a/1190000010066071">2.教程</a></li>
<li><a href="https://github.com/scwang90/SmartRefreshLayout#%E6%B7%B7%E6%B7%86">3.官方介绍说不用混淆</a></li>
</ul>
</li>
<li><p>14.DataBase</p>
<ul>
<li>1.Realm(以前用过，发现有坑,现在观望中)<ul>
<li><a href="https://realm.io/cn/docs/java/latest">1.官网中文文档(不是最新)</a></li>
<li><a href="https://realm.io/docs/java/latest">2.官网英文文档</a></li>
<li><a href="https://www.zhihu.com/question/30298585">3.怎样看待 Realm 这个移动数据库？</a></li>
<li><a href="https://www.jianshu.com/p/50e0efb66bdf">4.Realm数据库 从入门到“放弃”</a></li>
<li><a href="http://blog.tian.tianlovezhen.site/2018/07/30/Android_Realm%E7%9A%84%E4%BD%BF%E7%94%A8/#more">5.个人的简单开发分享</a></li>
</ul>
</li>
<li>2.SQLite<ul>
<li>1.sqlitebrowser(SQLite 的工具)<ul>
<li><a href="https://github.com/sqlitebrowser/sqlitebrowser">1.GitHub 源码</a></li>
<li><a href="https://sqlitebrowser.org/">2.官网(MacOS 上会闪退，暂时运行不了)</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><p>15.Dialog</p>
<ul>
<li><a href="https://github.com/afollestad/material-dialogs">1.material-dialogs</a><ul>
<li><a href="https://aidanfollestad.com/">1.作者(Aidan Follestad)是个 95 后的牛人</a></li>
<li>2.不用另外配置 <code>proguard</code> 的信息.</li>
<li>3.强大的 <code>Dialog</code> 第三方包,基本上所有的 <code>Dialog</code> 用到的功能，这里都有了!!</li>
</ul>
</li>
</ul>
</li>
<li><p>16.权限申请</p>
<ul>
<li><a href="https://github.com/tbruyelle/RxPermissions">1.RxPermissions</a><ul>
<li><a href="https://github.com/tbruyelle/RxPermissions/issues/45">1.Proguard 混淆</a><br><code>-dontwarn com.tbruyelle.rxpermissions.**</code></li>
</ul>
</li>
</ul>
</li>
<li><p><a href="https://github.com/Rukey7/MvpApp">17.Android MVP Architecture Study</a></p>
<ul>
<li>1.里面有用到大量的第三方库.</li>
</ul>
</li>
</ul>
<hr>
<h3 id="3-Android-自带"><a href="#3-Android-自带" class="headerlink" title="3.Android 自带"></a>3.Android 自带<a name="self_android_view"/></h3><ul>
<li><p>1.BottomNavigationView </p>
<ul>
<li>1.Android 自带控件，类似于 ListView.但是有 List 和 Grid 的效果.</li>
</ul>
</li>
<li><p><a href="https://stackoverflow.com/questions/3656371/dynamic-string-using-string-xml">2.Android xml 字符串格式化</a></p>
</li>
<li><p>3.SearchView </p>
<ul>
<li><a href="https://www.jianshu.com/p/00cb87a2964f">1.SearchView的使用</a></li>
<li><a href="https://developer.android.com/reference/android/support/v7/widget/SearchView">2.官方文档</a></li>
<li><a href="http://tangpj.com/2016/09/11/searchview/">3.Android SearchView的高级用法，解决关于SearchView的样式与控制问题</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android BottomNavigationView 的用法</title>
    <url>/2018/07/18/Android_%20BottomNavigationView_%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<h1 id="Android-BottomNavigationView-的用法"><a href="#Android-BottomNavigationView-的用法" class="headerlink" title="Android BottomNavigationView 的用法"></a>Android BottomNavigationView 的用法</h1><ul>
<li>1.用 BottomNavigationView + flagment 实现 Tabbar 切换效果.</li>
</ul>
<a id="more"></a>

<h2 id="1-BottomNavigationView"><a href="#1-BottomNavigationView" class="headerlink" title="1. BottomNavigationView"></a>1. BottomNavigationView</h2><ul>
<li>1.改变底栏 icon 和 文字 的颜色<ul>
<li>1.参考1:<a href="https://stackoverflow.com/questions/42346899/bottomnavigationbar-change-the-tab-icon-color">https://stackoverflow.com/questions/42346899/bottomnavigationbar-change-the-tab-icon-color</a></li>
<li>2.相关的代码</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;activity_brake.xml</span><br><span class="line">app:itemBackground&#x3D;&quot;@color&#x2F;colorYellow&quot;</span><br><span class="line">app:itemIconTint&#x3D;&quot;@drawable&#x2F;bottom_icon_selector&quot;</span><br><span class="line">app:itemTextColor&#x3D;&quot;@color&#x2F;colorAccent&quot;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;bottom_icon_selector.xml</span><br><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;selector xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;&gt;</span><br><span class="line">    &lt;item android:state_checked&#x3D;&quot;true&quot; android:color&#x3D;&quot;@color&#x2F;colorWhite&quot; &#x2F;&gt;</span><br><span class="line">    &lt;item android:color&#x3D;&quot;@color&#x2F;colorBlack&quot;  &#x2F;&gt;</span><br><span class="line">&lt;&#x2F;selector&gt;</span><br></pre></td></tr></table></figure>


<ul>
<li>3.相关的图片<img src="/assets/imgs/Android/ScreenShot_2018-07-18_14.37.11.png.png">



</li>
</ul>
<hr>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android_Realm的使用</title>
    <url>/2018/07/30/Android_Realm%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<h1 id="Android-Realm的使用"><a href="#Android-Realm的使用" class="headerlink" title="Android_Realm的使用"></a>Android_Realm的使用</h1><blockquote>
<p>1.Android 中使用 Realm 数据库</p>
</blockquote>
<a id="more"></a>


<h2 id="1-参考资料"><a href="#1-参考资料" class="headerlink" title="1.参考资料"></a>1.参考资料</h2><ul>
<li>1.参考资料<ul>
<li><a href="https://realm.io/cn/docs/java/latest">1.官网中文文档(不是最新)</a></li>
<li><a href="https://realm.io/docs/java/latest">2.官网英文文档</a></li>
<li><a href="https://www.zhihu.com/question/30298585">3.怎样看待 Realm 这个移动数据库？</a></li>
<li><a href="https://www.jianshu.com/p/50e0efb66bdf">4.Realm数据库 从入门到“放弃”</a></li>
<li><a href="https://www.jianshu.com/p/28912c2f31db">5.Realm for Android详细教程</a></li>
</ul>
</li>
</ul>
<h2 id="2-初步使用教程"><a href="#2-初步使用教程" class="headerlink" title="2.初步使用教程"></a>2.初步使用教程</h2><ul>
<li>1.在项目的 <code>build.gradle</code> 中，写入以下代码 <code> classpath &quot;io.realm:realm-gradle-plugin:5.4.0&quot;</code></li>
<li>2.在 <code>app</code> 的 <code>build.gradle</code> 中，写入 <code>apply plugin: &#39;realm-android&#39;</code> 和 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">realm &#123;</span><br><span class="line">    syncEnabled &#x3D; true;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>

<ul>
<li><p>3.在 <code>Application</code> 中的 <code>onCreate</code> 方法中加入 <code> Realm.init(this);</code></p>
</li>
<li><p>4.简单的数据操作</p>
<ul>
<li>1.增加</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;添加</span><br><span class="line">        Realm realm &#x3D; Realm.getDefaultInstance();</span><br><span class="line">        realm.beginTransaction();</span><br><span class="line"></span><br><span class="line">        SearchHistoryBean history &#x3D; realm.createObject(SearchHistoryBean.class);</span><br><span class="line">        history.setId(&quot;1&quot;);</span><br><span class="line">        history.setType(&quot;Brake&quot;);</span><br><span class="line">        history.setValue(query);</span><br><span class="line">        history.setSearchTime(System.currentTimeMillis());</span><br><span class="line"></span><br><span class="line">        realm.commitTransaction();</span><br></pre></td></tr></table></figure>

<ul>
<li>2.查询</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">   &#x2F;&#x2F;查询</span><br><span class="line">Realm mRealm &#x3D; Realm.getDefaultInstance();</span><br><span class="line">RealmResults&lt;SearchHistoryBean&gt; historys &#x3D; mRealm.where(SearchHistoryBean.class).findAll();</span><br><span class="line">QLLog.i(mRealm.copyFromRealm(historys).toString());</span><br></pre></td></tr></table></figure>


<ul>
<li>5.导出 APP 中 <code>realm</code> 的数据库:<ul>
<li>1.在 <code>AndroidStudio/Device File Explorer</code> 中，打开 <code>data/data/app_package/files/realm-object-ser</code> 中，右键，保存到桌面.</li>
<li>2.用 <code>Realm Studio</code> 打开上一步下载的 数据库文件。</li>
</ul>
</li>
</ul>
<img src="/assets/imgs/Android/ScreenShot_2018-07-30_16.54.11.png">

]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>代码混淆</title>
    <url>/2018/02/01/Android_apk%E6%B7%B7%E6%B7%86/</url>
    <content><![CDATA[<blockquote>
<p>记录 Android Minify 代码混淆相关</p>
</blockquote>
<a id="more"></a>


<h1 id="Android-Minify-代码混淆"><a href="#Android-Minify-代码混淆" class="headerlink" title="Android Minify 代码混淆"></a>Android Minify 代码混淆</h1><h3 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考:"></a><a href="#references">1.参考:</a></h3><h3 id="2-APP-中-build-gradle-的配置"><a href="#2-APP-中-build-gradle-的配置" class="headerlink" title="2.APP 中 build.gradle 的配置."></a><a href="#setting">2.APP 中 build.gradle 的配置.</a></h3><h3 id="3-proguard-rules-pro-混淆的代码-cramer-app"><a href="#3-proguard-rules-pro-混淆的代码-cramer-app" class="headerlink" title="3.proguard-rules.pro 混淆的代码(cramer app)"></a><a href="#proguard_code">3.proguard-rules.pro 混淆的代码(cramer app)</a></h3><h3 id="4-混淆后的反编译"><a href="#4-混淆后的反编译" class="headerlink" title="4.混淆后的反编译"></a><a href="#check_uncode">4.混淆后的反编译</a></h3><h3 id="5-注意事项"><a href="#5-注意事项" class="headerlink" title="5.注意事项"></a><a href="#attertian">5.注意事项</a></h3><hr>
<hr>
<hr>
<h3 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考:"></a>1.参考:<a name="references"/></h3><ul>
<li>1.<a href="https://www.jianshu.com/p/d7b7e903cfa7">Android Studio混淆打包</a></li>
<li>2.<a href="https://www.jianshu.com/p/f140a967b789">Android Studio Apk 打包 混淆</a></li>
<li>3.<a href="https://www.jianshu.com/p/b471db6a01af">https://www.jianshu.com/p/b471db6a01af</a></li>
<li></li>
<li>4.<a href="https://www.guardsquare.com/en/proguard/manual/examples#library">官方文档:</a></li>
<li>5.<a href="https://developer.android.com/studio/build/shrink-code.html">https://developer.android.com/studio/build/shrink-code.html</a></li>
<li>6.<a href="http://blog.csdn.net/qq_33689414/article/details/69630673">http://blog.csdn.net/qq_33689414/article/details/69630673</a></li>
</ul>
<hr>
<h3 id="2-APP-中-build-gradle-的配置-1"><a href="#2-APP-中-build-gradle-的配置-1" class="headerlink" title="2.APP 中 build.gradle 的配置."></a>2.APP 中 build.gradle 的配置.<a name="setting"/></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">buildTypes &#123;</span><br><span class="line">       release &#123;</span><br><span class="line">           minifyEnabled true</span><br><span class="line">           shrinkResources true</span><br><span class="line">           proguardFiles getDefaultProguardFile(&#39;proguard-android.txt&#39;), &#39;proguard-rules.pro&#39;</span><br><span class="line">           signingConfig signingConfigs.config</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       &#x2F;&#x2F;暂时测试都为 true,如果发现影响构建速度可以设置为 false</span><br><span class="line">       debug &#123;</span><br><span class="line">           minifyEnabled true</span><br><span class="line">           shrinkResources true</span><br><span class="line">           proguardFiles getDefaultProguardFile(&#39;proguard-android.txt&#39;), &#39;proguard-rules.pro&#39;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>


<h3 id="3-proguard-rules-pro-混淆的代码-cramer-APP"><a href="#3-proguard-rules-pro-混淆的代码-cramer-APP" class="headerlink" title="3.proguard-rules.pro 混淆的代码(cramer APP )"></a>3.proguard-rules.pro 混淆的代码(cramer APP )<a name="proguard_code"/></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">#############################################</span><br><span class="line">#</span><br><span class="line"># 对于一些基本指令的添加</span><br><span class="line">#</span><br><span class="line">#############################################</span><br><span class="line"></span><br><span class="line">-ignorewarnings</span><br><span class="line"></span><br><span class="line"># 代码混淆压缩比，在0~7之间，默认为5，一般不做修改</span><br><span class="line">-optimizationpasses 5</span><br><span class="line"></span><br><span class="line"># 混合时不使用大小写混合，混合后的类名为小写</span><br><span class="line">-dontusemixedcaseclassnames</span><br><span class="line"></span><br><span class="line"># 指定不去忽略非公共库的类</span><br><span class="line">-dontskipnonpubliclibraryclasses</span><br><span class="line"></span><br><span class="line"># 这句话能够使我们的项目混淆后产生映射文件</span><br><span class="line"># 包含有类名-&gt;混淆后类名的映射关系</span><br><span class="line">-verbose</span><br><span class="line"></span><br><span class="line"># 指定不去忽略非公共库的类成员</span><br><span class="line">-dontskipnonpubliclibraryclassmembers</span><br><span class="line"></span><br><span class="line"># 不做预校验，preverify是proguard的四个步骤之一，Android不需要preverify，去掉这一步能够加快混淆速度。</span><br><span class="line">-dontpreverify</span><br><span class="line"></span><br><span class="line"># 保留Annotation不混淆</span><br><span class="line">-keepattributes *Annotation*,InnerClasses</span><br><span class="line"></span><br><span class="line"># 避免混淆泛型</span><br><span class="line">-keepattributes Signature</span><br><span class="line"></span><br><span class="line"># 抛出异常时保留代码行号</span><br><span class="line">-keepattributes SourceFile,LineNumberTable</span><br><span class="line"></span><br><span class="line"># 指定混淆是采用的算法，后面的参数是一个过滤器</span><br><span class="line"># 这个过滤器是谷歌推荐的算法，一般不做更改</span><br><span class="line">-optimizations !code&#x2F;simplification&#x2F;cast,!field&#x2F;*,!class&#x2F;merging&#x2F;*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#############################################</span><br><span class="line">#</span><br><span class="line"># Android开发中一些需要保留的公共部分</span><br><span class="line">#</span><br><span class="line">#############################################</span><br><span class="line"></span><br><span class="line"># 保留我们使用的四大组件，自定义的Application等等这些类不被混淆</span><br><span class="line"># 因为这些子类都有可能被外部调用</span><br><span class="line">-keep public class * extends android.app.Activity</span><br><span class="line">-keep public class * extends android.app.Appliction</span><br><span class="line">-keep public class * extends android.app.Service</span><br><span class="line">-keep public class * extends android.content.BroadcastReceiver</span><br><span class="line">-keep public class * extends android.content.ContentProvider</span><br><span class="line">-keep public class * extends android.app.backup.BackupAgentHelper</span><br><span class="line">-keep public class * extends android.preference.Preference</span><br><span class="line">-keep public class * extends android.view.View</span><br><span class="line">-keep public class com.android.vending.licensing.ILicensingService</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 保留support下的所有类及其内部类</span><br><span class="line">-keep class android.support.** &#123;*;&#125;</span><br><span class="line"></span><br><span class="line"># 保留继承的</span><br><span class="line">-keep public class * extends android.support.v4.**</span><br><span class="line">-keep public class * extends android.support.v7.**</span><br><span class="line">-keep public class * extends android.support.annotation.**</span><br><span class="line"></span><br><span class="line"># 保留R下面的资源</span><br><span class="line">-keep class **.R$* &#123;*;&#125;</span><br><span class="line"></span><br><span class="line"># 保留本地native方法不被混淆</span><br><span class="line">-keepclasseswithmembernames class * &#123;</span><br><span class="line">    native &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留在Activity中的方法参数是view的方法，</span><br><span class="line"># 这样以来我们在layout中写的onClick就不会被影响</span><br><span class="line">-keepclassmembers class * extends android.app.Activity&#123;</span><br><span class="line">    public void *(android.view.View);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留枚举类不被混淆</span><br><span class="line">-keepclassmembers enum * &#123;</span><br><span class="line">    public static **[] values();</span><br><span class="line">    public static ** valueOf(java.lang.String);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留我们自定义控件（继承自View）不被混淆</span><br><span class="line">-keep public class * extends android.view.View&#123;</span><br><span class="line">    *** get*();</span><br><span class="line">    void set*(***);</span><br><span class="line">    public &lt;init&gt;(android.content.Context);</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet);</span><br><span class="line">    public &lt;init&gt;(android.content.Context, android.util.AttributeSet, int);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留Parcelable序列化类不被混淆</span><br><span class="line">-keep class * implements android.os.Parcelable &#123;</span><br><span class="line">    public static final android.os.Parcelable$Creator *;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 保留Serializable序列化的类不被混淆</span><br><span class="line">-keepnames class * implements java.io.Serializable</span><br><span class="line">-keepclassmembers class * implements java.io.Serializable &#123;</span><br><span class="line">    static final long serialVersionUID;</span><br><span class="line">    private static final java.io.ObjectStreamField[] serialPersistentFields;</span><br><span class="line">    !static !transient &lt;fields&gt;;</span><br><span class="line">    !private &lt;fields&gt;;</span><br><span class="line">    !private &lt;methods&gt;;</span><br><span class="line">    private void writeObject(java.io.ObjectOutputStream);</span><br><span class="line">    private void readObject(java.io.ObjectInputStream);</span><br><span class="line">    java.lang.Object writeReplace();</span><br><span class="line">    java.lang.Object readResolve();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 对于带有回调函数的onXXEvent、**On*Listener的，不能被混淆</span><br><span class="line">-keepclassmembers class * &#123;</span><br><span class="line">    void *(**On*Event);</span><br><span class="line">    void *(**On*Listener);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># webView处理，项目中没有使用到webView忽略即可</span><br><span class="line">-keepclassmembers class fqcn.of.javascript.interface.for.webview &#123;</span><br><span class="line">    public *;</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * extends android.webkit.webViewClient &#123;</span><br><span class="line">    public void *(android.webkit.WebView, java.lang.String, android.graphics.Bitmap);</span><br><span class="line">    public boolean *(android.webkit.WebView, java.lang.String);</span><br><span class="line">&#125;</span><br><span class="line">-keepclassmembers class * extends android.webkit.webViewClient &#123;</span><br><span class="line">    public void *(android.webkit.webView, jav.lang.String);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 移除Log类打印各个等级日志的代码，打正式包的时候可以做为禁log使用，这里可以作为禁止log打印的功能使用</span><br><span class="line"># 记得proguard-android.txt中一定不要加-dontoptimize才起作用</span><br><span class="line"># 另外的一种实现方案是通过BuildConfig.DEBUG的变量来控制</span><br><span class="line">#-assumenosideeffects class android.util.Log &#123;</span><br><span class="line">#    public static int v(...);</span><br><span class="line">#    public static int i(...);</span><br><span class="line">#    public static int w(...);</span><br><span class="line">#    public static int d(...);</span><br><span class="line">#    public static int e(...);</span><br><span class="line">#&#125;</span><br><span class="line"></span><br><span class="line">#############################################</span><br><span class="line">#</span><br><span class="line"># 项目中特殊处理部分</span><br><span class="line">#</span><br><span class="line">#############################################</span><br><span class="line"></span><br><span class="line">#-----------处理反射类---------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#-----------处理js交互---------------</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#-----------处理实体类---------------</span><br><span class="line"># 在开发的时候我们可以将所有的实体类放在一个包内，这样我们写一次混淆就行了。</span><br><span class="line">#-keep class com.blankj.data.bean.**&#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#保护 Application 类</span><br><span class="line">-keep class com.greenworks.guide.GreenworksApplication &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#保护 HttpManage 下的 bean 类</span><br><span class="line">-keep class com.greenworks.guide.net.HttpManage$ResultCallback &#123; *; &#125;</span><br><span class="line">-keep class com.greenworks.guide.net.HttpManage$Error &#123; *; &#125;</span><br><span class="line">-keep class com.greenworks.guide.net.HttpManage$ErrorEntity &#123; *; &#125;</span><br><span class="line"></span><br><span class="line"># keep 其它 bean 类</span><br><span class="line">-keep class com.greenworks.guide.eventbus.ChargeFinishEvent &#123; *; &#125;</span><br><span class="line">-keep class com.greenworks.guide.upgrade.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#-----------处理第三方依赖库---------</span><br><span class="line">#项目所用到的第三方的库,不要混淆</span><br><span class="line"></span><br><span class="line">#jar 包</span><br><span class="line"></span><br><span class="line">#android-async-http</span><br><span class="line">-keep class com.loopj.android.http.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#hiflying-iots-android-smartlink</span><br><span class="line">-keep class com.hiflying.smartlink.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#httpclient, httpmime</span><br><span class="line">-keep class org.apache.http.entity.mime.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#xlink-wifi-official-sdk,云智易 wifi  sdk</span><br><span class="line">-keep class io.xlink.wifi.sdk.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#自定义view</span><br><span class="line"></span><br><span class="line">#pickerview</span><br><span class="line">-keep class com.bigkoo.pickerview.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#bean,如果使用了Gson之类的工具要使被它解析的JavaBean类即实体类不被混淆。</span><br><span class="line">-keep class com.greenworks.guide.bean.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#网络自动下载 lib 包</span><br><span class="line"></span><br><span class="line">#android 包</span><br><span class="line">-keep class android.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#apache 包</span><br><span class="line">-keep class org.apache.http.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#facebook.fresco</span><br><span class="line">-keep class com.facebook.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#nordicsemi , DFU,</span><br><span class="line">-keep class no.nordicsemi.android.dfu.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#okhttp</span><br><span class="line">-keep class okhttp3.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#Event Bus</span><br><span class="line"># https:&#x2F;&#x2F;github.com&#x2F;greenrobot&#x2F;EventBus&#x2F;issues&#x2F;503</span><br><span class="line">-keepattributes *Annotation*</span><br><span class="line">-keepclassmembers class ** &#123;</span><br><span class="line">    @org.greenrobot.eventbus.Subscribe &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line">-keep enum org.greenrobot.eventbus.ThreadMode &#123; *; &#125;</span><br><span class="line"></span><br><span class="line"># Only required if you use AsyncExecutor</span><br><span class="line">-keepclassmembers class * extends org.greenrobot.eventbus.util.ThrowableFailureEvent &#123;</span><br><span class="line">    &lt;init&gt;(java.lang.Throwable);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#butterknife</span><br><span class="line">-keep class butterknife.** &#123; *; &#125;</span><br><span class="line">-dontwarn butterknife.internal.**</span><br><span class="line">-keep class **$$ViewBinder &#123; *; &#125;</span><br><span class="line">-keepclasseswithmembernames class * &#123;</span><br><span class="line">    @butterknife.* &lt;fields&gt;;</span><br><span class="line">&#125;</span><br><span class="line">-keepclasseswithmembernames class * &#123;</span><br><span class="line">    @butterknife.* &lt;methods&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#takephoto</span><br><span class="line">-keep class com.jph.takephoto.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#google map</span><br><span class="line">-keep class com.google.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#barteksc&#x2F;AndroidPdfViewer</span><br><span class="line">-keep class com.shockwave.**</span><br><span class="line"></span><br><span class="line">#orhanobut logger</span><br><span class="line">-keep class com.orhanobut.logger.** &#123; *; &#125;</span><br><span class="line"></span><br><span class="line">#nrf logger</span><br><span class="line">-keep class no.nordicsemi.android.log.** &#123; *; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="4-混淆后的反编译-1"><a href="#4-混淆后的反编译-1" class="headerlink" title="4.混淆后的反编译"></a>4.混淆后的反编译<a name="check_uncode"/></h3><blockquote>
<p>参考： <a href="https://www.jianshu.com/p/a21edfa632cf">https://www.jianshu.com/p/a21edfa632cf</a></p>
<p>所用到的软件的下载: 链接:<a href="https://pan.baidu.com/s/1kWySit5">https://pan.baidu.com/s/1kWySit5</a>  密码:81u7</p>
</blockquote>
<hr>
<h3 id="5-注意事项-1"><a href="#5-注意事项-1" class="headerlink" title="5.注意事项"></a>5.注意事项<a name="attertian"/></h3><ul>
<li><p>5.1发现查看反编译的代码时,每次都需要重启 JD-GUI.app ,否则显示的还是上一次查看的结果.</p>
</li>
<li><p>5.2 要注意 bean 不能被混淆.</p>
</li>
<li><p>5.3 所有用到的第三方的 lib ,自定义的 view ，最好都添加到 -keep 里面.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Google Map 开发</title>
    <url>/2018/09/11/Android_google_map%E5%BC%80%E5%8F%91/</url>
    <content><![CDATA[<blockquote>
<p>记录 Android_google开发 相关的过程</p>
</blockquote>
<a id="more"></a>


<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a><a href="#references">1.参考</a></h2><h2 id="2-Google-例子"><a href="#2-Google-例子" class="headerlink" title="2.Google 例子"></a><a href="#google_map_demo">2.Google 例子</a></h2><h2 id="3-取得当前位置的经纬度"><a href="#3-取得当前位置的经纬度" class="headerlink" title="3.取得当前位置的经纬度"></a><a href="#get_current_location">3.取得当前位置的经纬度</a></h2><h2 id="4-国内国外地图切换"><a href="#4-国内国外地图切换" class="headerlink" title="4.国内国外地图切换"></a><a href="#amap_switch">4.国内国外地图切换</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考<a name="references"/></h2><ul>
<li><a href="https://developers.google.com/maps/documentation/android-sdk/start">1.Maps SDK for Android:Get Started</a></li>
<li><a href="https://github.com/googlemaps/android-samples">2.GitHub:Google Maps Android API v2 Samples</a></li>
<li><a href="https://lbs.amap.com/dev/demo/switch-map#Android">3.高德:国内国外地图切换</a></li>
</ul>
<hr>
<h2 id="2-Google-例子-1"><a href="#2-Google-例子-1" class="headerlink" title="2.Google 例子"></a>2.Google 例子<a name="google_map_demo"/></h2><blockquote>
<p>记录 Google maps Demo 的搭建过程.</p>
</blockquote>
<ul>
<li>1.从 <a href="https://github.com/googlemaps/android-samples">GitHub google maps 下载 DEMO</a></li>
<li>2.用 AS 打开 <code>DEMO</code> 中的 <code>ApiDemos/java</code> 项目(因为我们只要开发 java 环境下的 手机端 map)</li>
<li>3.到 <a href="https://console.developers.google.com/">Google Maps 控制台</a> 去申请一个 <code>API KEY</code>,然后填入项目 <code>AndroidManifest.xml</code> 中.<ul>
<li>1.过程中需要用到 <code>DEBUG</code> 和 <code>RELEASE</code> 的 <code>SHA-1</code>,具体的方法请查看: <a href="https://developers.google.com/maps/documentation/android-sdk/signup">Get API Key</a></li>
<li>2.相关的图片:<img src="/assets/imgs/Android/Snip20180911_11.png" width="80%" height="80%"></li>
<li>3.把得到的 KEY 填入 <code>AndroidManifest.xml</code> 的 <code>android:name=&quot;com.google.android.geo.API_KEY</code> 中…..</li>
</ul>
</li>
</ul>
<hr>
<h2 id="3-取得当前位置的经纬度-1"><a href="#3-取得当前位置的经纬度-1" class="headerlink" title="3.取得当前位置的经纬度"></a>3.取得当前位置的经纬度<a name="get_current_location"/></h2><h4 id="1-相关的包的导入"><a href="#1-相关的包的导入" class="headerlink" title="1.相关的包的导入"></a>1.相关的包的导入</h4><blockquote>
<p>不要在 <code>build.gradle</code> 中直接导入 <code>compile &#39;com.google.android.gms:play-services:9.0.1&#39;</code> ,因为 Android 的项目有 <code>65535</code> 的限制,要根据需要导入必要的包: 如:</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">compile &#39;com.google.android.gms:play-services-maps:9.0.1&#39;</span><br><span class="line">compile &#39;com.google.android.gms:play-services-location:9.0.1&#39;</span><br></pre></td></tr></table></figure>

<ul>
<li><a href="https://stackoverflow.com/questions/25370598/cant-import-com-google-android-gms-location-locationservices">1.参考1</a></li>
<li><a href="https://developers.google.com/android/guides/setup#add_google_play_services_to_your_project">2.参考2</a></li>
</ul>
<h4 id="2-获取当前位置的代码-相关的-GitHub-源码"><a href="#2-获取当前位置的代码-相关的-GitHub-源码" class="headerlink" title="2.获取当前位置的代码,相关的 GitHub 源码:"></a>2.获取当前位置的代码,<a href="https://github.com/ghzjtian/android-samples">相关的 GitHub 源码</a>:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">package com.example.mapdemo;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import android.content.pm.PackageManager;</span><br><span class="line">import android.location.Location;</span><br><span class="line">import android.support.annotation.NonNull;</span><br><span class="line">import android.support.annotation.Nullable;</span><br><span class="line">import android.support.v4.app.ActivityCompat;</span><br><span class="line">import android.support.v4.app.FragmentActivity;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.support.v7.app.AppCompatActivity;</span><br><span class="line">import android.util.Log;</span><br><span class="line">import android.view.View;</span><br><span class="line">import android.widget.Toast;</span><br><span class="line"></span><br><span class="line">import com.google.android.gms.common.ConnectionResult;</span><br><span class="line">import com.google.android.gms.common.api.GoogleApiClient;</span><br><span class="line">import com.google.android.gms.location.FusedLocationProviderClient;</span><br><span class="line">import com.google.android.gms.location.LocationServices;</span><br><span class="line">import com.google.android.gms.maps.CameraUpdateFactory;</span><br><span class="line">import com.google.android.gms.maps.GoogleMap;</span><br><span class="line">import com.google.android.gms.maps.OnMapReadyCallback;</span><br><span class="line">import com.google.android.gms.maps.SupportMapFragment;</span><br><span class="line">import com.google.android.gms.maps.model.LatLng;</span><br><span class="line">import com.google.android.gms.maps.model.Marker;</span><br><span class="line">import com.google.android.gms.maps.model.MarkerOptions;</span><br><span class="line">import com.google.android.gms.tasks.OnSuccessListener;</span><br><span class="line"></span><br><span class="line">public class GetMyLocationDemoActivity extends AppCompatActivity implements OnMapReadyCallback,</span><br><span class="line">        GoogleApiClient.ConnectionCallbacks,</span><br><span class="line">        GoogleApiClient.OnConnectionFailedListener,</span><br><span class="line">        GoogleMap.OnMarkerDragListener,</span><br><span class="line">        GoogleMap.OnMapLongClickListener,</span><br><span class="line">        GoogleMap.OnMarkerClickListener,</span><br><span class="line">        View.OnClickListener &#123;</span><br><span class="line"></span><br><span class="line">    private static final String TAG &#x3D; &quot;MapsActivity&quot;;</span><br><span class="line">    private GoogleMap mMap;</span><br><span class="line">    private double longitude;</span><br><span class="line">    private double latitude;</span><br><span class="line">    private GoogleApiClient googleApiClient;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.my_location_demo);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; Obtain the SupportMapFragment and get notified when the map is ready to be used.</span><br><span class="line">        SupportMapFragment mapFragment &#x3D; (SupportMapFragment) getSupportFragmentManager()</span><br><span class="line">                .findFragmentById(R.id.map);</span><br><span class="line">        mapFragment.getMapAsync(this);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;Initializing googleApiClient</span><br><span class="line">        googleApiClient &#x3D; new GoogleApiClient.Builder(this)</span><br><span class="line">                .addConnectionCallbacks(this)</span><br><span class="line">                .addOnConnectionFailedListener(this)</span><br><span class="line">                .addApi(LocationServices.API)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onMapReady(GoogleMap googleMap) &#123;</span><br><span class="line">        mMap &#x3D; googleMap;</span><br><span class="line">        mMap.setMapType(GoogleMap.MAP_TYPE_HYBRID);</span><br><span class="line">        &#x2F;&#x2F; googleMapOptions.mapType(googleMap.MAP_TYPE_HYBRID)</span><br><span class="line">        &#x2F;&#x2F;    .compassEnabled(true);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; Add a marker in Sydney and move the camera</span><br><span class="line">        LatLng india &#x3D; new LatLng(-34, 151);</span><br><span class="line">        mMap.addMarker(new MarkerOptions().position(india).title(&quot;Marker in India&quot;));</span><br><span class="line">        mMap.moveCamera(CameraUpdateFactory.newLatLng(india));</span><br><span class="line">        mMap.setOnMarkerDragListener(this);</span><br><span class="line">        mMap.setOnMapLongClickListener(this);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F;Getting current location</span><br><span class="line">    private void getCurrentLocation() &#123;</span><br><span class="line">        mMap.clear();</span><br><span class="line">        if (ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) !&#x3D; PackageManager.PERMISSION_GRANTED &amp;&amp; ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) !&#x3D; PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">            &#x2F;&#x2F; TODO: Consider calling</span><br><span class="line">            &#x2F;&#x2F;    ActivityCompat#requestPermissions</span><br><span class="line">            &#x2F;&#x2F; here to request the missing permissions, and then overriding</span><br><span class="line">            &#x2F;&#x2F;   public void onRequestPermissionsResult(int requestCode, String[] permissions,</span><br><span class="line">            &#x2F;&#x2F;                                          int[] grantResults)</span><br><span class="line">            &#x2F;&#x2F; to handle the case where the user grants the permission. See the documentation</span><br><span class="line">            &#x2F;&#x2F; for ActivityCompat#requestPermissions for more details.</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">&#x2F;&#x2F;        Location location &#x3D; LocationServices.FusedLocationApi.getLastLocation(googleApiClient);</span><br><span class="line">&#x2F;&#x2F;        if (location !&#x3D; null) &#123;</span><br><span class="line">&#x2F;&#x2F;            &#x2F;&#x2F;Getting longitude and latitude</span><br><span class="line">&#x2F;&#x2F;            longitude &#x3D; location.getLongitude();</span><br><span class="line">&#x2F;&#x2F;            latitude &#x3D; location.getLatitude();</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F;            &#x2F;&#x2F;moving the map to location</span><br><span class="line">&#x2F;&#x2F;            moveMap();</span><br><span class="line">&#x2F;&#x2F;        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;参考:  https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;46481789&#x2F;android-locationservices-fusedlocationapi-deprecated</span><br><span class="line">        FusedLocationProviderClient mFusedLocationClient &#x3D; LocationServices.getFusedLocationProviderClient(this);</span><br><span class="line"></span><br><span class="line">        mFusedLocationClient.getLastLocation()</span><br><span class="line">                .addOnSuccessListener(this, new OnSuccessListener&lt;Location&gt;() &#123;</span><br><span class="line">                    @Override</span><br><span class="line">                    public void onSuccess(Location location) &#123;</span><br><span class="line">                        &#x2F;&#x2F; Got last known location. In some rare situations, this can be null.</span><br><span class="line">                        if (location !&#x3D; null) &#123;</span><br><span class="line">                            Log.w(TAG,&quot;location,Latitude:&quot;+location.getLatitude()+&quot; Longtitude:&quot;+location.getLongitude());</span><br><span class="line">                            &#x2F;&#x2F; Logic to handle location object</span><br><span class="line">                            &#x2F;&#x2F;Getting longitude and latitude</span><br><span class="line">                            longitude &#x3D; location.getLongitude();</span><br><span class="line">                            latitude &#x3D; location.getLatitude();</span><br><span class="line"></span><br><span class="line">                            &#x2F;&#x2F;moving the map to location</span><br><span class="line">                            moveMap();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void moveMap() &#123;</span><br><span class="line">        &#x2F;**</span><br><span class="line">         * Creating the latlng object to store lat, long coordinates</span><br><span class="line">         * adding marker to map</span><br><span class="line">         * move the camera with animation</span><br><span class="line">         *&#x2F;</span><br><span class="line">        LatLng latLng &#x3D; new LatLng(latitude, longitude);</span><br><span class="line">        mMap.addMarker(new MarkerOptions()</span><br><span class="line">                .position(latLng)</span><br><span class="line">                .draggable(true)</span><br><span class="line">                .title(&quot;Marker in India&quot;));</span><br><span class="line"></span><br><span class="line">        mMap.moveCamera(CameraUpdateFactory.newLatLng(latLng));</span><br><span class="line">        mMap.animateCamera(CameraUpdateFactory.zoomTo(15));</span><br><span class="line">        mMap.getUiSettings().setZoomControlsEnabled(true);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onClick(View view) &#123;</span><br><span class="line">        Log.v(TAG, &quot;view click event&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onConnected(@Nullable Bundle bundle) &#123;</span><br><span class="line">        getCurrentLocation();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onConnectionSuspended(int i) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onConnectionFailed(@NonNull ConnectionResult connectionResult) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onMapLongClick(LatLng latLng) &#123;</span><br><span class="line">        &#x2F;&#x2F; mMap.clear();</span><br><span class="line">        mMap.addMarker(new MarkerOptions().position(latLng).draggable(true));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onMarkerDragStart(Marker marker) &#123;</span><br><span class="line">        Toast.makeText(GetMyLocationDemoActivity.this, &quot;onMarkerDragStart&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onMarkerDrag(Marker marker) &#123;</span><br><span class="line">        Toast.makeText(GetMyLocationDemoActivity.this, &quot;onMarkerDrag&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onMarkerDragEnd(Marker marker) &#123;</span><br><span class="line">        &#x2F;&#x2F; getting the Co-ordinates</span><br><span class="line">        latitude &#x3D; marker.getPosition().latitude;</span><br><span class="line">        longitude &#x3D; marker.getPosition().longitude;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;move to current position</span><br><span class="line">        moveMap();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onStart() &#123;</span><br><span class="line">        googleApiClient.connect();</span><br><span class="line">        super.onStart();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onStop() &#123;</span><br><span class="line">        googleApiClient.disconnect();</span><br><span class="line">        super.onStop();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean onMarkerClick(Marker marker) &#123;</span><br><span class="line">        Toast.makeText(GetMyLocationDemoActivity.this, &quot;onMarkerClick&quot;, Toast.LENGTH_SHORT).show();</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-发现-google-map-地图的坐标在国内显示有偏差"><a href="#3-发现-google-map-地图的坐标在国内显示有偏差" class="headerlink" title="3.发现 google map 地图的坐标在国内显示有偏差"></a>3.发现 google map 地图的坐标在国内显示有偏差</h3><ul>
<li>1.原因及解决的方法:<ul>
<li><a href="https://www.jianshu.com/p/c39a2c72dc65">1.地图坐标转换（火星、谷歌、百度、腾讯、高德等坐标）</a></li>
</ul>
</li>
<li>2.转换前后的对比:<ul>
<li>1.转换前:<img src="/assets/imgs/Android/Screenshot_20180911-162321.png" width="50%" height="50%">
* 2.转换后:
<img src="/assets/imgs/Android/Screenshot_20180911-165421.png" width="50%" height="50%">

</li>
</ul>
</li>
</ul>
<hr>
<h2 id="4-国内国外地图切换-1"><a href="#4-国内国外地图切换-1" class="headerlink" title="4.国内国外地图切换"></a>4.国内国外地图切换<a name="amap_switch"/></h2><ul>
<li>1.参考 <a href="https://lbs.amap.com/dev/demo/switch-map#Android">高德 国内国外地图切换</a></li>
<li><a href="https://sxgfxm.github.io/blog/2016/10/19/iospan-duan-gpszuo-biao-shi-fou-zai-zhong-guo/">2.参考: iOS判断GPS坐标是否在中国</a></li>
<li><a href="https://lbs.amap.com/api/android-location-sdk/guide/additional-func/amap-calculate-tool">3.高德:坐标转换与位置判断(更加的准确)</a></li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android nrf Toolbox 学习</title>
    <url>/2018/01/28/Android_nrf_Toolbox%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<blockquote>
<p>个人提升需要，所以要全部理清 APP 的架构设计和一些功能点的实现方法.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-BLE-连接模块"><a href="#1-BLE-连接模块" class="headerlink" title="1.BLE 连接模块"></a>1.BLE 连接模块</h2><ul>
<li>预览2</li>
</ul>
<ul>
<li><p>详细</p>
</li>
<li><p>图片模板:<br><img src="/assets/imgs/Android/ScreenShot2017-12-27_15.41.29.png"></p>
<ul>
<li><a href="https://www.zhihu.com/question/23378396">图片建议使用这种格式:</a>,因为可以缩小显示</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;&#x2F;assets&#x2F;imgs&#x2F;Android&#x2F;ScreenShot2017-12-27_15.41.29.png&quot; width&#x3D;&quot;50%&quot; height&#x3D;&quot;50%&quot;&gt;</span><br></pre></td></tr></table></figure>


<ul>
<li><p><a href="#jump">跳转</a></p>
</li>
<li><p>跳转目的地址<a name="jump"/></p>
</li>
<li><p>代码块后面一定不要有缩进符，否则会显示不正常(会把后面的文字包括在代码块里面),如</p>
</li>
</ul>
<p>正常的示例:</p>
<pre><code class="java">test
test2
test3</code></pre>
<ul>
<li>正常正常正常正常正常</li>
</ul>
<p>不正常的示例:</p>
<pre><code class="java">test
test2
test3</code></pre>
<pre><code>* 不正常不正常</code></pre>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 免 root 查看数据库的内容</title>
    <url>/2017/12/15/Android_%E5%85%8Droot%E6%9F%A5%E7%9C%8BDB/</url>
    <content><![CDATA[<h3 id="Android-免-root-查看数据库的内容"><a href="#Android-免-root-查看数据库的内容" class="headerlink" title="Android 免 root 查看数据库的内容"></a>Android 免 root 查看数据库的内容</h3><ul>
<li>在 Android 中调试时常常需要查看 SharedPreferences , database 等等的内容，但有些手机 root 又比较麻烦，或 root 不成功,今天偶尔看到这种简单的方法.</li>
</ul>
<a id="more"></a>



<h4 id="1-步骤"><a href="#1-步骤" class="headerlink" title="1.步骤:"></a>1.步骤:</h4><blockquote>
<p>手机要先连接电脑，开启 开发者模式.</p>
</blockquote>
<ul>
<li><p>1.在 build.gradle 中添加</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> dependencies &#123;</span><br><span class="line">    compile fileTree(include: [&#39;*.jar&#39;], dir: &#39;libs&#39;)</span><br><span class="line">    &#x2F;&#x2F;查看 db 信息</span><br><span class="line">    compile &#39;com.facebook.stetho:stetho:1.5.0&#39;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


</li>
</ul>
<ul>
<li>2.在应用程序的 onCreate() 中添加 </li>
</ul>
<p>如:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public class GreenworksApplication extends Application&#123;</span><br><span class="line">   @Override</span><br><span class="line">    public void onCreate() &#123;</span><br><span class="line">        super.onCreate();</span><br><span class="line"></span><br><span class="line">         &#x2F;&#x2F;在 DEBUG 模式才可以用免 ROOT 查看的功能 。</span><br><span class="line">        if(BuildConfig.DEBUG) &#123;</span><br><span class="line">            &#x2F;&#x2F;查看 数据库.Chrome 浏览器打开  chrome:&#x2F;&#x2F;inspect&#x2F;#devices 即可</span><br><span class="line">            Stetho.initializeWithDefaults(this);</span><br><span class="line">        &#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<ul>
<li>3.在电脑的 Chrome 中打开 chrome://inspect/<br><img src="/assets/imgs/Android/Snip20171215_7.png"></li>
</ul>
<blockquote>
<p>参考1: <a href="https://stackoverflow.com/questions/23635644/how-can-i-view-the-shared-preferences-file-using-android-studio">https://stackoverflow.com/questions/23635644/how-can-i-view-the-shared-preferences-file-using-android-studio</a></p>
<p>参考2: <a href="http://facebook.github.io/stetho/">http://facebook.github.io/stetho/</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android_权限的获取</title>
    <url>/2017/12/19/Android_%E6%9D%83%E9%99%90%E7%9A%84%E8%8E%B7%E5%8F%96/</url>
    <content><![CDATA[<h3 id="Android-权限的获取"><a href="#Android-权限的获取" class="headerlink" title="Android_权限的获取"></a><a href="https://github.com/ghzjtian/AndroidPermission">Android_权限的获取</a></h3><ul>
<li><p>1.Android 6.0 后，敏感的权限需要用户实时的同意才可以获取.第三方库 PermissionsDispatcher 的用法.</p>
</li>
<li><p><a href="https://developer.android.com/guide/topics/security/permissions?hl=zh-cn#normal-dangerous">2.Android 官方 系统权限 的解析</a></p>
</li>
</ul>
<a id="more"></a>

<ul>
<li>参考:</li>
</ul>
<blockquote>
<p><a href="https://github.com/permissions-dispatcher/PermissionsDispatcher">https://github.com/permissions-dispatcher/PermissionsDispatcher</a></p>
<p><a href="http://www.jianshu.com/p/64e7334cde11">http://www.jianshu.com/p/64e7334cde11</a></p>
</blockquote>
<h4 id="1-用法（-Camera-权限）"><a href="#1-用法（-Camera-权限）" class="headerlink" title="1.用法（ Camera 权限）:"></a>1.用法（ Camera 权限）:</h4><ul>
<li>1.在 app module 的 build.gradle 中，加入以下的代码:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">compile(&quot;com.github.hotchemi:permissionsdispatcher:3.1.0&quot;) &#123;</span><br><span class="line">    &#x2F;&#x2F; if you don&#39;t use android.app.Fragment you can exclude support for them</span><br><span class="line">    exclude module: &quot;support-v13&quot;</span><br><span class="line">&#125;</span><br><span class="line">annotationProcessor &quot;com.github.hotchemi:permissionsdispatcher-processor:3.1.0&quot;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>在 <code>AndroidManifest.xml</code> 中，添加以下的权限</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;uses-permission android:name&#x3D;&quot;android.permission.CAMERA&quot;&#x2F;&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.在需要获取权限的 Activity 下，添加如下的代码:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">package com.example.tianzeng.testpermissions;</span><br><span class="line"></span><br><span class="line">import android.Manifest;</span><br><span class="line">import android.content.DialogInterface;</span><br><span class="line">import android.os.Bundle;</span><br><span class="line">import android.support.annotation.NonNull;</span><br><span class="line">import android.support.annotation.StringRes;</span><br><span class="line">import android.support.design.widget.FloatingActionButton;</span><br><span class="line">import android.support.design.widget.Snackbar;</span><br><span class="line">import android.support.v7.app.AlertDialog;</span><br><span class="line">import android.support.v7.app.AppCompatActivity;</span><br><span class="line">import android.support.v7.widget.Toolbar;</span><br><span class="line">import android.view.View;</span><br><span class="line">import android.widget.Toast;</span><br><span class="line"></span><br><span class="line">import permissions.dispatcher.NeedsPermission;</span><br><span class="line">import permissions.dispatcher.OnNeverAskAgain;</span><br><span class="line">import permissions.dispatcher.OnPermissionDenied;</span><br><span class="line">import permissions.dispatcher.OnShowRationale;</span><br><span class="line">import permissions.dispatcher.PermissionRequest;</span><br><span class="line">import permissions.dispatcher.RuntimePermissions;</span><br><span class="line"></span><br><span class="line">@RuntimePermissions</span><br><span class="line">public class MainActivity extends AppCompatActivity &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line"></span><br><span class="line">        findViewById(R.id.button_camera).setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View view) &#123;</span><br><span class="line">&#x2F;&#x2F;                MainActivityPermissionsDispatcher.showCameraWithPermissionCheck(MainActivity.this);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions, @NonNull int[] grantResults) &#123;</span><br><span class="line">        super.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">        &#x2F;&#x2F; NOTE: delegate the permission handling to generated method</span><br><span class="line">&#x2F;&#x2F;        MainActivityPermissionsDispatcher.onRequestPermissionsResult(this, requestCode, grantResults);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @NeedsPermission(Manifest.permission.CAMERA)</span><br><span class="line">    void showCamera() &#123;</span><br><span class="line">        &#x2F;&#x2F; NOTE: Perform action that requires the permission. If this is run by PermissionsDispatcher, the permission will have been granted</span><br><span class="line">        getSupportFragmentManager().beginTransaction()</span><br><span class="line">                .replace(R.id.sample_content_fragment, CameraPreviewFragment.newInstance())</span><br><span class="line">                .addToBackStack(&quot;camera&quot;)</span><br><span class="line">                .commitAllowingStateLoss();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @OnPermissionDenied(Manifest.permission.CAMERA)</span><br><span class="line">    void onCameraDenied() &#123;</span><br><span class="line">        &#x2F;&#x2F; NOTE: Deal with a denied permission, e.g. by showing specific UI</span><br><span class="line">        &#x2F;&#x2F; or disabling certain functionality</span><br><span class="line">        Toast.makeText(this, R.string.permission_camera_denied, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @OnShowRationale(Manifest.permission.CAMERA)</span><br><span class="line">    void showRationaleForCamera(PermissionRequest request) &#123;</span><br><span class="line">        &#x2F;&#x2F; NOTE: Show a rationale to explain why the permission is needed, e.g. with a dialog.</span><br><span class="line">        &#x2F;&#x2F; Call proceed() or cancel() on the provided PermissionRequest to continue or abort</span><br><span class="line">        showRationaleDialog(R.string.permission_camera_rationale, request);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @OnNeverAskAgain(Manifest.permission.CAMERA)</span><br><span class="line">    void onCameraNeverAskAgain() &#123;</span><br><span class="line">        Toast.makeText(this, R.string.permission_camera_never_ask_again, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void showRationaleDialog(@StringRes int messageResId, final PermissionRequest request) &#123;</span><br><span class="line">        new AlertDialog.Builder(this)</span><br><span class="line">                .setPositiveButton(R.string.button_allow, new DialogInterface.OnClickListener() &#123;</span><br><span class="line">                    @Override</span><br><span class="line">                    public void onClick(@NonNull DialogInterface dialog, int which) &#123;</span><br><span class="line">                        request.proceed();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setNegativeButton(R.string.button_deny, new DialogInterface.OnClickListener() &#123;</span><br><span class="line">                    @Override</span><br><span class="line">                    public void onClick(@NonNull DialogInterface dialog, int which) &#123;</span><br><span class="line">                        request.cancel();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setCancelable(false)</span><br><span class="line">                .setMessage(messageResId)</span><br><span class="line">                .show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>3.在 Build -&gt; Make Module **** , PermissionsDispatcher 会生成 ainActivityPermissionsDispatcher(Activity Name + PermissionsDispatcher).</li>
</ul>
<ul>
<li>4.打开步骤 2 的注释的代码:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MainActivityPermissionsDispatcher.showCameraWithPermissionCheck(MainActivity.this);</span><br><span class="line">       MainActivityPermissionsDispatcher.onRequestPermissionsResult(this, requestCode, grantResults);</span><br><span class="line"> </span><br><span class="line"></span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android 网络请求</title>
    <url>/2019/01/11/Android_%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/</url>
    <content><![CDATA[<blockquote>
<p>记录 Android 网络请求的问题点.</p>
</blockquote>
<a id="more"></a>


<h2 id="1-开发中遇到的问题点"><a href="#1-开发中遇到的问题点" class="headerlink" title="1.开发中遇到的问题点."></a>1.开发中遇到的问题点.</h2><blockquote>
<p>在用 HttpURLConnection 请求 Http 的 Get 请求时,出现 <code>InputStream.read</code> 方法在差不多末尾时一直返回 <code>java.net.ProtocolException: unexpected end of stream </code> 的问题.</p>
</blockquote>
<ul>
<li>1.不是 HTTP 的问题. <ul>
<li>1.用 PostMan 的 http 请求，可以返回期待的值.</li>
</ul>
</li>
<li>2.不是请求方法的问题.<ul>
<li>1.同样的方法，就运行那个 URL 有问题.</li>
</ul>
</li>
<li>3.问题.<ul>
<li>1.同样的内容返回，同样的方法和 http 请求， PostMan 的返回中没有 Transfer 就可以返回期待的值.</li>
<li>2.同样的内容返回，同样的方法和 http 请求，同样的链接，用纯 java 代码的返回结果就没有问题.</li>
<li>3.定位到是 <code>bufferedReader.readLine()</code> 有问题，但是纯 java 代码又没有问题.</li>
<li>4.不是  Transfer-Encoding 为 chunked 的问题</li>
<li>5.定位到是后面的几位 byte 取值过大的问题.</li>
</ul>
</li>
<li>4.显示的错误:<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">java.net.ProtocolException: unexpected end of stream</span><br></pre></td></tr></table></figure></li>
<li>5.参考文献:</li>
</ul>
<pre><code>看了很多文章都没找到办法:
https://github.com/lingochamp/FileDownloader/issues/775
https://stackoverflow.com/questions/50798241/java-net-protocolexception-unexpected-end-of-stream-android
</code></pre>
<ul>
<li>6.还没找到解决的方法.</li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android下载文件</title>
    <url>/2018/01/25/Android%E4%B8%8B%E8%BD%BD%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h3 id="Android下载文件"><a href="#Android下载文件" class="headerlink" title="Android下载文件"></a>Android下载文件</h3><blockquote>
<p>使用 Android 的 HttpURLConnection 下载文件时，要警惕下载路径的重定向问题( httpUrlConnection.getResponseCode() == 302 ),否则会出现 下载的文件的 length =0 的情况 !</p>
</blockquote>
<a id="more"></a>

<h4 id="贴上主要的代码"><a href="#贴上主要的代码" class="headerlink" title="贴上主要的代码:"></a>贴上主要的代码:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> public static void downLoadPdfFile(String urlStr, String savePAth, String fileName) throws Exception &#123;</span><br><span class="line"></span><br><span class="line">        URL url &#x3D; new URL(urlStr);</span><br><span class="line">        HttpURLConnection httpUrlConnection &#x3D; (HttpURLConnection) url.openConnection();</span><br><span class="line"></span><br><span class="line">        httpUrlConnection.setInstanceFollowRedirects(true);</span><br><span class="line"></span><br><span class="line">        Log.e(TAG, &quot;httpUrlConnection.getResponseCode() :&quot; + httpUrlConnection.getResponseCode());</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">        if(httpUrlConnection.getResponseCode() &#x3D;&#x3D; 302) &#123;</span><br><span class="line">            String location &#x3D; httpUrlConnection.getHeaderField(&quot;Location&quot;);</span><br><span class="line">            Log.e(TAG, &quot;location:&quot; + location);</span><br><span class="line">            downLoadPdfFile(location,savePAth,fileName);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">&#x2F;&#x2F;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">        </span><br><span class="line">        InputStream inputstream &#x3D; httpUrlConnection.getInputStream();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        File file &#x3D; new File(savePAth, fileName);</span><br><span class="line">        FileOutputStream outputstream &#x3D; new FileOutputStream(file);</span><br><span class="line"></span><br><span class="line">        byte buffer[] &#x3D; new byte[512];</span><br><span class="line">        int byteCount &#x3D; 0;</span><br><span class="line">        &#x2F;&#x2F;将输入流中的内容先输入到buffer中缓存，然后用输出流写到文件中</span><br><span class="line">        while ((byteCount &#x3D; inputstream.read(buffer)) !&#x3D; -1) &#123;</span><br><span class="line">            outputstream.write(buffer, 0, byteCount);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Log.i(&quot;HttpUtil&quot;, &quot;file length:&quot; + file.length());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>


<ul>
<li>相关的 URL</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; downLoadUrl2 会重定向到 downLoadUrl5 .</span><br><span class="line">    private String downLoadUrl2 &#x3D; &quot;https:&#x2F;&#x2F;api2.keylink.cn:443&#x2F;v2&#x2F;xfile&#x2F;download&quot;;</span><br><span class="line">    private String downLoadUrl3 &#x3D; &quot;https:&#x2F;&#x2F;avatars1.githubusercontent.com&#x2F;u&#x2F;&quot;;</span><br><span class="line">    private String downLoadUrl4 &#x3D; &quot;https:&#x2F;&#x2F;github.com&#x2F;keylink-corp&#x2F;android-sdk&#x2F;raw&#x2F;master&#x2F;docs&#x2F;%E9%80%8F%E4%BC%A0Demo%E4%BD%BF%E7%94%A8%E6%96%87%E6%A1%A3.pdf&quot;;</span><br><span class="line"></span><br><span class="line">    private String downLoadUrl5&#x3D;&quot;http:&#x2F;&#x2F;keylink.oss-cn-hangzhou.aliyuncs.com&#x2F;&quot;;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android多版本打包</title>
    <url>/2018/11/16/Android%E5%A4%9A%E7%89%88%E6%9C%AC%E6%89%93%E5%8C%85/</url>
    <content><![CDATA[<h2 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a><a href="#background_ifo">1.背景</a></h2><a id="more"></a>
<h2 id="2-多包名打包"><a href="#2-多包名打包" class="headerlink" title="2.多包名打包"></a><a href="#multi_package_name">2.多包名打包</a></h2><ul>
<li>1.<code>build.gradle</code> file.</li>
<li>2.<code>AndroidManifest.xml</code> file 及 参数的使用.</li>
<li>3.导入的图片.</li>
<li>4.打包.</li>
<li>5.安装 apk 到模拟器中.</li>
<li>6.查看包名信息.</li>
<li>7.<a href="https://github.com/ghzjtian/multiPackage_generated">项目的源码已上传到了 GitHub</a></li>
</ul>
<hr>
<hr>
<hr>
<h2 id="1-背景-1"><a href="#1-背景-1" class="headerlink" title="1.背景"></a>1.背景<a name="background_ifo"/></h2><ul>
<li>1.公司有两个 app ，内部的逻辑一摸一样，就是 app 的 icon ，主题，显示的文字，另一个 app 屏蔽一些功能,遂要实现多包名打包的功能.</li>
<li>2.参考:<ul>
<li><a href="https://www.jianshu.com/p/42c0f300ffb5">1.Android使用Gradle玩转多渠道多包名打包</a>    </li>
</ul>
</li>
</ul>
<hr>
<h2 id="2-多包名打包-1"><a href="#2-多包名打包-1" class="headerlink" title="2.多包名打包"></a>2.多包名打包<a name="multi_package_name"/></h2><ul>
<li>1.修改 <code>app/build.gradle</code> 文件,如下:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">apply plugin: &#39;com.android.application&#39;</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    &#x2F;&#x2F;签名信息</span><br><span class="line">    signingConfigs &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            keyAlias &#39;key0&#39;</span><br><span class="line">            keyPassword &#39;multi1230&#39;</span><br><span class="line">            storeFile file(&#39;&#x2F;Users&#x2F;glb_gz&#x2F;Documents&#x2F;AS_Workplace&#x2F;MultiPackageAPP&#x2F;debug&#39;)</span><br><span class="line">            storePassword &#39;multi1230&#39;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    compileSdkVersion 28</span><br><span class="line">    defaultConfig &#123;</span><br><span class="line">        applicationId &quot;com.example.glb_gz.multipackageapp&quot;</span><br><span class="line">        minSdkVersion 15</span><br><span class="line">        targetSdkVersion 28</span><br><span class="line">        versionCode 1</span><br><span class="line">        versionName &quot;1.0&quot;</span><br><span class="line">        testInstrumentationRunner &quot;android.support.test.runner.AndroidJUnitRunner&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    buildTypes &#123;</span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled false</span><br><span class="line">            signingConfig signingConfigs.release</span><br><span class="line">            proguardFiles getDefaultProguardFile(&#39;proguard-android.txt&#39;), &#39;proguard-rules.pro&#39;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    flavorDimensions &quot;default&quot;</span><br><span class="line">    &#x2F;&#x2F;配置不同包名的 APK</span><br><span class="line">    productFlavors&#123;</span><br><span class="line"></span><br><span class="line">        GreenGuide&#123;</span><br><span class="line">            dimension &quot;default&quot;</span><br><span class="line">            applicationId &quot;com.example.glb_gz.multipackageapp.guide&quot;</span><br><span class="line">            manifestPlaceholders &#x3D; [new_app_name:&quot;Guide&quot;,icon:&quot;@mipmap&#x2F;ic_launcher_guide&quot;]</span><br><span class="line"></span><br><span class="line">            resValue(&quot;string&quot;,&quot;my_app_name&quot;,&quot;Green Guide APP&quot;)</span><br><span class="line">            resValue(&quot;bool&quot;,&quot;is_cramer_app&quot;,&quot;false&quot;)</span><br><span class="line">            resValue(&quot;dimen&quot;,&quot;my_app_margin&quot;,&quot;10dp&quot;)</span><br><span class="line">            resValue(&quot;color&quot;,&quot;app_background_color&quot;,&quot;#0f0&quot;)</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        Cramer&#123;</span><br><span class="line">            dimension &quot;default&quot;</span><br><span class="line">            applicationId &quot;com.example.glb_gz.multipackageapp.cramer&quot;</span><br><span class="line">            &#x2F;&#x2F;在 AndroidManifest.xml 中使用,如:</span><br><span class="line">            &#x2F;&#x2F;      android:icon&#x3D;&quot;$&#123;icon&#125;&quot;</span><br><span class="line">            &#x2F;&#x2F;      android:label&#x3D;&quot;$&#123;new_app_name&#125;&quot;</span><br><span class="line">            manifestPlaceholders &#x3D; [new_app_name:&quot;Cramer&quot;,icon:&quot;@mipmap&#x2F;ic_launcher_cramer&quot;]</span><br><span class="line">            &#x2F;&#x2F;在 java 代码中使用，具体的方式为: context.getResources().getString(R.string.my_app_name);</span><br><span class="line">            &#x2F;&#x2F;其他属性的设置 可以参考这篇文章:  https:&#x2F;&#x2F;www.tanelikorri.com&#x2F;tutorial&#x2F;android&#x2F;set-variables-in-build-gradle&#x2F;</span><br><span class="line">            resValue(&quot;string&quot;,&quot;my_app_name&quot;,&quot;Cramer APP&quot;)</span><br><span class="line">            resValue(&quot;bool&quot;,&quot;is_cramer_app&quot;,&quot;true&quot;)</span><br><span class="line">            resValue(&quot;dimen&quot;,&quot;my_app_margin&quot;,&quot;30dp&quot;)</span><br><span class="line">            resValue(&quot;color&quot;,&quot;app_background_color&quot;,&quot;#f00&quot;)</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">dependencies &#123;</span><br><span class="line">    implementation fileTree(include: [&#39;*.jar&#39;], dir: &#39;libs&#39;)</span><br><span class="line">    implementation &#39;com.android.support:appcompat-v7:28.0.0&#39;</span><br><span class="line">    implementation &#39;com.android.support:design:28.0.0&#39;</span><br><span class="line">    implementation &#39;com.android.support.constraint:constraint-layout:1.1.3&#39;</span><br><span class="line">    implementation &#39;com.android.support:support-vector-drawable:28.0.0&#39;</span><br><span class="line">    testImplementation &#39;junit:junit:4.12&#39;</span><br><span class="line">    androidTestImplementation &#39;com.android.support.test:runner:1.0.2&#39;</span><br><span class="line">    androidTestImplementation &#39;com.android.support.test.espresso:espresso-core:3.0.2&#39;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.相关的在 <code>AndroidManifest.xml</code> 文件的配置及 <code>Activity</code> 中的提取:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;utf-8&quot;?&gt;</span><br><span class="line">&lt;manifest xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot;</span><br><span class="line">    package&#x3D;&quot;com.example.glb_gz.multipackageapp&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &lt;application</span><br><span class="line">        android:allowBackup&#x3D;&quot;true&quot;</span><br><span class="line">        android:icon&#x3D;&quot;$&#123;icon&#125;&quot;</span><br><span class="line">        android:label&#x3D;&quot;$&#123;new_app_name&#125;&quot;</span><br><span class="line">        android:supportsRtl&#x3D;&quot;true&quot;</span><br><span class="line">        android:theme&#x3D;&quot;@style&#x2F;AppTheme&quot;&gt;</span><br><span class="line">        &lt;activity</span><br><span class="line">            android:name&#x3D;&quot;.MainActivity&quot;</span><br><span class="line">            android:label&#x3D;&quot;$&#123;new_app_name&#125;&quot;&gt;</span><br><span class="line">            &lt;intent-filter&gt;</span><br><span class="line">                &lt;action android:name&#x3D;&quot;android.intent.action.MAIN&quot; &#x2F;&gt;</span><br><span class="line"></span><br><span class="line">                &lt;category android:name&#x3D;&quot;android.intent.category.LAUNCHER&quot; &#x2F;&gt;</span><br><span class="line">            &lt;&#x2F;intent-filter&gt;</span><br><span class="line">        &lt;&#x2F;activity&gt;</span><br><span class="line">    &lt;&#x2F;application&gt;</span><br><span class="line"></span><br><span class="line">&lt;&#x2F;manifest&gt;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;测试各个属性的提取,如 boolean ,string ,dimen,color 等等</span><br><span class="line">       app_info_tv.setText(getResources().getString(R.string.my_app_name)+&quot;  isCramerApp? &quot;+getResources().getBoolean(R.bool.is_cramer_app));</span><br><span class="line">       view_ll.setBackgroundColor(getResources().getColor(R.color.app_background_color));</span><br><span class="line"></span><br><span class="line">       Log.i(&quot;TEST&quot;,&quot;isCramerApp? &quot;+getResources().getBoolean(R.bool.is_cramer_app));</span><br></pre></td></tr></table></figure>

<ul>
<li>3.导入的相关 <code>icon</code> 图片:</li>
</ul>
<img src="/assets/imgs/Android/multi_package/Snip20181116_3.png" width="60%" height="60%">

<ul>
<li>4.通过 <code>Generate signed</code> 去打包不同包名的包<ul>
<li>1.也试过 <a href="https://www.jianshu.com/p/3b38c2b110fb">用命令行</a> 去打包,但出现错误，查找解决方法无果后就放弃了.</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ .&#x2F;gradlew assembleRelease --stacktrace</span><br><span class="line"></span><br><span class="line">FAILURE: Build failed with an exception.</span><br><span class="line"></span><br><span class="line">* What went wrong:</span><br><span class="line">Could not determine java version from &#39;11.0.1&#39;.</span><br><span class="line"></span><br><span class="line">* Try:</span><br><span class="line">Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.</span><br><span class="line"></span><br><span class="line">* Get more help at https:&#x2F;&#x2F;help.gradle.org</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<img src="/assets/imgs/Android/multi_package/Snip20181116_4.png" width="60%" height="60%">

<img src="/assets/imgs/Android/multi_package/Snip20181116_5.png" width="60%" height="60%">


<ul>
<li>5.通过命令行把 apk 文件安装到 模拟器上面，并看到两个 app 已经安装成功,并有不同的显示效果.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> glb_gz$ adb install &#x2F;Users&#x2F;glb_gz&#x2F;Desktop&#x2F;Cramer&#x2F;release&#x2F;app-Cramer-release.apk</span><br><span class="line">Success</span><br><span class="line"> glb_gz$ adb install &#x2F;Users&#x2F;glb_gz&#x2F;Desktop&#x2F;GreenGuide&#x2F;release&#x2F;app-GreenGuide-release.apk</span><br><span class="line">Success</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<img src="/assets/imgs/Android/multi_package/Snip20181116_2.png" width="40%" height="40%">

<img src="/assets/imgs/Android/multi_package/Snip20181116_10.png" width="40%" height="40%">

<img src="/assets/imgs/Android/multi_package/Snip20181116_9.png" width="40%" height="40%">

<ul>
<li>6.在 <code>terminal</code> 中用命令行 <code>adb shell pm list packages</code> 查看模拟器中包名的信息,证明已经成功设置了包名:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ adb shell pm list packages</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line">package:com.example.glb_gz.multipackageapp.cramer</span><br><span class="line">package:com.example.glb_gz.multipackageapp.guide</span><br><span class="line">...</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Angular 集成 OIDC 认证库</title>
    <url>/2019/08/18/Angular-OIDC/</url>
    <content><![CDATA[<blockquote>
<p>记录 Angular 集成 OIDC 库的过程</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考:"></a>1.参考:</h2><ul>
<li><a href="https://github.com/IdentityModel/oidc-client-js">1.oidc-client-js</a></li>
<li><a href="https://www.bilibili.com/video/av42364337/?p=9">2.视频讲解(P9Implicit Flow 实例)</a></li>
<li><a href="https://github.com/solenovex/Identity-Server-4-Tutorial-Demo-Code">3.Github 源码(Identity-Server-4-Tutorial-Demo-Code)</a></li>
<li>4.<a href="https://github.com/manfredsteyer/angular-oauth2-oidc">其他 oidc 库: angular-oauth2-oidc</a></li>
</ul>
<h2 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤"></a>2.步骤</h2><ul>
<li><p>1.安装 <a href="https://github.com/IdentityModel/oidc-client-js"><code>oidc-client.js</code></a> 库.</p>
</li>
<li><p>2.在 <code>environment</code> 添加相关 <code>oidc</code> 的配置项.</p>
</li>
<li><p>3.添加一个 <code>oidc</code> service, 用于 auth 相关的功能.</p>
</li>
<li><p>4.在显示页面添加 oidc 的登录认证功能,如: </p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; component</span><br><span class="line"> constructor(public oidc: OpenIdConnectService) &#123;&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 显示用户名</span><br><span class="line"> &lt;span *ngIf&#x3D;&quot;oidc.userAvailable&quot;&gt;</span><br><span class="line">                       &#123;&#123;oidc.user.profile.name&#125;&#125;</span><br><span class="line">                    &lt;&#x2F;span&gt;</span><br><span class="line">&#x2F;&#x2F; 显示登录和登出的按钮.</span><br><span class="line">  &lt;button mat-menu-item *ngIf&#x3D;&quot;!oidc.userAvailable&quot; (click)&#x3D;&quot;oidc.triggerSignIn()&quot;&gt;</span><br><span class="line">                登录</span><br><span class="line">            &lt;&#x2F;button&gt;</span><br><span class="line">  &lt;button mat-menu-item *ngIf&#x3D;&quot;oidc.userAvailable&quot; (click)&#x3D;&quot;oidc.triggerSignOut()&quot;&gt;</span><br><span class="line">                登出</span><br><span class="line">            &lt;&#x2F;button&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="3-发现的问题及解决方法"><a href="#3-发现的问题及解决方法" class="headerlink" title="3.发现的问题及解决方法"></a>3.发现的问题及解决方法</h2><h3 id="1-在-Angular-生产环境中-oidc-client-包会发生-Uncaught-in-promise-Error-No-matching-state-found-in-storage-错误"><a href="#1-在-Angular-生产环境中-oidc-client-包会发生-Uncaught-in-promise-Error-No-matching-state-found-in-storage-错误" class="headerlink" title="1.在 Angular 生产环境中, oidc-client 包会发生 Uncaught (in promise): Error: No matching state found in storage 错误."></a>1.在 Angular 生产环境中, <code>oidc-client</code> 包会发生 <code>Uncaught (in promise): Error: No matching state found in storage</code> 错误.</h3><ul>
<li>1.<a href="https://github.com/IdentityModel/oidc-client-js/issues/277">No matching state found in storage #277</a></li>
<li>2.<a href="https://github.com/IdentityModel/oidc-client-js/issues/583">1.5.1: Failed to parse id_token #583</a></li>
</ul>
<h4 id="1-解决方法"><a href="#1-解决方法" class="headerlink" title="1.解决方法:"></a>1.解决方法:</h4><ul>
<li>1.方法一:</li>
</ul>
<blockquote>
<p>修改 angular 项目中 angular.json 文件的 <code>&quot;optimization&quot;: true,</code> 为 <code>&quot;optimization&quot;: false,</code> 即可,但 <code>ng build --prod</code> 出来的包会从原来的 3M  变为 16M.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	&quot;projects&quot;:&#123;</span><br><span class="line">		&quot;architect&quot;:&#123;</span><br><span class="line">			&quot;configurations&quot;:&#123;</span><br><span class="line">			&#x2F;&#x2F; 这里改为 false</span><br><span class="line">			&quot;optimization&quot;: false,</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.方法二：</li>
</ul>
<blockquote>
<p>把包降级到 <code>1.5.0</code> 版本:</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm uninstall oidc-client</span><br><span class="line">npm install oidc-client@1.5.0 --save</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>这样使用 <code>ng build --prod</code> 生成的包大小还是 3M ，可以解决这个问题.</p>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Angular 图表的使用</title>
    <url>/2019/08/19/Angular-chart/</url>
    <content><![CDATA[<blockquote>
<p>Angular 中对图表使用的记录</p>
</blockquote>
<a id="more"></a>

<h2 id="1-JavaScript-Chart"><a href="#1-JavaScript-Chart" class="headerlink" title="1.JavaScript Chart"></a><a href="#javascript_chart">1.JavaScript Chart</a></h2><h2 id="2-Angular-Charts"><a href="#2-Angular-Charts" class="headerlink" title="2.Angular Charts"></a><a href="#angular_chart">2.Angular Charts</a></h2><h2 id="3-使用中出现的问题"><a href="#3-使用中出现的问题" class="headerlink" title="3.使用中出现的问题"></a><a href="#issues">3.使用中出现的问题</a></h2><hr>
<hr>
<hr>
<h2 id="1-JavaScript-Chart-1"><a href="#1-JavaScript-Chart-1" class="headerlink" title="1.JavaScript Chart"></a>1.JavaScript Chart<a name="javascript_chart"/></h2><h4 id="1-Google-Charts"><a href="#1-Google-Charts" class="headerlink" title="1.Google Charts"></a>1.<a href="https://github.com/FERNman/angular-google-charts">Google Charts</a></h4><h4 id="2-Jvectormap-区域性地图"><a href="#2-Jvectormap-区域性地图" class="headerlink" title="2.Jvectormap(区域性地图)"></a>2.Jvectormap(区域性地图)</h4><h5 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考:"></a>1.参考:</h5><ul>
<li>1.<a href="https://github.com/StephanWagner/svgMap">https://github.com/StephanWagner/svgMap</a></li>
<li>2.<a href="https://github.com/bjornd/jvectormap">bjornd/jvectormap</a></li>
<li>3.<a href="https://github.com/HelloWuJiaYi/jVectorMap-Footprint">教你用 jVectorMap 制作属于自己的旅行足迹</a></li>
</ul>
<h5 id="2-在-Angular-中导入-Jvectormap"><a href="#2-在-Angular-中导入-Jvectormap" class="headerlink" title="2.在 Angular 中导入 Jvectormap"></a>2.在 Angular 中导入 Jvectormap</h5><ul>
<li>1.在 <code>index.html</code> 中导入必要的文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;.&#x2F;assets&#x2F;js&#x2F;jquery-1.9.1.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;script type&#x3D;&quot;text&#x2F;javascript&quot; src&#x3D;&quot;.&#x2F;assets&#x2F;js&#x2F;jquery-jvectormap.min.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">&lt;link href&#x3D;&quot;.&#x2F;assets&#x2F;js&#x2F;jquery-jvectormap.min.css&quot; rel&#x3D;&quot;stylesheet&quot; media&#x3D;&quot;screen&quot;&gt;</span><br><span class="line">&lt;script src&#x3D;&quot;.&#x2F;assets&#x2F;js&#x2F;jquery-jvectormap-world-mill.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.在需要导入的 html 写入以下代码</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&lt;div id&#x3D;&quot;world-map&quot; style&#x3D;&quot;width: 100%; height: 100%&quot;  &gt;&lt;&#x2F;div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>3.然后在 component 中导入 Jvectormap 即可</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">declare var jQuery: any;</span><br><span class="line">export class WorldMapComponent implements OnInit &#123;</span><br><span class="line">	private  readonly MAP_VIEW_ID &#x3D; &#39;#world-map&#39;;</span><br><span class="line"></span><br><span class="line"> public initVectorChart(regionsData: any, vectorMapConfig: IVectorMapConfigBean) &#123;</span><br><span class="line"></span><br><span class="line">    jQuery(this.MAP_VIEW_ID).vectorMap(&#123;</span><br><span class="line">      map: &#39;world_mill&#39;,</span><br><span class="line">      series: &#123;</span><br><span class="line">        regions: [&#123;</span><br><span class="line">          values: regionsData, &#x2F;&#x2F; Map&#39;s data</span><br><span class="line">          scale: [&#39;#ffffff&#39;, &#39;#4CA858&#39;], &#x2F;&#x2F; color</span><br><span class="line">          normalizeFunction: &#39;polynomial&#39;</span><br><span class="line"></span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F; show the tip when mouse hover</span><br><span class="line">      onRegionTipShow: function(e, el, code) &#123;</span><br><span class="line">        &#x2F;&#x2F; [jvectormap-tip](https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;10664969&#x2F;jvectormap-label-is-not-visible-why)</span><br><span class="line">        &#x2F;&#x2F; CSS: https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;38656092&#x2F;jvector-map-how-to-change-the-size-of-tooltip-which-are-shown-when-mouse-cursor</span><br><span class="line">        if (regionsData[code]) &#123;</span><br><span class="line">          el.html(&#96;$&#123;el.html()&#125;: $&#123;regionsData[code] &#125;&#96;).css(&quot;fontSize&quot;,&quot;16px&quot;).css(&quot;border-radius&quot;,&quot;1em&quot;).css(&quot;background&quot;,&quot;white&quot;).css(&quot;color&quot;,&quot;black&quot;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          el.html(&#96;$&#123;el.html()&#125;&#96;).css(&quot;fontSize&quot;,&quot;16px&quot;).css(&quot;border-radius&quot;,&quot;1em&quot;).css(&quot;background&quot;,&quot;white&quot;).css(&quot;color&quot;,&quot;black&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F; When the region is click, move the camera to the region.</span><br><span class="line">      onRegionClick: function(e,  code,  isSelected,  selectedRegions) &#123;</span><br><span class="line">        jQuery(&#39;#world-map&#39;).vectorMap(&#39;get&#39;,&#39;mapObject&#39;).setFocus(&#123;region: code, animate: true&#125;);</span><br><span class="line">        vectorMapConfig.regionCode &#x3D; code;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F; Get the scale innformation when zoom</span><br><span class="line">      onViewportChange: function( e,  scale) &#123;</span><br><span class="line">        vectorMapConfig.zoomScale &#x3D; scale;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line">      backgroundColor: &#39;#B1C8EF&#39;, &#x2F;&#x2F; Ocean color</span><br><span class="line">      zoomMin: 1,</span><br><span class="line">      zoomMax: 10,</span><br><span class="line">      focusOn: &#123;region: vectorMapConfig.regionCode, animate: vectorMapConfig.isAnimate&#125;, &#x2F;&#x2F; zoom to the region when init</span><br><span class="line">      regionStyle: &#123;</span><br><span class="line">        initial: &#123;</span><br><span class="line">          fill: &#39;#F5F9FB&#39;,   &#x2F;&#x2F; sea default color</span><br><span class="line">          &quot;fill-opacity&quot;: 1, &#x2F;&#x2F;  Province should be hidden? 1:display, 2:hidden</span><br><span class="line">          stroke: &#39;none&#39;,</span><br><span class="line">          &quot;stroke-width&quot;: 0,</span><br><span class="line">          &quot;stroke-opacity&quot;: 1,</span><br><span class="line">        &#x2F;&#x2F; &#125;,</span><br><span class="line">        &#x2F;&#x2F; hover: &#123;</span><br><span class="line">          &#x2F;&#x2F; fill: &#39;#ffffff85&#39;,</span><br><span class="line">          &#x2F;&#x2F; &quot;fill-opacity&quot;: 0.8</span><br><span class="line">          &#x2F;&#x2F; &quot;fill-opacity&quot;: 0.8,</span><br><span class="line">          cursor: &#39;pointer&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        selected: &#123;</span><br><span class="line">          &#x2F;&#x2F; fill: &#39;yellow&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        selectedHover: &#123;&#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      regionLabelStyle: &#123;</span><br><span class="line">        initial: &#123;</span><br><span class="line">          fill: &#39;#B90E32&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        hover: &#123;</span><br><span class="line">          fill: &#39;black&#39;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      &#x2F;&#x2F; show the text which is still show on the region.</span><br><span class="line">      labels: &#123;</span><br><span class="line">        regions: &#123;</span><br><span class="line">          render: function(code) &#123;</span><br><span class="line">            return regionsData[code];</span><br><span class="line">          &#125;,</span><br><span class="line">          offsets: function(code) &#123;</span><br><span class="line">            return &#123;</span><br><span class="line">              &#39;FR&#39;: [60, -50],</span><br><span class="line">              &#39;AT&#39;: [3, 0],</span><br><span class="line">              &#39;NO&#39;: [-20, 30],</span><br><span class="line">              &#39;SE&#39;: [-5, 0],</span><br><span class="line">              &#39;DK&#39;: [-3, 0],</span><br><span class="line">              &#39;US&#39;: [-280, 30],</span><br><span class="line">            &#125;[code];</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;,</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="3-在-Angular-中导入-javascript-文件"><a href="#3-在-Angular-中导入-javascript-文件" class="headerlink" title="3.在 Angular 中导入 javascript 文件"></a>3.在 Angular 中导入 javascript 文件</h4><ul>
<li>1.<a href="https://www.truecodex.com/course/angular-6/how-to-use-external-js-files-and-javascript-code-in-angular">How to use external JS files and JavaScript code in Angular 6/7</a></li>
</ul>
<h4 id="4-Leaflet-Map"><a href="#4-Leaflet-Map" class="headerlink" title="4.Leaflet Map"></a>4.<a href="https://leafletjs.com/">Leaflet Map</a></h4><hr>
<h2 id="2-Angular-Charts-1"><a href="#2-Angular-Charts-1" class="headerlink" title="2.Angular Charts"></a>2.Angular Charts<a name="angular_chart"/></h2><ul>
<li><p>1.<a href="https://medium.com/@alphacoder/angular-4-chart-library-8571c2ef50e4">Angular 4 Chart library</a></p>
</li>
<li><p>2.<a href="https://github.com/swimlane/ngx-charts">https://github.com/swimlane/ngx-charts</a></p>
</li>
<li><p>3.<a href="https://valor-software.com/ng2-charts/#LineChart">ng2-charts</a></p>
<ul>
<li>1.<a href="https://github.com/valor-software/ng2-charts">Github:ng2-charts</a></li>
<li>2.<a href="https://www.chartjs.org/docs/latest/general/colors.html">Chart.js docs</a></li>
<li>3.<a href="https://stackblitz.com/edit/ng2-charts-line-template-alysmu?file=src/app/app.component.ts">Line demo</a></li>
</ul>
</li>
<li><p>4.<a href="https://google-developers.appspot.com/chart/interactive/docs/">Google Chart</a></p>
<ul>
<li>1.<a href="http://anthonygiretti.com/2017/10/12/using-google-charts-in-angular-4-project-part-2/">Using Google Charts in Angular 4 project, part 2</a>    * 2.<a href="https://developers.google.com/chart/interactive/docs/gallery/geochart">GEO Charts(账号需要信用卡去做绑定)</a></li>
<li>3.<a href="https://github.com/FERNman/angular-google-charts">GitHub:angular-google-charts</a></li>
</ul>
</li>
<li><p>5.<a href="https://developers.google.com/maps/documentation">Google Map</a></p>
<ul>
<li>1.<a href="https://medium.com/@balramchavan/integrating-google-maps-in-angular-5-ca5f68009f29">Integrating Google Maps in Angular 6</a></li>
<li>2.<a href="https://github.com/SebastianM/angular-google-maps">Angular 包:SebastianM/angular-google-maps</a></li>
</ul>
</li>
</ul>
<h2 id="3-使用中出现的问题-1"><a href="#3-使用中出现的问题-1" class="headerlink" title="3.使用中出现的问题"></a>3.使用中出现的问题<a name="issues"/></h2><ul>
<li>1.<a href="https://github.com/valor-software/ng2-charts/issues/535">出现 <code>Can&#39;t bind to &#39;datasets&#39; since it isn&#39;t a known property of &#39;base-chart&#39;.</code> 问题</a><ul>
<li>1.如果是在子 Module 中使用，就需要在子 Module 中导入，如我的子 Module 为 <code>HomeModule</code> , 根 Module 为 <code>AppModule</code> ,则在 <code>HomeModule</code> 中写入 <code>  imports: [ ChartsModule, ]</code></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Angular Code Style</title>
    <url>/2020/04/30/Angular-code-style/</url>
    <content><![CDATA[<blockquote>
<p>Angular 编码风格与文件结构<br>文章搬运工，只为个人参考之用.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h2><h2 id="2-编写易于阅读的代码"><a href="#2-编写易于阅读的代码" class="headerlink" title="2.编写易于阅读的代码"></a>2.编写易于阅读的代码</h2><h2 id="3-高效的-Angular-程序编写"><a href="#3-高效的-Angular-程序编写" class="headerlink" title="3.高效的 Angular 程序编写"></a>3.高效的 Angular 程序编写</h2><h2 id="4-属性的命名"><a href="#4-属性的命名" class="headerlink" title="4.属性的命名"></a>4.属性的命名</h2><h2 id="5-方法的命名"><a href="#5-方法的命名" class="headerlink" title="5.方法的命名"></a>5.方法的命名</h2><h2 id="6-类的命名"><a href="#6-类的命名" class="headerlink" title="6.类的命名"></a>6.类的命名</h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考</h2><ul>
<li>1.<a href="https://angular.cn/guide/styleguide#angular-coding-style-guide">风格指南</a></li>
<li>2.<a href="https://itnext.io/clean-code-checklist-in-angular-%EF%B8%8F-10d4db877f74">Clean Code Checklist in Angular</a></li>
<li>3.<a href="https://itnext.io/choosing-a-highly-scalable-folder-structure-in-angular-d987de65ec7">How to define a highly scalable folder structure for your Angular project</a></li>
<li>4.<a href="https://www.freecodecamp.org/news/best-practices-for-a-clean-and-performant-angular-application-288e7b39eb6f/">Best practices for a clean and performant Angular application</a></li>
<li>5.<a href="https://github.com/ghzjtian/clean-code-javascript">clean-code-javascript<Github></a></li>
<li>6.<a href="https://hackernoon.com/the-art-of-naming-variables-52f44de00aad">The art of naming variables</a></li>
<li>7.<a href="https://blog.usejournal.com/naming-your-variables-f9477ba002e9">Naming your variables!</a></li>
<li>8.<a href="">JavaScript Style Guide and Coding Conventions</a></li>
</ul>
<h2 id="2-编写易于阅读的代码-1"><a href="#2-编写易于阅读的代码-1" class="headerlink" title="2.编写易于阅读的代码"></a>2.编写易于阅读的代码</h2><ul>
<li>1.方法名要明确指出该方法的作用</li>
<li>2.添加小而简单的方法, 每个方法只完成一个功能.</li>
<li>3.移除没用到的代码.</li>
<li>4.避免添加注释</li>
<li>5.避免使用 any 类型.</li>
</ul>
<h2 id="3-高效的-Angular-程序编写-1"><a href="#3-高效的-Angular-程序编写-1" class="headerlink" title="3.高效的 Angular 程序编写"></a>3.高效的 Angular 程序编写</h2><h4 id="1-懒加载-Modules"><a href="#1-懒加载-Modules" class="headerlink" title="1.懒加载 Modules"></a>1.懒加载 Modules</h4><h4 id="2-RxJS-的应用"><a href="#2-RxJS-的应用" class="headerlink" title="2.RxJS 的应用"></a>2.RxJS 的应用</h4><h4 id="3-Subscribe-in-template-use-async"><a href="#3-Subscribe-in-template-use-async" class="headerlink" title="3.Subscribe in template.(use async)"></a>3.Subscribe in template.(use async)</h4><h4 id="4-Clean-up-subscriptions"><a href="#4-Clean-up-subscriptions" class="headerlink" title="4.Clean up subscriptions"></a>4.Clean up subscriptions</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; Before</span><br><span class="line">iAmAnObservable</span><br><span class="line">    .pipe(</span><br><span class="line">       map(value &#x3D;&gt; value.item)     </span><br><span class="line">     )</span><br><span class="line">    .subscribe(item &#x3D;&gt; this.textToDisplay &#x3D; item);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; After </span><br><span class="line">private _destroyed$ &#x3D; new Subject();</span><br><span class="line">public ngOnInit (): void &#123;</span><br><span class="line">    iAmAnObservable</span><br><span class="line">    .pipe(</span><br><span class="line">       map(value &#x3D;&gt; value.item)</span><br><span class="line">      &#x2F;&#x2F; We want to listen to iAmAnObservable until the component is destroyed,</span><br><span class="line">       takeUntil(this._destroyed$)</span><br><span class="line">     )</span><br><span class="line">    .subscribe(item &#x3D;&gt; this.textToDisplay &#x3D; item);</span><br><span class="line">&#125;</span><br><span class="line">public ngOnDestroy (): void &#123;</span><br><span class="line">    this._destroyed$.next();</span><br><span class="line">    this._destroyed$.complete();</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<h4 id="5-编写安全的-string"><a href="#5-编写安全的-string" class="headerlink" title="5.编写安全的 string"></a>5.编写安全的 string</h4><blockquote>
<p>如果 string 只能去指定的几个值，最好定义一些可能性的值.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; Before</span><br><span class="line">private myStringValue: string;</span><br><span class="line">if (itShouldHaveFirstValue) &#123;</span><br><span class="line">   myStringValue &#x3D; &#39;First&#39;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">   myStringValue &#x3D; &#39;Second&#39;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; After</span><br><span class="line">private myStringValue: &#39;First&#39; | &#39;Second&#39;;</span><br><span class="line">if (itShouldHaveFirstValue) &#123;</span><br><span class="line">   myStringValue &#x3D; &#39;First&#39;;</span><br><span class="line">&#125; else &#123;</span><br><span class="line">   myStringValue &#x3D; &#39;Other&#39;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; This will give the below error</span><br><span class="line">Type &#39;&quot;Other&quot;&#39; is not assignable to type &#39;&quot;First&quot; | &quot;Second&quot;&#39;</span><br><span class="line">(property) AppComponent.myValue: &quot;First&quot; | &quot;Second&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="4-属性的命名-1"><a href="#4-属性的命名-1" class="headerlink" title="4.属性的命名"></a>4.属性的命名</h2><ul>
<li>1.Arrays</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; great - &quot;names&quot; implies strings</span><br><span class="line">const fruitNames &#x3D; [&#39;apple&#39;, &#39;banana&#39;, &#39;cucumber&#39;];</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; great</span><br><span class="line">const fruits &#x3D; [&#123;</span><br><span class="line">    name: &#39;apple&#39;,</span><br><span class="line">    genus: &#39;malus&#39;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    name: &#39;banana&#39;,</span><br><span class="line">    genus: &#39;musa&#39;</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    name: &#39;cucumber&#39;,</span><br><span class="line">    genus: &#39;cucumis&#39;</span><br><span class="line">&#125;];</span><br></pre></td></tr></table></figure>

<ul>
<li>2.Booleans</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; good</span><br><span class="line">const isOpen &#x3D; true;</span><br><span class="line">const canWrite &#x3D; true;</span><br><span class="line">const hasFruit &#x3D; true;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const checkHasFruit &#x3D; (user, fruitName) &#x3D;&gt; (</span><br><span class="line">    user.fruits.includes(fruitName)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">const hasFruit &#x3D; checkHasFruit(user, &#39;apple&#39;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>3.Numbers</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; good</span><br><span class="line">const minPugs &#x3D; 1;</span><br><span class="line">const maxPugs &#x3D; 5;</span><br><span class="line">const totalPugs &#x3D; 3;</span><br></pre></td></tr></table></figure>

<ul>
<li>4.Functions.<code> A good format to follow is actionResource. For example, getUser.</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; good</span><br><span class="line">getUser(userId);</span><br><span class="line">calculateTotal(items);</span><br><span class="line">&#x2F;&#x2F; I like it!</span><br><span class="line">toDollars(&#39;euros&#39;, 20);</span><br><span class="line">toUppercase(&#39;a string&#39;);</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; good</span><br><span class="line">const newFruits &#x3D; fruits.map(fruit &#x3D;&gt; &#123;</span><br><span class="line">    return doSomething(fruit);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>


<h2 id="5-方法的命名-1"><a href="#5-方法的命名-1" class="headerlink" title="5.方法的命名"></a>5.方法的命名</h2><ul>
<li>1.click 点击事件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(click)&#x3D;&quot;onCancelClick()&quot;</span><br><span class="line">(click)&#x3D;&quot;onSaveClick()&quot;</span><br></pre></td></tr></table></figure>


<h2 id="6-类的命名-1"><a href="#6-类的命名-1" class="headerlink" title="6.类的命名"></a>6.类的命名</h2><h4 id="1-Model"><a href="#1-Model" class="headerlink" title="1.Model"></a>1.Model</h4><blockquote>
<p>参考 Angular <a href="https://angular.cn/tutorial"><code>英雄指南</code> </a> 中 Model 的命名规则.</p>
</blockquote>
<ul>
<li>1.文件名: <code>hero.model.ts</code>, 类名为 <code>Hero</code>, 如</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export interface Hero &#123;</span><br><span class="line">  id: number;</span><br><span class="line">  name: string;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Angular 中 Google Map 地图开发</title>
    <url>/2020/04/24/Angular-google-develop/</url>
    <content><![CDATA[<p>在 Angular 中导入地图组件.</p>
<a id="more"></a>


<h1 id="Angular-中-Google-Map-地图开发"><a href="#Angular-中-Google-Map-地图开发" class="headerlink" title="Angular 中 Google Map 地图开发"></a>Angular 中 Google Map 地图开发</h1><h2 id="1-价格配置信息"><a href="#1-价格配置信息" class="headerlink" title="1.价格配置信息"></a>1.价格配置信息</h2><h4 id="1-全球可选地图服务列表"><a href="#1-全球可选地图服务列表" class="headerlink" title="1.全球可选地图服务列表"></a>1.全球可选地图服务列表</h4><blockquote>
<p><a href="https://en.wikipedia.org/wiki/List_of_online_map_services">List of online map services</a></p>
</blockquote>
<p><img src="http://pic.pgyjz.cn/blog/Angular/global-map-services.png"></p>
<h4 id="2-Google-map-价格资料"><a href="#2-Google-map-价格资料" class="headerlink" title="2.Google-map 价格资料"></a>2.Google-map 价格资料</h4><p><a href="https://cloud.google.com/maps-platform/pricing/sheet">* 1.PRICING FOR MAPS, ROUTES, AND PLACES</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">每个 google map 用户每月均可获得价值 $200 的免费额度, 因为 A3S 系统使用的是 &#96;Dynamic Maps&#96;, 所以一个月有 28,000 次(即每天大概 933次)的免费使用额度，已足够使用.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p><img src="http://pic.pgyjz.cn/blog/Angular/API-Prices.png"></p>
<h4 id="2-关于-API-Key-对网站的限制"><a href="#2-关于-API-Key-对网站的限制" class="headerlink" title="2.关于 API-Key 对网站的限制"></a>2.关于 API-Key 对网站的限制</h4><blockquote>
<p>Restrictions help prevent unauthorized use and quota theft.</p>
</blockquote>
<ul>
<li>1.为了防止别人恶意的使用 API-KEY ， 需要对 API-KEY  进行限制，具体是在 CENDENTIALS 中配置那个网站的 URL .</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Angular/API-Restrictions.png"></p>
<ul>
<li>2.配置 API-KEY 支持以下 IP 的 map 使用</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Angular/API-Restrictions-supports.png"></p>
<h4 id="3-功能开发"><a href="#3-功能开发" class="headerlink" title="3.功能开发"></a>3.功能开发</h4><h5 id="1-相关参考链接"><a href="#1-相关参考链接" class="headerlink" title="1.相关参考链接"></a>1.相关参考链接</h5><ul>
<li><p>1.<a href="https://developers.google.com/maps/documentation/javascript/tutorial?hl=zh_CN">Maps JavaScript API</a></p>
</li>
<li><p>2.<a href="https://github.com/SebastianM/angular-google-maps">SebastianM/angular-google-maps</a></p>
<ul>
<li>1.定制化很高，所以很难自定义化</li>
</ul>
</li>
<li><p>3.<a href="https://github.com/angular/components/tree/master/src/google-maps">Angular official google-map component</a></p>
<ul>
<li>1.只支持 Angular CLI 9.0 及以上.</li>
</ul>
</li>
<li><p>4.<a href="https://dev.to/devpato/setup-google-map-in-angular-app-the-pro-way-3m9p">Setup Google Map in Angular app (The pro way) pt1</a></p>
<ul>
<li>1.手动自己导入 google-map ,亲手证实可行.</li>
<li>2.下面的记录主要针对这个教程.</li>
<li>2.<a href="https://stackoverflow.com/questions/34931771/how-to-load-google-maps-api-asynchronously-in-angular2/40462864#40462864">How to load google maps api asynchronously in Angular2</a><ul>
<li>设置 google-map 加载完成后再显示页面.</li>
</ul>
</li>
</ul>
</li>
</ul>
<h5 id="2-简单效果"><a href="#2-简单效果" class="headerlink" title="2.简单效果"></a>2.简单效果</h5><ul>
<li>1.添加一个 <code>Control</code> 的按钮.(有 icon, 并添加点击事件)<br><a href="https://developers.google.com/maps/documentation/javascript/examples/control-positioning?hl=zh_CN">Control Positioning</a><br><a href="https://developers.google.com/maps/documentation/javascript/examples/control-custom?hl=zh_CN">Custom Controls</a> 的功能.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">addSubComponentToElement(element: HTMLElement, customElementInfo: CustomElementBean) &#123;</span><br><span class="line">    const controlUI &#x3D; document.createElement(&#39;div&#39;);</span><br><span class="line">    this.setDefaultControlUiStyle(controlUI.style, customElementInfo);</span><br><span class="line">    controlUI.title &#x3D; customElementInfo.promptMessage;</span><br><span class="line"></span><br><span class="line">    const controlImg &#x3D; document.createElement(&#39;img&#39;);</span><br><span class="line">    controlImg.src &#x3D; customElementInfo.imageSrc;</span><br><span class="line">    this.setDefaultControlImgStyle(controlImg.style);</span><br><span class="line">    controlUI.appendChild(controlImg);</span><br><span class="line"></span><br><span class="line">    element.appendChild(controlUI);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  setDefaultControlUiStyle(controlUiStyle: CSSStyleDeclaration, customElementInfo: CustomElementBean) &#123;</span><br><span class="line">    if (customElementInfo.backgroundColor !&#x3D;&#x3D; null ) &#123;</span><br><span class="line">      controlUiStyle.backgroundColor &#x3D; customElementInfo.backgroundColor;</span><br><span class="line">      controlUiStyle.borderRadius &#x3D; &#39;3px&#39;;</span><br><span class="line">      controlUiStyle.boxShadow &#x3D; &#39;0 2px 6px rgba(0,0,0,0.3)&#39;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    controlUiStyle.cursor &#x3D; &#39;pointer&#39;;</span><br><span class="line">    controlUiStyle.marginRight &#x3D; customElementInfo.marginRight;</span><br><span class="line">    controlUiStyle.marginTop &#x3D; &#39;12px&#39;;</span><br><span class="line">    controlUiStyle.textAlign &#x3D; &#39;center&#39;;</span><br><span class="line">    controlUiStyle.minHeight &#x3D; &#39;40px&#39;;</span><br><span class="line">    controlUiStyle.minWidth &#x3D; &#39;40px&#39;;</span><br><span class="line">    controlUiStyle.display &#x3D; &#39;flex&#39;;</span><br><span class="line">  &#125;</span><br><span class="line">  setDefaultControlImgStyle(controlUiStyle: CSSStyleDeclaration) &#123;</span><br><span class="line">    controlUiStyle.height &#x3D; &#39;25px&#39;;</span><br><span class="line">    controlUiStyle.width &#x3D; &#39;25px&#39;;</span><br><span class="line">    controlUiStyle.margin &#x3D; &#39;auto&#39;;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>3.添加 Marker<br><a href="https://developers.google.com/maps/documentation/javascript/markers?hl=zh_CN">Markers</a><br><a href="https://developers.google.com/maps/documentation/javascript/custom-markers?hl=zh_CN">Customizing a Google Map: Custom Markers</a></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const DEFAULT_SCALED_SIZE &#x3D; 20;</span><br><span class="line">   const DEFAULT_ANCHOR_POINT &#x3D; 10;</span><br><span class="line">   &#x2F;&#x2F; Mower Location Marker and Circle</span><br><span class="line">   &#x2F;&#x2F; [Set the icon align center](https:&#x2F;&#x2F;stackoverflow.com&#x2F;a&#x2F;12093539&#x2F;5237440)</span><br><span class="line">   const markerIcon &#x3D; &#123;</span><br><span class="line">     url: iconUrl,</span><br><span class="line">     scaledSize: new google.maps.Size(DEFAULT_SCALED_SIZE, DEFAULT_SCALED_SIZE),</span><br><span class="line">     anchor: new google.maps.Point(DEFAULT_ANCHOR_POINT, DEFAULT_ANCHOR_POINT),</span><br><span class="line">   &#125;;</span><br><span class="line">   const marker &#x3D; new google.maps.Marker(&#123;</span><br><span class="line">     position: markerPosition,</span><br><span class="line">     map: markerMap,</span><br><span class="line">     title: markerTitle,</span><br><span class="line">     icon: markerIcon,</span><br><span class="line">     draggable: canDrag,</span><br><span class="line">     zIndex: curzIndex</span><br><span class="line">   &#125;);</span><br><span class="line">   return marker;</span><br></pre></td></tr></table></figure>


<ul>
<li>4.添加 <code>Circle</code><br><a href="https://developers.google.com/maps/documentation/javascript/shapes?hl=zh_CN#circles">Circles Shape</a></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">const mapCircle &#x3D; new google.maps.Circle(&#123;</span><br><span class="line">  strokeColor: &#39;#fff&#39;,</span><br><span class="line">  strokeOpacity: 0,</span><br><span class="line">  strokeWeight: 0,</span><br><span class="line">  fillColor: circleFillColor,</span><br><span class="line">  fillOpacity: 0.42,</span><br><span class="line">  map: curMap,</span><br><span class="line">  center: centerPosition,</span><br><span class="line">  radius: circleRadius</span><br><span class="line">&#125;);</span><br><span class="line">return mapCircle;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Angular 自定义主题</title>
    <url>/2020/06/01/Angular-theme/</url>
    <content><![CDATA[<blockquote>
<p>Angular 的主题能影响到 Angular Material 所有控件的颜色显示状况.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a><a href="#references">1.参考</a></h2><h2 id="2-自定义一个简单的主题"><a href="#2-自定义一个简单的主题" class="headerlink" title="2.自定义一个简单的主题"></a><a href="#define-new-theme">2.自定义一个简单的主题</a></h2><h2 id="3-新增特殊情况下的主题"><a href="#3-新增特殊情况下的主题" class="headerlink" title="3.新增特殊情况下的主题"></a><a href="#add-special-theme">3.新增特殊情况下的主题</a></h2><h2 id="4-黑白主题的切换"><a href="#4-黑白主题的切换" class="headerlink" title="4.黑白主题的切换"></a><a href="#light-dark-theme-switch">4.黑白主题的切换</a></h2><h2 id="5-自定义多一种颜色"><a href="#5-自定义多一种颜色" class="headerlink" title="5.自定义多一种颜色"></a><a href="#define-new-color">5.自定义多一种颜色</a></h2><h2 id="6-多个主题的切换"><a href="#6-多个主题的切换" class="headerlink" title="6.多个主题的切换"></a><a href="#multi-theme-switch">6.多个主题的切换</a></h2><h2 id="7-自定义文字排版"><a href="#7-自定义文字排版" class="headerlink" title="7.自定义文字排版"></a><a href="#custom-typography">7.自定义文字排版</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考<a name="references"/></h2><ul>
<li>1.<a href="https://www.positronx.io/create-angular-material-8-custom-theme/">https://www.positronx.io/create-angular-material-8-custom-theme/</a></li>
<li>2.<a href="https://material.angular.cn/guide/theming">设置 Angular Material 应用的主题</a></li>
<li>3.<a href="https://material.io/resources/color/">Material COLOR TOOL</a></li>
</ul>
<h2 id="2-自定义一个简单的主题-1"><a href="#2-自定义一个简单的主题-1" class="headerlink" title="2.自定义一个简单的主题"></a>2.自定义一个简单的主题<a name="define-new-theme"/></h2><h4 id="1-新建一个-custom-material-theme-scss-文件，写入自定义的主题颜色"><a href="#1-新建一个-custom-material-theme-scss-文件，写入自定义的主题颜色" class="headerlink" title="1.新建一个 custom-material-theme.scss 文件，写入自定义的主题颜色"></a>1.新建一个 <code>custom-material-theme.scss</code> 文件，写入自定义的主题颜色</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@import &#39;~@angular&#x2F;material&#x2F;theming&#39;;</span><br><span class="line">@include mat-core();</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 自定义一个颜色模板</span><br><span class="line">$mat-custom-green: (</span><br><span class="line">  50: #e8f5e9,</span><br><span class="line">  100: #c8e6c9,</span><br><span class="line">  200: #a5d6a7,</span><br><span class="line">  300: #81c784,</span><br><span class="line">  400: #66bb6a,</span><br><span class="line">  500: #4caf50,</span><br><span class="line">  600: #43a047,</span><br><span class="line">  700: #388e3c,</span><br><span class="line">  800: #2e7d32,</span><br><span class="line">  900: #1b5e20,</span><br><span class="line">  A100: #b9f6ca,</span><br><span class="line">  A200: #69f0ae,</span><br><span class="line">  A400: #00e676,</span><br><span class="line">  A700: #00c853,</span><br><span class="line">  contrast: (</span><br><span class="line">    50: $dark-primary-text,</span><br><span class="line">    100: $dark-primary-text,</span><br><span class="line">    200: $dark-primary-text,</span><br><span class="line">    300: $dark-primary-text,</span><br><span class="line">    400: $dark-primary-text,</span><br><span class="line">    500: $light-primary-text,</span><br><span class="line">    600: $light-primary-text,</span><br><span class="line">    700: $light-primary-text,</span><br><span class="line">    800: $light-primary-text,</span><br><span class="line">    900: $light-primary-text,</span><br><span class="line">    A100: $dark-primary-text,</span><br><span class="line">    A200: $light-primary-text,</span><br><span class="line">    A400: $light-primary-text,</span><br><span class="line">    A700: $light-primary-text,</span><br><span class="line">  )</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; $mat-indigo 为 Angular 官方提前定义好的颜色模板, 路径在 &#96;node_modules&#x2F;@angular&#x2F;material&#x2F;_theming.scss&#96;</span><br><span class="line">$candy-app-primary: mat-palette($mat-indigo);</span><br><span class="line">$candy-app-accent: mat-palette($mat-pink);</span><br><span class="line">$candy-app-warn:    mat-palette($mat-custom-green, 400, 50, 900);</span><br><span class="line"></span><br><span class="line">$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; All materil</span><br><span class="line">@include angular-material-theme($candy-app-theme);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&#x2F;&#x2F; Special materil</span><br><span class="line">&#x2F;&#x2F;&#x2F;&#x2F; Include the theme styles for only specified components.</span><br><span class="line">&#x2F;&#x2F; @include mat-core-theme($candy-app-theme);</span><br><span class="line">&#x2F;&#x2F; @include mat-button-theme($candy-app-theme);</span><br><span class="line">&#x2F;&#x2F; @include mat-checkbox-theme($candy-app-theme);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="2-在-angular-json-的-build-styles-加入-custom-material-theme-scss-的路径"><a href="#2-在-angular-json-的-build-styles-加入-custom-material-theme-scss-的路径" class="headerlink" title="2.在 angular.json 的 build/styles 加入 custom-material-theme.scss 的路径"></a>2.在 <code>angular.json</code> 的 <code>build/styles</code> 加入 <code>custom-material-theme.scss</code> 的路径</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&quot;styles&quot;: [</span><br><span class="line">     &quot;.&#x2F;node_modules&#x2F;@angular&#x2F;material&#x2F;prebuilt-themes&#x2F;indigo-pink.css&quot;, &#x2F;&#x2F; 导入默认的主题</span><br><span class="line">     &quot;src&#x2F;styles&#x2F;custom-material-theme.scss&quot;    &#x2F;&#x2F; 导入自定义的主题</span><br><span class="line">]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3-查看自定义主题的效果"><a href="#3-查看自定义主题的效果" class="headerlink" title="3.查看自定义主题的效果"></a>3.查看自定义主题的效果</h4><blockquote>
<p>如: Button 中的 文字及背景 颜色</p>
</blockquote>
<ul>
<li>1.我们定义了 warn 颜色: <code>$candy-app-warn:    mat-palette($mat-custom-green, 400, 50, 900);</code></li>
<li>2.<code>$mat-custom-green</code> 的定义为: </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$dark-primary-text: rgba(black, 0.87);</span><br><span class="line">$light-primary-text: white;</span><br><span class="line"></span><br><span class="line">$mat-custom-green: (</span><br><span class="line">  50: #e8f5e9,</span><br><span class="line">  100: #c8e6c9,</span><br><span class="line">  200: #a5d6a7,</span><br><span class="line">  300: #81c784,</span><br><span class="line">  400: #66bb6a,</span><br><span class="line">  500: #4caf50,</span><br><span class="line">  600: #43a047,</span><br><span class="line">  700: #388e3c,</span><br><span class="line">  800: #2e7d32,</span><br><span class="line">  900: #1b5e20,</span><br><span class="line">  A100: #b9f6ca,</span><br><span class="line">  A200: #69f0ae,</span><br><span class="line">  A400: #00e676,</span><br><span class="line">  A700: #00c853,</span><br><span class="line">  contrast: (</span><br><span class="line">    50: $dark-primary-text,</span><br><span class="line">    100: $dark-primary-text,</span><br><span class="line">    200: $dark-primary-text,</span><br><span class="line">    300: $dark-primary-text,</span><br><span class="line">    400: $dark-primary-text,</span><br><span class="line">    500: $light-primary-text,</span><br><span class="line">    600: $light-primary-text,</span><br><span class="line">    700: $light-primary-text,</span><br><span class="line">    800: $light-primary-text,</span><br><span class="line">    900: $light-primary-text,</span><br><span class="line">    A100: $dark-primary-text,</span><br><span class="line">    A200: $light-primary-text,</span><br><span class="line">    A400: $light-primary-text,</span><br><span class="line">    A700: $light-primary-text,</span><br><span class="line">  )</span><br><span class="line">);</span><br></pre></td></tr></table></figure>

<ul>
<li>3.则 <code>material button</code> 的颜色为 <code>#66bb6a</code> 或 <code>rgba(black, 0.87)</code> 如下图所示</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Angular/Xnip2020-06-04_10-53-07.png"></p>
<h2 id="3-新增特殊情况下的主题-1"><a href="#3-新增特殊情况下的主题-1" class="headerlink" title="3.新增特殊情况下的主题"></a>3.新增特殊情况下的主题<a name="add-special-theme"/></h2><ul>
<li>1.在 <code>custom-material-theme.scss</code> 下添加以下代码</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; Add class</span><br><span class="line">.special-theme &#123;</span><br><span class="line">  $candy-alternate-primary: mat-palette($mat-green);</span><br><span class="line">  $candy-alternate-accent: mat-palette($mat-blue);</span><br><span class="line">  $candy-alternate-warn:    mat-palette($mat-yellow);</span><br><span class="line"></span><br><span class="line">  $candy-alternate-theme: mat-light-theme($candy-alternate-primary, $candy-alternate-accent, $candy-alternate-warn);</span><br><span class="line"></span><br><span class="line">  @include angular-material-theme($candy-alternate-theme);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.在 html 父类中添加 <code>alternate-theme1 </code> class.</li>
<li>3.效果如下所示.</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Angular/Xnip2020-06-04_11-29-02.png"></p>
<h2 id="4-黑白主题的切换-1"><a href="#4-黑白主题的切换-1" class="headerlink" title="4.黑白主题的切换."></a>4.黑白主题的切换.<a name="light-dark-theme-switch"/></h2><ul>
<li>1.<a href="https://medium.com/@PhilippKief/automatic-dark-mode-detection-in-angular-material-8342917885a0">Automatic Dark Mode Detection in Angular Material</a></li>
<li>2.<a href="https://medium.com/@svenbudak/how-to-implement-dark-light-mode-in-angular-mateiral-with-prefers-color-scheme-ce3e980e2ea5">How to implement dark / light mode in Angular Material with prefers-color-scheme</a></li>
</ul>
<h2 id="5-自定义多一种颜色-1"><a href="#5-自定义多一种颜色-1" class="headerlink" title="5.自定义多一种颜色"></a>5.自定义多一种颜色<a name="define-new-color"/></h2><h4 id="1-参考-2"><a href="#1-参考-2" class="headerlink" title="1.参考"></a>1.参考</h4><ul>
<li>1.<a href="https://stackoverflow.com/a/48015134/5237440">angular material design - add custom button color</a></li>
<li>2.<a href="https://stackblitz.com/edit/tian-angular-button-style?embed=1&file=app/button-types-example.css">Stackblitz: tian-angular-button-style</a></li>
</ul>
<blockquote>
<p>(除了 <code>primary/accent/warn</code> 外.)</p>
</blockquote>
<h4 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤"></a>2.步骤</h4><ul>
<li>1.在 <code>custom-material-theme.scss</code> 中添加 <code>success</code> color.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 定义</span><br><span class="line">@mixin success-palette &#123;</span><br><span class="line">	.mat-button,</span><br><span class="line">	.mat-stroked-button,</span><br><span class="line">	.mat-icon-button&#123;</span><br><span class="line">	  &amp;.mat-success &#123;</span><br><span class="line">	    color: #155724;</span><br><span class="line">	  &#125;</span><br><span class="line">	&#125;</span><br><span class="line">	.mat-raised-button,</span><br><span class="line">	.mat-flat-button,</span><br><span class="line">	.mat-fab,</span><br><span class="line">	.mat-mini-fab&#123;</span><br><span class="line">	  &amp;.mat-success&#123;</span><br><span class="line">	    color: #f0fff3;</span><br><span class="line">	    background-color: #155724;</span><br><span class="line">	  &#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; When is Disable</span><br><span class="line">  $default-disable-bg-color: rgba(0,0,0,.12);</span><br><span class="line"></span><br><span class="line">  .mat-button,</span><br><span class="line">  .mat-stroked-button,</span><br><span class="line">  .mat-icon-button&#123;</span><br><span class="line">    &amp;.mat-success[disabled]&#123;</span><br><span class="line">      color: $default-disable-bg-color;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  .mat-raised-button,</span><br><span class="line">  .mat-flat-button,</span><br><span class="line">  .mat-fab,</span><br><span class="line">  .mat-mini-fab&#123;</span><br><span class="line">    &amp;.mat-success[disabled]&#123;</span><br><span class="line">        color: rgba(0,0,0,.26);</span><br><span class="line">        background-color: $default-disable-bg-color;</span><br><span class="line">        background-image: linear-gradient($default-disable-bg-color, $default-disable-bg-color);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; 导入</span><br><span class="line">@include success-palette;</span><br><span class="line">  </span><br><span class="line">  &#x2F;&#x2F; 如果是有 特殊情况下的主题, 如上面的步骤三，在特殊主题的类里面也添加, 如</span><br><span class="line">  </span><br><span class="line">	.special-theme &#123;</span><br><span class="line">	  $candy-alternate-primary: mat-palette($mat-green);</span><br><span class="line">	  $candy-alternate-accent: mat-palette($mat-blue);</span><br><span class="line">	  $candy-alternate-warn:    mat-palette($mat-yellow);</span><br><span class="line">	</span><br><span class="line">	  $candy-alternate-theme: mat-light-theme($candy-alternate-primary, $candy-alternate-accent, $candy-alternate-warn);</span><br><span class="line">	</span><br><span class="line">	  @include angular-material-theme($candy-alternate-theme);</span><br><span class="line">	  </span><br><span class="line">	  @include success-palette;</span><br><span class="line">	&#125;</span><br><span class="line">  </span><br><span class="line">  </span><br></pre></td></tr></table></figure>

<ul>
<li>2.在 html 中的使用</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;button mat-flat-button color&#x3D;&quot;success&quot;&gt;Success&lt;&#x2F;button&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>3.效果如下</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Angular/Xnip2020-06-04_14-02-10.png"></p>
<h2 id="6-多个主题的切换-1"><a href="#6-多个主题的切换-1" class="headerlink" title="6.多个主题的切换."></a>6.多个主题的切换.<a name="multi-theme-switch"/></h2><ul>
<li>1.<a href="https://medium.com/grensesnittet/dynamic-themes-in-angular-material-b6dc0c88dfd7">Dynamic themes in Angular Material</a></li>
<li>2.<a href="https://angular-material-switch-themes-by-toggle.stackblitz.io/">Theme Change Demo</a></li>
</ul>
<h2 id="7-自定义文字排版-1"><a href="#7-自定义文字排版-1" class="headerlink" title="7.自定义文字排版"></a>7.自定义文字排版<a name="custom-typography"/></h2><ul>
<li>1.<a href="https://material.angular.cn/guide/theming-your-components">使用 Angular Material 的主题体系为自定义组件应用主题</a></li>
<li>2.<a href="https://material.angular.cn/guide/typography">Angular Material 的排版</a></li>
</ul>
<h4 id="1-增加一个文件-custom-typography-scss，里面定义-Material-排版的情况-如"><a href="#1-增加一个文件-custom-typography-scss，里面定义-Material-排版的情况-如" class="headerlink" title="1.增加一个文件 custom-typography.scss，里面定义 Material 排版的情况, 如:"></a>1.增加一个文件 <code>custom-typography.scss</code>，里面定义 Material 排版的情况, 如:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; custom-typography.scss</span><br><span class="line"></span><br><span class="line">@import &#39;~@angular&#x2F;material&#x2F;theming&#39;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Set the button&#39;s font style</span><br><span class="line">$custom-button-typography-level: mat-typography-level(</span><br><span class="line">  $font-size: 14px,</span><br><span class="line">  $font-weight: 400</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Define a custom typography config that overrides the font-family</span><br><span class="line">$custom-typography-config: mat-typography-config(</span><br><span class="line">  $font-family: &#39;&quot;Helvetica Neue&quot;, Helvetica, cursive&#39;,</span><br><span class="line">    $button: $custom-button-typography-level</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="2-在-custom-material-theme-scss-中引入-custom-typography-scss"><a href="#2-在-custom-material-theme-scss-中引入-custom-typography-scss" class="headerlink" title="2.在 custom-material-theme.scss 中引入 custom-typography.scss"></a>2.在 <code>custom-material-theme.scss</code> 中引入 <code>custom-typography.scss</code></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@import &quot;.&#x2F;materials&#x2F;custom-typography&quot;;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&#x2F;&#x2F; Override typography CSS classes (e.g., mat-h1, mat-display-1, mat-typography, etc.).</span><br><span class="line">&#x2F;&#x2F;@include mat-base-typography($custom-typography);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&#x2F;&#x2F; Override typography for a specific Angular Material components.</span><br><span class="line">&#x2F;&#x2F;@include mat-checkbox-typography($custom-typography);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Override typography for all Angular Material, including mat-base-typography and all components.</span><br><span class="line">@include angular-material-typography($custom-typography-config);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Angular 模拟数据服务器</title>
    <url>/2019/11/24/Angular_%20simulate_data_server/</url>
    <content><![CDATA[<blockquote>
<p><code>angular-in-memory-web-api</code> 可以模拟后端返回的数据, 达到快速开发的目的.</p>
</blockquote>
 <a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h2><h2 id="2-过程"><a href="#2-过程" class="headerlink" title="2.过程"></a>2.过程</h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考</h2><ul>
<li>1.<a href="https://v6.angular.live/tutorial/toh-pt6#simulate-a-data-server">Angular.cn 模拟数据服务器</a></li>
<li>2.<a href="https://github.com/angular/in-memory-web-api#import-the-in-memory-web-api-module">angular/in-memory-web-api</a></li>
<li>3.<a href="https://stackblitz.com/angular/lygvpvqpvbx?file=src/app/hero.service.ts">例子</a></li>
</ul>
<h2 id="2-过程-1"><a href="#2-过程-1" class="headerlink" title="2.过程"></a>2.过程</h2><ul>
<li>1.安装</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install angular-in-memory-web-api --save</span><br><span class="line"># 生成 service 类</span><br><span class="line">ng generate service InMemoryData</span><br></pre></td></tr></table></figure>

<ul>
<li>2.在 module 中配置</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">imports: [</span><br><span class="line">  HttpClientModule,</span><br><span class="line">  &#x2F;&#x2F; 如果是 prod 环境，自动用真实的 Http 请求代替.</span><br><span class="line">  environment.production ?</span><br><span class="line">    [] : HttpClientInMemoryWebApiModule.forRoot(InMemHeroService)</span><br><span class="line">  ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure>

<ul>
<li>3.可以多个 URL mock data.</li>
<li>4.URL 可以是自定义的,<a href="https://github.com/angular/in-memory-web-api#default-parserequesturl">Default parseRequestUrl</a></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#在 module 中配置，如配置为</span><br><span class="line">   HttpClientInMemoryWebApiModule.forRoot(</span><br><span class="line">      InMemoryDataService, &#123; dataEncapsulation: false, apiBase: &#39;a&#x2F;b&#x2F;c&#x2F;&#39;&#125;</span><br><span class="line">    )</span><br><span class="line">    </span><br><span class="line"># 则 URL 可定义为: </span><br><span class="line">private heroesUrl &#x3D; &#39;&#x2F;api&#x2F;value&#x2F;get&#x2F;heroes&#39; ;  &#x2F;&#x2F; URL to web api</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Angular Material 自定义效果</title>
    <url>/2020/05/13/Angular_Material_customize/</url>
    <content><![CDATA[<blockquote>
<p>Angular Material 自定义显示的效果</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h2><h2 id="2-自定义-MatInput-输入框"><a href="#2-自定义-MatInput-输入框" class="headerlink" title="2.自定义 MatInput 输入框"></a>2.自定义 <code>MatInput</code> 输入框</h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考</h2><ul>
<li>1.<a href="https://material.angular.io/">Angular Material</a></li>
<li>2.<a href="https://material.angular.cn/">Angular Material <CN> </a></li>
</ul>
<h2 id="2-自定义-MatInput-输入框-1"><a href="#2-自定义-MatInput-输入框-1" class="headerlink" title="2.自定义 MatInput 输入框"></a>2.自定义 <code>MatInput</code> 输入框</h2><h4 id="1-参考-2"><a href="#1-参考-2" class="headerlink" title="1.参考"></a>1.参考</h4><ul>
<li>1.<a href="https://medium.com/angular-in-depth/angular-material-matinput-control-with-thousands-separation-ebcbb7b027f4">Angular Material matInput control with thousands separator</a></li>
<li>2.<a href="https://stackoverflow.com/questions/48540533/styling-mat-form-field-input-in-angular-material">Styling mat-form-field input in Angular/Material</a></li>
<li>3.<a href="https://stackoverflow.com/questions/46502294/angular-change-matinput-size/46502615">Angular change MatInput Size</a></li>
<li>4.<a href="https://heptaluan.github.io/2018/01/16/Angular/06/">:host 和 ::ng-deep 使用</a></li>
</ul>
<h4 id="2-提示语-Placeholder"><a href="#2-提示语-Placeholder" class="headerlink" title="2.提示语 Placeholder"></a>2.提示语 <code>Placeholder</code></h4><h6 id="1-让-placeholder-不自动上浮"><a href="#1-让-placeholder-不自动上浮" class="headerlink" title="1.让 placeholder  不自动上浮"></a>1.让 <code>placeholder </code> 不自动上浮</h6><ul>
<li>1.在父组件 <code>mat-form-field</code> 上定义 <code>[floatLabel]=&quot;&#39;never&#39;&quot;</code> 即可, 如 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;mat-form-field floatLabel]&#x3D;&quot;&#39;never&#39;&quot;&gt;</span><br><span class="line">  &lt;input matInput placeholder&#x3D;&quot;Input the Code&quot;&gt;</span><br><span class="line">&lt;&#x2F;mat-form-field&gt;</span><br></pre></td></tr></table></figure>

<h6 id="2-自定义-placeholder-的样式"><a href="#2-自定义-placeholder-的样式" class="headerlink" title="2.自定义 placeholder 的样式"></a>2.<a href="https://stackoverflow.com/a/49169033/13481610">自定义 <code>placeholder</code> 的样式</a></h6><ul>
<li>1.不在 input 中设置 placeholder, 在外面定义一个 Placeholder element.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;&#x2F; html :</span><br><span class="line"></span><br><span class="line">&lt;mat-form-field&gt;</span><br><span class="line">    &lt;input matInput type&#x3D;&quot;text&quot;&gt;</span><br><span class="line">    &lt;mat-placeholder class&#x3D;&quot;placeholder&quot;&gt;Search&lt;&#x2F;mat-placeholder&gt;</span><br><span class="line">&lt;&#x2F;mat-form-field&gt;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;&#x2F; css:</span><br><span class="line"></span><br><span class="line">.mat-focused .placeholder &#123;</span><br><span class="line">    color: #00D318;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h4 id="3-修改-Input-matInput-的显示"><a href="#3-修改-Input-matInput-的显示" class="headerlink" title="3.修改 Input matInput  的显示."></a>3.修改 Input <code>matInput </code> 的显示.</h4><ul>
<li>1.在 <code>Component.ts</code> 中导入  <code>ViewEncapsulation</code>, 具体的原理请看 <a href="https://angular.io/guide/component-styles#view-encapsulation">View encapsulation</a> (这个会影响全局的 CSS 设置，请小心)如:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import &#123; Component &#125; from &#39;@angular&#x2F;core&#39;;</span><br><span class="line">import &#123; ViewEncapsulation &#125; from &#39;@angular&#x2F;core&#39;;  &#x2F;&#x2F; Add</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Component(&#123;</span><br><span class="line">  selector: &#39;input-overview-example&#39;,</span><br><span class="line">  styleUrls: [&#39;input-overview-example.css&#39;],</span><br><span class="line">  templateUrl: &#39;input-overview-example.html&#39;,</span><br><span class="line">  encapsulation: ViewEncapsulation.None   &#x2F;&#x2F; Add</span><br><span class="line">&#125;)</span><br><span class="line">export class InputOverviewExample &#123; &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.在 Chrome <code>开发者工具 Developer tools</code> -&gt; <code>Elements</code> 中查看对应的 <code>Element</code>, 并在 css 文件中修改该 <code>Element</code> 的样式,即可看到效果(如我这里修改了 class 为 <code>mat-form-field-underline</code> 的 <code>background-color: red</code>).</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Angular/Xnip2020-05-14_11-18-26.png"></p>
<ul>
<li>3.自定义 颜色， padding 等等效果, <a href="https://stackblitz.com/edit/tian-angular-matinput-style-change">在线效果预览</a> .如下所示(注意 <code>::ng-deep</code> 也会改变全局其它的 <code>angular material</code> 的效果, 所以要加上 <code>:host</code>):</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Angular/Xnip2020-05-14_21-53-08.png"></p>
<p>component</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import &#123; Component &#125; from &#39;@angular&#x2F;core&#39;;</span><br><span class="line">import &#123; ViewEncapsulation &#125; from &#39;@angular&#x2F;core&#39;;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> * @title Basic Inputs</span><br><span class="line"> *&#x2F;</span><br><span class="line">@Component(&#123;</span><br><span class="line">  selector: &#39;input-overview-example&#39;,</span><br><span class="line">  styleUrls: [&#39;input-overview-example.css&#39;],</span><br><span class="line">  templateUrl: &#39;input-overview-example.html&#39;,</span><br><span class="line">  &#x2F;&#x2F; encapsulation: ViewEncapsulation.None,</span><br><span class="line">  encapsulation: ViewEncapsulation.Emulated</span><br><span class="line">&#125;)</span><br><span class="line">export class InputOverviewExample &#123; &#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>html </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;mat-form-field [floatLabel]&#x3D;&quot;&#39;never&#39;&quot; &gt;</span><br><span class="line">        &lt;input matInput  type&#x3D;&quot;text&quot;&gt;</span><br><span class="line">        &lt;mat-placeholder class&#x3D;&quot;placeholder&quot;&gt;Search&lt;&#x2F;mat-placeholder&gt;</span><br><span class="line">      &lt;&#x2F;mat-form-field&gt;</span><br></pre></td></tr></table></figure>

<p>css </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">:host ::ng-deep&#123;</span><br><span class="line"></span><br><span class="line">  &#x2F;* Hide the underline transparent when not focus *&#x2F;</span><br><span class="line">  .mat-form-field .mat-form-field-underline&#123;</span><br><span class="line">    background-color: transparent;</span><br><span class="line">    height: 0</span><br><span class="line">  &#125;</span><br><span class="line">  &#x2F;* Hide the underline transparent when focus *&#x2F;</span><br><span class="line">  .mat-form-field.mat-focused .mat-form-field-ripple &#123;</span><br><span class="line">    background-color: transparent;</span><br><span class="line">    height: 0</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;* Set background and border style *&#x2F;</span><br><span class="line">  .mat-form-field-flex&#123;</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">    border: solid 1px #A9A9A9;</span><br><span class="line">    background: #F8F8F8;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; Vertical center the input element</span><br><span class="line">  .mat-form-field-wrapper&#123;</span><br><span class="line">    padding-bottom: 0;</span><br><span class="line">  &#125;</span><br><span class="line">  &#x2F;* Set input label *&#x2F;</span><br><span class="line">  .mat-form-field-infix &#123;</span><br><span class="line">    border-top: 0;</span><br><span class="line">    padding-left: 10px !important;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  &#x2F;* Set placeholder style  *&#x2F;</span><br><span class="line">  .placeholder &#123;</span><br><span class="line">    color: #666;</span><br><span class="line">    padding-left: 10px;</span><br><span class="line">  &#125;</span><br><span class="line">  .mat-focused .placeholder &#123;</span><br><span class="line">    color: #666;</span><br><span class="line">  &#125;</span><br><span class="line">  &#x2F;* vertical placeholder&#39;s center  *&#x2F;</span><br><span class="line">  .mat-form-field-label  &#123;</span><br><span class="line">    top: 50%;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Angular Material</title>
    <url>/2019/11/24/Angular_Material_design/</url>
    <content><![CDATA[<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h2><h2 id="2-使用方法"><a href="#2-使用方法" class="headerlink" title="2.使用方法"></a>2.使用方法</h2><a id="more"></a>

<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考</h2><h4 id="1-Material-design"><a href="#1-Material-design" class="headerlink" title="1. Material design"></a>1. Material design</h4><ul>
<li>1.<a href="https://material.io/">Material design</a></li>
<li>2.<a href="https://www.uisdc.com/material-design-knowledge">如果你不熟悉Material Design，请一口吃下这篇干货！</a></li>
<li>3.<a href="https://material.angular.cn/">Angular Material</a></li>
</ul>
<h4 id="2-Flex-layout"><a href="#2-Flex-layout" class="headerlink" title="2.Flex layout"></a>2.Flex layout</h4><ul>
<li>4.<a href="https://github.com/angular/flex-layout/wiki">Angular flex-layout</a></li>
</ul>
<h4 id="3-Theme"><a href="#3-Theme" class="headerlink" title="3.Theme"></a>3.Theme</h4><ul>
<li>5.<a href="https://material.angular.io/guide/theming">Theming Angular Material</a></li>
<li>6.<a href="https://material.io/archive/guidelines/style/color.html#color-color-system">Theme style color</a></li>
</ul>
<hr>
<h2 id="2-使用方法-1"><a href="#2-使用方法-1" class="headerlink" title="2.使用方法"></a>2.使用方法</h2><h4 id="3-Theme-1"><a href="#3-Theme-1" class="headerlink" title="3.Theme"></a>3.Theme</h4><ul>
<li>1.新建一个 <code>my-custom-theme.scss</code> 文件，输入以下内容</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@import &#39;~@angular&#x2F;material&#x2F;theming&#39;;</span><br><span class="line">@include mat-core();</span><br><span class="line"></span><br><span class="line">$candy-app-primary: mat-palette($mat-indigo);</span><br><span class="line">$candy-app-accent:  mat-palette($mat-pink, A200, A100, A400);</span><br><span class="line"></span><br><span class="line">$candy-app-warn:    mat-palette($mat-red);</span><br><span class="line"></span><br><span class="line">$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);</span><br><span class="line">@include angular-material-theme($candy-app-theme);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 特别样式的组件，在使用时添加以下的 class name 即可引进</span><br><span class="line">.specify-theme&#123;</span><br><span class="line">	@import &#39;~@angular&#x2F;material&#x2F;theming&#39;;</span><br><span class="line">	@include mat-core();</span><br><span class="line">	</span><br><span class="line">	$candy-app-primary: mat-palette($mat-indigo);</span><br><span class="line">	$candy-app-accent:  mat-palette($mat-pink, A200, A100, A400);</span><br><span class="line">	</span><br><span class="line">	$candy-app-warn:    mat-palette($mat-red);</span><br><span class="line">	</span><br><span class="line">	$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);</span><br><span class="line">	@include angular-material-theme($candy-app-theme);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.然后再 <code>style.scss</code> 或 <code>angular.json</code> 中导入即可.</li>
</ul>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Angular 多语言</title>
    <url>/2019/08/13/Angular_Translate/</url>
    <content><![CDATA[<blockquote>
<p>Angular 多语言的功能开发</p>
</blockquote>
<a id="more"></a>



<h2 id="0-参考"><a href="#0-参考" class="headerlink" title="0.参考"></a><a href="#references">0.参考</a></h2><h2 id="1-官方的翻译方法"><a href="#1-官方的翻译方法" class="headerlink" title="1.官方的翻译方法"></a><a href="#translate">1.官方的翻译方法</a></h2><h2 id="2-翻译文档的工具"><a href="#2-翻译文档的工具" class="headerlink" title="2.翻译文档的工具"></a><a href="#tools">2.翻译文档的工具</a></h2><h2 id="3-翻译文件的生成及部署"><a href="#3-翻译文件的生成及部署" class="headerlink" title="3.翻译文件的生成及部署"></a><a href="#deploy">3.翻译文件的生成及部署</a></h2><h4 id="方法一"><a href="#方法一" class="headerlink" title="方法一:"></a>方法一:</h4><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二:"></a>方法二:</h3><h2 id="4-例子"><a href="#4-例子" class="headerlink" title="4.例子"></a><a href="#example">4.例子</a></h2><hr>
<hr>
<hr>
<h2 id="0-参考-1"><a href="#0-参考-1" class="headerlink" title="0.参考"></a>0.参考<a name="references"/></h2><ul>
<li>1.<a href="https://v6.angular.live/guide/i18n#create-a-translation-source-file">Angular 国际化</a></li>
<li>2.<a href="https://angular-templates.io/tutorials/about/angular-internationalization-i18n-multi-language-app">Angular Internationalization - Angular i18n Multi Language</a></li>
<li>3.<a href="https://medium.com/@feloy/deploying-an-i18n-angular-app-with-angular-cli-fc788f17e358#.1xq4iy6fp">Deploying an i18n Angular app with angular-cli</a><ul>
<li>1.<a href="https://www.jianshu.com/p/ae412f2105c3">使用Angular-CLI发布一个i18n（国际化）应用(译)</a></li>
</ul>
</li>
<li>4.<a href="http://www.ngx-translate.com/">ngx-translate(第三方的翻译包)</a><ul>
<li>1.<a href="https://stackoverflow.com/questions/47312962/angular-5-internationalization">用官方或这个包的讨论</a></li>
</ul>
</li>
<li>5.<a href="https://github.com/ghzjtian/angular-cli-i18n-sample">GitHub 例子程序</a></li>
<li>6.<a href="https://github.com/ngx-translate/core">GitHub: ngx-translate</a></li>
<li>7.<a href="https://dev.to/angular/deploying-an-i18n-angular-app-with-angular-cli-2fb9">Deploying an i18n Angular app with angular-cli</a></li>
</ul>
<h2 id="1-官方的翻译方法-1"><a href="#1-官方的翻译方法-1" class="headerlink" title="1.官方的翻译方法"></a>1.官方的翻译方法<a name="translate"/></h2><ul>
<li>1.测试中通过调用 <code>ng serve --configuration=fr</code> 去测试指定语言是否正常显示.</li>
<li>2.翻译文本的目标地址配置，在项目配置文件 <code>package.json</code> 中去设置:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  [...]</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    [...]</span><br><span class="line">    &quot;extract&quot;: &quot;ng xi18n --output-path&#x3D;locale&quot;</span><br><span class="line">  &#125;</span><br><span class="line">  [...]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>3.</li>
</ul>
<h2 id="2-翻译文档的工具-1"><a href="#2-翻译文档的工具-1" class="headerlink" title="2.翻译文档的工具"></a>2.翻译文档的工具<a name="tools"/></h2><ul>
<li>1.<a href="http://xliff.brightec.co.uk/">Online XLIFF Editor</a></li>
</ul>
<h2 id="3-翻译文件的生成及部署-1"><a href="#3-翻译文件的生成及部署-1" class="headerlink" title="3.翻译文件的生成及部署"></a>3.翻译文件的生成及部署<a name="deploy"/></h2><blockquote>
<p>目标为当改变 URL 时，会改变相关文字的翻译,如当地址为 <code>www.example.com</code> 显示当前地区的语言，当地址为 <code>www.example.com/zh</code> 时就显示中文.</p>
</blockquote>
<h3 id="方法一-1"><a href="#方法一-1" class="headerlink" title="方法一:"></a>方法一:</h3><ul>
<li>1.要翻译的文本很简单，如下:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;h1 i18n&#x3D;&quot;@@greeting&quot;&gt;Hello world2!&lt;&#x2F;h1&gt;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.相关的翻译文件在 <code>src/i18n/</code> 文件夹下:</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Angular/Angular-translate/Snip20190813_2.png"></p>
<ul>
<li>3.在 <code>angular.json</code> 中增加以下配置项</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&quot;build&quot;: &#123;</span><br><span class="line">  ...</span><br><span class="line">  &quot;configurations&quot;: &#123;</span><br><span class="line">    ...</span><br><span class="line">    &quot;zh&quot;:&#123;</span><br><span class="line">              &quot;aot&quot;:true,</span><br><span class="line">              &quot;outputPath&quot;: &quot;dist&#x2F;angular-cli-i18n-sample-zh&quot;,</span><br><span class="line">              &quot;i18nFile&quot;: &quot;src&#x2F;i18n&#x2F;messages.zh.xlf&quot;,</span><br><span class="line">              &quot;i18nFormat&quot;: &quot;xlf&quot;,</span><br><span class="line">              &quot;i18nLocale&quot;: &quot;zh&quot;,</span><br><span class="line">              &quot;i18nMissingTranslation&quot;: &quot;error&quot;,</span><br><span class="line">              &quot;baseHref&quot;: &quot;&#x2F;zh&#x2F;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;serve&quot;: &#123;</span><br><span class="line">  ...</span><br><span class="line">  &quot;configurations&quot;: &#123;</span><br><span class="line">    ...</span><br><span class="line">    &quot;zh&quot;:&#123;</span><br><span class="line">              &quot;browserTarget&quot;: &quot;angular-cli-i18n-sample:build:zh&quot;</span><br><span class="line">            &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>4.用 <code>ng serve</code> 和 <code>ng serve --configuration=zh</code> 即可看出不同语言显示的区别</p>
</li>
<li><p>5.编译</p>
<ul>
<li><p>1.用 <code>ng build</code> 及 <code>ng build --configuration=zh</code> 编译出两套语言的程序,然后在 nginx 或其它静态服务器上,按照如下的去设置：</p>
<p><img src="http://pic.pgyjz.cn/blog/Angular/Angular-translate/Snip20190813_3.png"></p>
</li>
<li><p>2.即可在浏览器中看到改变 URL 后显示的效果:</p>
<p><img src="http://pic.pgyjz.cn/blog/Angular/Angular-translate/Snip20190813_6.png"></p>
</li>
</ul>
</li>
</ul>
<h3 id="方法二-1"><a href="#方法二-1" class="headerlink" title="方法二:"></a>方法二:</h3><ul>
<li>1.也可以写一个脚本完成上述的操作，如在 <code>package.json</code> 写上:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  ...</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">  		...</span><br><span class="line">    &quot;build-i18n&quot;: &quot;for lang in en zh; do ng build --output-path dist&#x2F;$lang --aot  --base-href &#x2F;$lang&#x2F; --i18n-file src&#x2F;i18n&#x2F;messages.$lang.xlf --i18n-format xlf --i18n-locale $lang; done&quot;</span><br><span class="line">  &#125;,</span><br></pre></td></tr></table></figure>

<p>然后运行 <code>npm run build-i18n</code> ，即可以看到在 dist 目录下生成的 <code>zh</code> 和 <code>en</code> 两个目录.</p>
<ul>
<li>2.放到 nginx 服务器上，可以看到效果如下</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Angular/Angular-translate/Snip20190813_7.png"><br><img src="http://pic.pgyjz.cn/blog/Angular/Angular-translate/Untitled.gif"></p>
<h2 id="4-例子-1"><a href="#4-例子-1" class="headerlink" title="4.例子"></a>4.例子<a name="example"/></h2><ul>
<li>1.在网页中动态选择语言的切换的例子</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">&#x2F;&#x2F; app.component.ts</span><br><span class="line">import &#123; Component, LOCALE_ID, Inject &#125; from &#39;@angular&#x2F;core&#39;;</span><br><span class="line">@Component(&#123;</span><br><span class="line">  selector: &#39;app-root&#39;,</span><br><span class="line">  templateUrl: &#39;.&#x2F;app.component.html&#39;,</span><br><span class="line">  styleUrls: [&#39;.&#x2F;app.component.css&#39;]</span><br><span class="line">&#125;)</span><br><span class="line">export class AppComponent &#123;</span><br><span class="line">  myLocaleId: string;</span><br><span class="line">  languages &#x3D; [</span><br><span class="line">    &#123; code: &#39;en&#39;, label: &#39;English&#39;&#125;,</span><br><span class="line">    &#123; code: &#39;es&#39;, label: &#39;Español&#39;&#125;,</span><br><span class="line">    &#123; code: &#39;fr&#39;, label: &#39;Français&#39;&#125;</span><br><span class="line">  ];</span><br><span class="line">  constructor(@Inject(LOCALE_ID) protected localeId: string) &#123;</span><br><span class="line">  	this.myLocaleId &#x3D; this.localeId ;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- app.component.html --&gt;</span><br><span class="line">&lt;h1 i18n&gt;Hello World!&lt;&#x2F;h1&gt;</span><br><span class="line">&lt;ng-template ngFor let-lang [ngForOf]&#x3D;&quot;languages&quot;&gt;</span><br><span class="line">  &lt;span *ngIf&#x3D;&quot;lang.code !&#x3D;&#x3D; myLocaleId&quot;&gt;</span><br><span class="line">    &lt;a href&#x3D;&quot;&#x2F;&#123;&#123;lang.code&#125;&#125;&#x2F;&quot;&gt;&#123;&#123;lang.label&#125;&#125;&lt;&#x2F;a&gt; &lt;&#x2F;span&gt;</span><br><span class="line">    &lt;span *ngIf&#x3D;&quot;lang.code &#x3D;&#x3D;&#x3D; myLocaleId&quot;&gt;&#123;&#123;lang.label&#125;&#125; &lt;&#x2F;span&gt;</span><br><span class="line">&lt;&#x2F;ng-template&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Angular 多语言框架 ngx-translate 的使用</title>
    <url>/2020/02/03/Angular_ngx-translate%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<blockquote>
<p>记录 Angular ngx-translate 多语言框架的使用方法</p>
</blockquote>
<a id="more"></a>




<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.<a href="#refenences">参考</a></h2><h2 id="2-小工具"><a href="#2-小工具" class="headerlink" title="2.小工具"></a>2.<a href="#translate_tools">小工具</a></h2><h2 id="3-翻译"><a href="#3-翻译" class="headerlink" title="3.翻译"></a>3.<a href="#translate">翻译</a></h2><h2 id="4-错误处理"><a href="#4-错误处理" class="headerlink" title="4.错误处理"></a>4.<a href="#error_process">错误处理</a></h2><h2 id="5-多语言的页面实现"><a href="#5-多语言的页面实现" class="headerlink" title="5.多语言的页面实现"></a>5.<a href="#multi_lang_imprements">多语言的页面实现</a></h2><h2 id="6-复数形式的处理"><a href="#6-复数形式的处理" class="headerlink" title="6.复数形式的处理"></a>6.<a href="#one_more">复数形式的处理</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考<a name="refenences"/></h2><ul>
<li>1.<a href="https://github.com/ngx-translate/core">ngx-translate/core</a></li>
<li>2.<a href="https://www.codeandweb.com/babeledit/tutorials/how-to-translate-your-angular7-app-with-ngx-translate">How to translate your Angular 7 app with ngx-translate</a></li>
<li>3.<a href="https://alligator.io/angular/ngx-translate/">Internationalize Your Angular App with ngx-translate</a></li>
<li>4.<a href="https://github.com/ngx-translate/core/issues/517#issuecomment-299637956">safely use translate.instant() #517</a></li>
<li>5.<a href="https://github.com/ngx-translate/core/issues/517">safely use translate.instant()</a></li>
</ul>
<h2 id="2-小工具-1"><a href="#2-小工具-1" class="headerlink" title="2.小工具"></a>2.小工具<a name="translate_tools"/></h2><ul>
<li>1.<a href="https://www.codeandweb.com/babeledit">BabelEdit(要收费)</a> -&gt; ‘BabelEdit is the translation editor for your ngx-translate project.’</li>
<li>2.<a href="https://poedit.net/">poedit(免费)(不能编辑 json 文件)</a> -&gt; Powerful and intuitive translation editor</li>
<li>3.<a href="https://translation-manager-86c3d.firebaseapp.com/">在线多语言 json 编辑工具</a></li>
<li>4.<a href="https://github.com/biesbjerg/ngx-translate-extract">ngx-translate-extract</a> -&gt; 可以把在 <code>Html</code> 和 <code>Typescript</code> 文件上用到的 翻译 自动转换到 <code>xx.json</code> 文件中.</li>
<li>5.<a href="https://github.com/Greentube/localize-router">localize-router</a> -&gt; 语言改变时 URL 也会跟着变化.</li>
</ul>
<h2 id="3-翻译-1"><a href="#3-翻译-1" class="headerlink" title="3.翻译"></a>3.翻译<a name="translate"/></h2><ul>
<li>1.翻译文件为:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; en.json</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  &quot;welcomeMessage&quot;: &quot;Thanks for joining, &#123;&#123; firstName &#125;&#125;! It&#39;s great to have you!&quot;,</span><br><span class="line">  &quot;loginPrompt&quot;: &quot;Please login&quot;,</span><br><span class="line">  &quot;login&quot;: &#123;</span><br><span class="line">    &quot;username&quot;: &quot;Enter your user name&quot;,</span><br><span class="line">    &quot;password&quot;: &quot;Password here&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;buttonTx&quot;: &quot;click this button&quot;,</span><br><span class="line">  &quot;dialog.logout-prompt&quot;: &quot;&#123;&#123; device &#125;&#125; Will logout in &#123;&#123; time &#125;&#125; seconds later.&quot;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>1.在 html 中的翻译</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;button (click)&#x3D;&quot;buttonClickAction()&quot; &gt;&#123;&#123;buttonText&#125;&#125;&lt;&#x2F;button&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 元素 文字的翻译 --&gt;</span><br><span class="line">&lt;p&gt;&#123;&#123; &#39;welcomeMessage&#39; | translate:user &#125;&#125;&lt;&#x2F;p&gt;</span><br><span class="line">&lt;!-- 元素 的属性 --&gt;</span><br><span class="line">&lt;input title&#x3D;&quot;&#123;&#123; &#39;login.password&#39; | translate &#125;&#125;&quot; type&#x3D;&quot;password&quot; placeholder&#x3D;&quot;&#123;&#123; &#39;login.password&#39; | translate &#125;&#125;&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;hr&gt;</span><br><span class="line">&lt;br&gt;</span><br><span class="line">&lt;!-- &#39;元素 文字的翻译&#39; 的另外两种做法 --&gt;</span><br><span class="line">&lt;label translate&#x3D;&#39;login.username&#39;&gt;&lt;&#x2F;label&gt;</span><br><span class="line">&lt;p translate [translateParams]&#x3D;&quot;&#123; firstName: user.firstName &#125;&quot;&gt;welcomeMessage&lt;&#x2F;p&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 带参数 --&gt;</span><br><span class="line">&lt;div class&#x3D;&quot;label1-size&quot;&gt;&#123;&#123; &#39;dialog.logout-prompt&#39; | translate:&#123;device: dialogConfig.message, time: timeLeft&#125; &#125;&#125;&lt;&#x2F;div&gt;</span><br></pre></td></tr></table></figure>



<ul>
<li>2.在代码中的翻译</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import &#123;Component, OnInit&#125; from &#39;@angular&#x2F;core&#39;;</span><br><span class="line">import &#123;TranslateService&#125; from &#39;@ngx-translate&#x2F;core&#39;;</span><br><span class="line"></span><br><span class="line">@Component(&#123;</span><br><span class="line">  selector: &#39;app-root&#39;,</span><br><span class="line">  templateUrl: &#39;.&#x2F;app.component.html&#39;,</span><br><span class="line">  styleUrls: [&#39;.&#x2F;app.component.css&#39;]</span><br><span class="line">&#125;)</span><br><span class="line">export class AppComponent implements OnInit&#123;</span><br><span class="line"></span><br><span class="line">  user: &#123; firstName: string, lastName: string &#125;;</span><br><span class="line">  welcome: string;</span><br><span class="line">  loginPrompt: string;</span><br><span class="line">  usernameLabel: string;</span><br><span class="line">  passwordLabel: string;</span><br><span class="line"></span><br><span class="line">  buttonText &#x3D; &quot;点击666&quot;;</span><br><span class="line"></span><br><span class="line">  constructor(private translate: TranslateService) &#123;</span><br><span class="line">    console.log(&#39;constructor&#39;);</span><br><span class="line"></span><br><span class="line">    translate.addLangs([&#39;en&#39;, &#39;klingon&#39;])</span><br><span class="line">    translate.setDefaultLang(&#39;en&#39;);</span><br><span class="line">    translate.use(&#39;en&#39;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  ngOnInit() &#123;</span><br><span class="line">    this.user &#x3D; &#123;firstName: &quot;Tian1&quot;, lastName: &quot;Zeng1&quot;&#125;;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; synchronous. Also interpolate the &#39;firstName&#39; parameter with a value</span><br><span class="line">    &#x2F;&#x2F; 这里只会分别得到 &#39;welcomeMessage&#39;,&#39;loginPrompt&#39;,&#39;buttonTx&#39;, 不会得到真正翻译的结果.</span><br><span class="line">    this.welcome &#x3D; this.translate.instant(&#39;welcomeMessage&#39;, &#123;firstName: this.user.firstName&#125;);</span><br><span class="line">    this.loginPrompt &#x3D; this.translate.instant(&#39;loginPrompt&#39;);</span><br><span class="line">    this.buttonText &#x3D; this.translate.instant(&#39;buttonTx&#39;);</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; asynchronous - gets translations then completes.</span><br><span class="line">    &#x2F;&#x2F; 这里可以顺利得到结果</span><br><span class="line">    this.translate.get([&#39;login.username&#39;, &#39;login.password&#39;, &#39;buttonTx&#39;])</span><br><span class="line">      .subscribe(translations &#x3D;&gt; &#123;</span><br><span class="line">        this.buttonText &#x3D; translations[&#39;buttonTx&#39;];</span><br><span class="line">        this.usernameLabel &#x3D; translations[&#39;login.username&#39;];</span><br><span class="line">        this.passwordLabel &#x3D; translations[&#39;login.password&#39;];</span><br><span class="line">      &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  buttonClickAction() &#123;</span><br><span class="line">    this.user &#x3D; &#123;firstName: &quot;Tian2&quot;, lastName: &quot;Zeng2&quot;&#125;;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; 这里可以得到想要的翻译结果</span><br><span class="line">    this.welcome &#x3D; this.translate.instant(&#39;welcomeMessage&#39;, &#123;firstName: this.user.firstName&#125;);</span><br><span class="line">    this.loginPrompt &#x3D; this.translate.instant(&#39;loginPrompt&#39;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>效果显示:</p>
<p><img src="http://pic.pgyjz.cn/blog/Angular/multiLanguages/Snip20200215_2.png"></p>
<h2 id="4-错误处理-1"><a href="#4-错误处理-1" class="headerlink" title="4.错误处理"></a>4.错误处理<a name="error_process"/></h2><h4 id="1-翻译文件中没有这个翻译-key-的情况"><a href="#1-翻译文件中没有这个翻译-key-的情况" class="headerlink" title="1.翻译文件中没有这个翻译 key 的情况."></a>1.翻译文件中没有这个翻译 key 的情况.</h4><ul>
<li>1.Html: 翻译的文本只会显示这个 key.</li>
<li>2.Typescript: 翻译的文本为: undefine<h4 id="2-翻译文件没有的情况"><a href="#2-翻译文件没有的情况" class="headerlink" title="2.翻译文件没有的情况."></a>2.翻译文件没有的情况.</h4></li>
<li>会报     <code>GET http://localhost:4200/assets/i18n/cn.json 404 (Not Found)</code> 错误.</li>
</ul>
<h4 id="3-this-translate-instant-一直返回-key-的问题"><a href="#3-this-translate-instant-一直返回-key-的问题" class="headerlink" title="3.this.translate.instant  一直返回 key 的问题."></a>3.<code>this.translate.instant </code> 一直返回 key 的问题.</h4><ul>
<li><p>1.原因: 这是因为 翻译文件还没有加载完毕，所以用 同步的方法 <code>translate.instant</code> 不能获取到 value.</p>
</li>
<li><p>2.解决方法</p>
<ul>
<li>1: 用 异步方法 get 去实现</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">translate.get(&quot;lessons_title&quot;).subscribe((result: string) &#x3D;&gt; &#123;</span><br><span class="line">        lesson.title &#x3D; result;</span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure>

<ul>
<li>2.在项目加载时就加载全部的翻译文本,具体做法是在 AppModule 中添加以下代码:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">@NgModule(&#123;</span><br><span class="line"></span><br><span class="line">  providers: [  &#123;</span><br><span class="line">    provide: APP_INITIALIZER,</span><br><span class="line">    useFactory: appInitializerFactory,</span><br><span class="line">    deps: [TranslateService, Injector],</span><br><span class="line">    multi: true</span><br><span class="line">  &#125;],</span><br><span class="line">  bootstrap: [AppComponent]</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">export function appInitializerFactory(translate: TranslateService, injector: Injector) &#123;</span><br><span class="line">  return () &#x3D;&gt; new Promise&lt;any&gt;((resolve: any) &#x3D;&gt; &#123;</span><br><span class="line">    const locationInitialized &#x3D; injector.get(LOCATION_INITIALIZED, Promise.resolve(null));</span><br><span class="line">    locationInitialized.then(() &#x3D;&gt; &#123;</span><br><span class="line"></span><br><span class="line">      translate.addLangs([&#39;en&#39;, &#39;de&#39;, &#39;zh&#39;])</span><br><span class="line">      translate.setDefaultLang(&#39;en&#39;);</span><br><span class="line">      const browerLang &#x3D; translate.getBrowserLang();</span><br><span class="line">      const langToSet &#x3D; browerLang.match(&#x2F;en|de|zh&#x2F;)? browerLang: &#39;en&#39;;</span><br><span class="line">      translate.use(langToSet).subscribe(() &#x3D;&gt; &#123;</span><br><span class="line">        console.info(&#96;Successfully initialized &#39;$&#123;langToSet&#125;&#39; language.&#39;&#96;);</span><br><span class="line">      &#125;, err &#x3D;&gt; &#123;</span><br><span class="line">        console.error(&#96;Problem with &#39;$&#123;langToSet&#125;&#39; language initialization.&#39;&#96;);</span><br><span class="line">      &#125;, () &#x3D;&gt; &#123;</span><br><span class="line">        resolve(null);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="4-首次加载时项目时-加载不出特定语言的文本"><a href="#4-首次加载时项目时-加载不出特定语言的文本" class="headerlink" title="4.首次加载时项目时,加载不出特定语言的文本"></a>4.首次加载时项目时,加载不出特定语言的文本</h4><ul>
<li>1.情况描述: 如在 AppModule 中设置了默认语言 en: <code>setDefaultLang(&#39;en&#39;)</code>, 然后使用语言 fr: <code>use(&#39;fr&#39;)</code>, 然后在 Component 中用 <code>get(&#39;translate-key&#39;).subscribe(()=&gt;&#123;&#125;) </code> 或 <code>instant(&#39;translate-key&#39;)</code> 都只能得到 en 的文本, 但是 html 的翻译文本却都已经正确地翻译为 fr 了.(通过查 log 发现是 view 已经更新完毕了，但是 <code>fr.json</code> 文本还没下载完.)</li>
<li>2.解决方法: 在 constructor 中监听 lang 的变化，然后改变文本. </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">constructor(private translateService: TranslateService) &#123;</span><br><span class="line">	translateService.onLangChange.subscribe(() &#x3D;&gt; &#123;</span><br><span class="line">      this.viewText &#x3D; translateService.instanct(&#39;translate-key&#39;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h2 id="5-多语言切换的实现"><a href="#5-多语言切换的实现" class="headerlink" title="5.多语言切换的实现"></a>5.多语言切换的实现<a name="multi_lang_imprements"/></h2><h4 id="1-下拉选择框切换语言"><a href="#1-下拉选择框切换语言" class="headerlink" title="1.下拉选择框切换语言"></a>1.下拉选择框切换语言</h4><ul>
<li>1.代码如下所示</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; AppComponent</span><br><span class="line"></span><br><span class="line">  currentLang : string;</span><br><span class="line">  constructor(private translate: TranslateService) &#123;</span><br><span class="line">    translate.addLangs([&#39;en&#39;, &#39;de&#39;])</span><br><span class="line">    translate.setDefaultLang(&#39;en&#39;);</span><br><span class="line">    </span><br><span class="line">    this.currentLang &#x3D; &quot;en&quot;;</span><br><span class="line">  &#125;</span><br><span class="line">  ngOnInit() &#123;</span><br><span class="line">   this.translate.onLangChange.subscribe((event: LangChangeEvent) &#x3D;&gt; &#123;</span><br><span class="line">        console.log(&#39;onLangChange event:&#39;+ event.lang);</span><br><span class="line">        this.currentLang &#x3D; event.lang;</span><br><span class="line">    &#125;);</span><br><span class="line">    this.translate.onTranslationChange.subscribe((event: TranslationChangeEvent) &#x3D;&gt; &#123;</span><br><span class="line">      console.log(&#39;onTranslationChange event:&#39;+ event.translations);</span><br><span class="line">    &#125;);</span><br><span class="line">    this.translate.onDefaultLangChange.subscribe((event: DefaultLangChangeEvent) &#x3D;&gt; &#123;</span><br><span class="line">      console.log(&#39;onDefaultLangChange event:&#39;+ event.lang);</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  languageChangeEvent(lang: string) &#123;</span><br><span class="line">    console.log(&quot;lang select:&quot;+lang);</span><br><span class="line">    this.translate.use(lang);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; Html file</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;当前的语言为: &#123;&#123;currentLang&#125;&#125;&lt;&#x2F;h3&gt;</span><br><span class="line">&lt;select (change)&#x3D;&quot;languageChangeEvent($event.target.value)&quot; &gt;</span><br><span class="line">  &lt;option *ngFor&#x3D;&quot;let lang of this.translate.getLangs()&quot; [value]&#x3D;&quot;lang&quot;&gt;&#123;&#123;lang&#125;&#125;&lt;&#x2F;option&gt;</span><br><span class="line">&lt;&#x2F;select&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>效果显示:<br><img src="http://pic.pgyjz.cn/blog/Angular/multiLanguages/lang-change.gif"></p>
<ul>
<li>2.但是如果程序有很多个 Module, 在子 Module 下设置 <code>translate.use(lang)</code> 的话其它的 module 会得不到响应，有个暴力的方法就是重新刷新整个页面就可以解决这个问题:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">this.currentSelectLang &#x3D; currentLang;</span><br><span class="line">this.translate.use(currentLang);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; window.location.pathname:  &#39;&#x2F;en&#x2F;dashboard&#x2F;mower&#39; , &#39;&#x2F;&#39;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;  window.location.href:  &#39;http:&#x2F;&#x2F;localhost:4200&#x2F;en&#x2F;dashboard&#x2F;mower&#39; , &#39;http:&#x2F;&#x2F;localhost:4200&#x2F;&#39;</span><br><span class="line">var currentPathName &#x3D; window.location.pathname;</span><br><span class="line">&#x2F;&#x2F; 1.Check pathname contain en\zh\fr</span><br><span class="line">const urlLang &#x3D; this.getLangFromPath(currentPathName);</span><br><span class="line">const urlHasLang &#x3D; !urlLang.match(&#x2F;en|zh|fr&#x2F;) ;</span><br><span class="line"></span><br><span class="line">if( !urlHasLang ) &#123;</span><br><span class="line">  &#x2F;&#x2F; 2.If contain, then replace the old language to new language</span><br><span class="line"></span><br><span class="line">  currentPathName &#x3D; currentPathName.replace(urlLang,currentLang);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  &#x2F;&#x2F; 3.Else , add the new language to the path name</span><br><span class="line">  currentPathName &#x3D; &#96;&#x2F;$&#123;currentLang&#125;$&#123;currentPathName&#125;&#96;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">this.route.navigate([currentPathName]) .then(() &#x3D;&gt; &#123;</span><br><span class="line">  window.location.reload();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<h4 id="2-URL-切换语言"><a href="#2-URL-切换语言" class="headerlink" title="2.URL 切换语言"></a>2.URL 切换语言</h4><h5 id="1-this-translate-currentLang-不生效"><a href="#1-this-translate-currentLang-不生效" class="headerlink" title="1.this.translate.currentLang 不生效 !!!"></a>1.<code>this.translate.currentLang</code> 不生效 !!!</h5><pre><code>* 需要设置 `translate.use(&#39;en&#39;);` 后， `this.translate.currentLang ` 才生效.</code></pre>
<h5 id="2-所实现的效果有"><a href="#2-所实现的效果有" class="headerlink" title="2.所实现的效果有:"></a>2.所实现的效果有:</h5><pre><code>* 1.访问 http://localhost:4200/de/login 会显示德语.
* 2.下拉选择了语言后， URL 会变化，如从 login 页面的 en 选择了 de 后,  URL 从 http://localhost:4200/login 变为 http://localhost:4200/de/login .</code></pre>
<h5 id="3-实现步骤"><a href="#3-实现步骤" class="headerlink" title="3.实现步骤:"></a>3.实现步骤:</h5><ul>
<li>1.在 <code>AppModule</code> 添加一个 <code>providers</code>,如下面代码所示(逻辑就是为一开始加载程序时，就拿到 URL 上的所显示的语言,然后跟据这个语言去设置程序的语言):</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	providers: [</span><br><span class="line">        &#123;</span><br><span class="line">            provide: APP_INITIALIZER,</span><br><span class="line">            useFactory: appInitializerFactory,</span><br><span class="line">            deps: [TranslateService, Injector],</span><br><span class="line">            multi: true</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    export function appInitializerFactory(translate: TranslateService, injector: Injector) &#123;</span><br><span class="line">    return () &#x3D;&gt; new Promise&lt;any&gt;((resolve: any) &#x3D;&gt; &#123;</span><br><span class="line">        const locationInitialized &#x3D; injector.get(LOCATION_INITIALIZED, Promise.resolve(null));</span><br><span class="line">        locationInitialized.then(() &#x3D;&gt; &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            translate.addLangs([&#39;en&#39;,&#39;zh&#39;]);</span><br><span class="line">            &#x2F;&#x2F; Set defaultLang to en</span><br><span class="line">            translate.setDefaultLang(&#39;en&#39;);</span><br><span class="line"></span><br><span class="line">          const pathName &#x3D; window.location.pathname;</span><br><span class="line">          const urlLang &#x3D; getLangFromPath(pathName);</span><br><span class="line"></span><br><span class="line">          &#x2F;&#x2F; Get default browser language</span><br><span class="line">            &#x2F;&#x2F; const browserLang &#x3D; translate.getBrowserLang();</span><br><span class="line"></span><br><span class="line">            const langToSet &#x3D; urlLang.match(&#x2F;en|zh&#x2F;)? urlLang: &#39;en&#39;;</span><br><span class="line">            translate.use(langToSet).subscribe(() &#x3D;&gt; &#123;</span><br><span class="line">                console.info(&#96;Successfully initialized &#39;$&#123;langToSet&#125;&#39; language.&#39;&#96;);</span><br><span class="line">            &#125;, err &#x3D;&gt; &#123;</span><br><span class="line">                console.error(&#96;Problem with &#39;$&#123;langToSet&#125;&#39; language initialization.&#39;&#96;);</span><br><span class="line">            &#125;, () &#x3D;&gt; &#123;</span><br><span class="line">                resolve(null);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;**</span><br><span class="line"> *</span><br><span class="line"> * @param pathName, &#39;&#x2F;&#39; or &#39;&#x2F;zh&#39; or &#39;&#x2F;zh&#x2F;tools&#x2F;mower&#x2F;rlm1-repair-tool&#39;</span><br><span class="line"> *&#x2F;</span><br><span class="line">function getLangFromPath(pathName: string): string &#123;</span><br><span class="line">  const slashIndex &#x3D; pathName.indexOf(&quot;&#x2F;&quot;,1);</span><br><span class="line">  if (slashIndex &#x3D;&#x3D; -1) &#123;</span><br><span class="line">    return pathName.substring(1, pathName.length)</span><br><span class="line">  &#125;</span><br><span class="line">  return pathName.substring(1, slashIndex);</span><br><span class="line">&#125;</span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<h4 id="3-跟随浏览器的语言去改变-Web-APP-的语言"><a href="#3-跟随浏览器的语言去改变-Web-APP-的语言" class="headerlink" title="3.跟随浏览器的语言去改变 Web APP 的语言"></a>3.跟随浏览器的语言去改变 Web APP 的语言</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">constructor(private translate: TranslateService, private router: Router) &#123;</span><br><span class="line"> </span><br><span class="line">   translate.addLangs([&#39;en&#39;, &#39;de&#39;, &#39;zh&#39;])</span><br><span class="line">   translate.setDefaultLang(&#39;en&#39;);</span><br><span class="line">   const browerCurLang &#x3D; translate.getBrowserCultureLang();</span><br><span class="line">   const browerLang &#x3D; translate.getBrowserLang();</span><br><span class="line">   translate.use(browerLang.match(&#x2F;en|de|zh&#x2F;)? browerLang: &#39;en&#39;);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<h2 id="6-复数形式的处理-1"><a href="#6-复数形式的处理-1" class="headerlink" title="6.复数形式的处理"></a>6.复数形式的处理<a name="one_more"/></h2>]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Angular 动态配置环境</title>
    <url>/2019/08/24/Angular_%E5%8A%A8%E6%80%81%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/</url>
    <content><![CDATA[<blockquote>
<p>免 rebuild 配置环境的过程.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h2><ul>
<li>1.<a href="https://www.jvandemo.com/how-to-use-environment-variables-to-configure-your-angular-application-without-a-rebuild/">How to use environment variables to configure your Angular application without a rebuild</a><ul>
<li>1.<a href="https://github.com/jvandemo/angular-environment-variables-demo">Github: 2<br>13 4 jvandemo/angular-environment-variables-demo</a></li>
</ul>
</li>
<li>2.<a href="https://stackoverflow.com/questions/46077038/angular-2-4-change-env-variable-after-build">Angular 2 / 4 change env variable after build</a></li>
</ul>
<h2 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤"></a>2.步骤</h2><ul>
<li>1.新建一个环境 <code>javascript</code> 文件,在 <code>src/assets</code> 目录下新建一个 <code>env.js</code> 文件，写入以下内容:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">(function (window) &#123;</span><br><span class="line">    window.__env &#x3D; window.__env || &#123;&#125;;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; API url</span><br><span class="line">    window.__env.apiUrl &#x3D; &#39;http:&#x2F;&#x2F;dev.your-api.com&#39;;</span><br><span class="line"></span><br><span class="line">    &#x2F;&#x2F; Whether or not to enable debug mode</span><br><span class="line">    &#x2F;&#x2F; Setting this to false will disable console output</span><br><span class="line">    window.__env.enableDebug &#x3D; false;</span><br><span class="line"></span><br><span class="line">&#125;(this));</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.把新建的文件导入到项目中,向 <code>src/index.html</code> 的 <code>&lt;head&gt;&lt;/head&gt;</code> 中导入新建的 <code>env.js</code> 文件，效果如下所示:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;html ng-app&#x3D;&quot;app&quot;&gt;</span><br><span class="line"></span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;!-- Load environment variables --&gt;</span><br><span class="line">    &lt;script src&#x3D;&quot;assets&#x2F;env.js&quot;&gt;&lt;&#x2F;script&gt;</span><br><span class="line">  &lt;&#x2F;head&gt;</span><br><span class="line"></span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    ...</span><br><span class="line">    &lt;!-- Angular code is loaded here --&gt;</span><br><span class="line">  &lt;&#x2F;body&gt;  </span><br><span class="line"></span><br><span class="line">&lt;&#x2F;html&gt;  </span><br></pre></td></tr></table></figure>

<ul>
<li>3.让 <code>env.js</code> 文件在 <code>ng build</code> 或 <code>ng serve</code> 中原样输出，需要在 <code>angular.json</code> 文件的 <code>assets</code> 下添加如下的代码,如 :</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;projects&quot;: &#123;</span><br><span class="line">    &quot;app-name&quot;: &#123;</span><br><span class="line">      &quot;architect&quot;: &#123;</span><br><span class="line">        &quot;build&quot;: &#123;</span><br><span class="line">          &quot;options&quot;: &#123;</span><br><span class="line">            &quot;assets&quot;: [</span><br><span class="line">              &quot;src&#x2F;favicon.ico&quot;,</span><br><span class="line">              &quot;src&#x2F;assets&quot;,</span><br><span class="line">              &quot;src&#x2F;assets&#x2F;env.js&quot;</span><br><span class="line">            ]</span><br><span class="line">          &#125;</span><br><span class="line">          &quot;configurations&quot;: &#123;</span><br><span class="line">            &quot;production&quot;: &#123;</span><br><span class="line">              &quot;fileReplacements&quot;: [</span><br><span class="line">                &#123;</span><br><span class="line">                  &quot;replace&quot;: &quot;src&#x2F;environments&#x2F;environment.ts&quot;,</span><br><span class="line">                  &quot;with&quot;: &quot;src&#x2F;environments&#x2F;environment.prod.ts&quot;</span><br><span class="line">                &#125;</span><br><span class="line">              ],</span><br><span class="line">              &#x2F;&#x2F; ...</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>4.在 <code>environment.ts</code> 中导入我们动态生成的值，如:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">const key &#x3D; &#39;__env&#39;;</span><br><span class="line">export const environment &#x3D; &#123;</span><br><span class="line">    canDebug: window[key].enableDebug || false,</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>5.然后即可在组件中使用，如:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; Component</span><br><span class="line">export class AppComponent implements OnInit &#123;</span><br><span class="line">	devVersion &#x3D; environment.appVersion + &#39;,&#39; + environment.canDebug;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; templateUrl</span><br><span class="line">&lt;span class&#x3D;&quot;version&quot; &gt;&#123;&#123;devVersion&#125;&#125;&lt;&#x2F;span&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li><p>6.然后动态改变 <code>env.js</code> 的值，网站的配置也会改变</p>
<ul>
<li>1.这是 <code>ng serve</code> 的效果，<code>ng build</code> 后放到 <code>nginx</code> 的效果也一样的,而且不用重启 nginx 都可以看到环境的变化.<br><img src="http://pic.pgyjz.cn/blog/Angular/env-change/angular-env-change.gif"></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Angular 项目的发布</title>
    <url>/2019/08/09/Angular%E9%A1%B9%E7%9B%AE%E5%8F%91%E5%B8%83/</url>
    <content><![CDATA[<blockquote>
<p>主要记录下 Angular 项目的部署的方法</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a><a href="#references">1.参考</a></h2><h2 id="2-发布方法"><a href="#2-发布方法" class="headerlink" title="2.发布方法"></a><a href="#how_to_public">2.发布方法</a></h2><ul>
<li>1.发布到 <code>Github Page</code> 上面</li>
<li>2.发送到 <code>nginx</code> 服务器</li>
<li>3.发布到 <code>firebase</code>.</li>
</ul>
<h2 id="3-本地代码-HTTPS-部署"><a href="#3-本地代码-HTTPS-部署" class="headerlink" title="3.本地代码 HTTPS 部署"></a><a href="#local_deploy">3.本地代码 HTTPS 部署</a></h2><h2 id="4-错误记录"><a href="#4-错误记录" class="headerlink" title="4.错误记录"></a><a href="#error_info_note">4.错误记录</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考<a name="references"/></h2><ul>
<li><a href="https://v6.angular.live/guide/deployment">Angular 官方的部署文档</a></li>
<li><a href="https://medium.com/@rubenvermeulen/running-angular-cli-over-https-with-a-trusted-certificate-4a0d5f92747a">Running Angular CLI over HTTPS with a Trusted Certificate</a></li>
<li><a href="https://medium.com/@rubenvermeulen/running-angular-cli-over-https-with-a-trusted-certificate-4a0d5f92747a">Running Angular CLI over HTTPS with a Trusted Certificate</a></li>
<li><a href="https://blog.fullstacktraining.com/serve-an-angular-app-on-localhost-via-https/">Serve an Angular app on localhost via HTTPS</a></li>
</ul>
<h2 id="2-发布方法-1"><a href="#2-发布方法-1" class="headerlink" title="2.发布方法"></a>2.发布方法<a name="how_to_public"/></h2><h4 id="1-发布到-Github-Page-上面"><a href="#1-发布到-Github-Page-上面" class="headerlink" title="1.发布到 Github Page 上面"></a><a href="https://v6.angular.live/guide/deployment#deploy-to-github-pages">1.发布到 <code>Github Page</code> 上面</a></h4><ul>
<li>1.官方已经讲得很详细，我这里就不再描述了.</li>
<li>2.但是 <code>404.html</code> 页面一直没什么反应,即我输入错了地址，也不会导航到 404 page.</li>
</ul>
<h4 id="2-发送到-nginx-服务器"><a href="#2-发送到-nginx-服务器" class="headerlink" title="2.发送到 nginx 服务器"></a>2.发送到 nginx 服务器</h4><h5 id="1-参考-2"><a href="#1-参考-2" class="headerlink" title="1.参考:"></a>1.参考:</h5><ul>
<li>1.<a href="https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/#front-controller-pattern-web-apps">Nginx 配置设置</a></li>
<li>2.<a href="https://v6.angular.live/guide/deployment#fallback-configuration-examples">Nginx 后备页面配置范例</a></li>
</ul>
<h5 id="2-配置-nginx-的配置文件-nginx-conf-增加-try-files-uri-uri-index-html-的配置"><a href="#2-配置-nginx-的配置文件-nginx-conf-增加-try-files-uri-uri-index-html-的配置" class="headerlink" title="2.配置 nginx 的配置文件 nginx.conf ,增加 try_files $uri $uri/ /index.html; 的配置."></a>2.配置 nginx 的配置文件 <code>nginx.conf</code> ,增加 <code>try_files $uri $uri/ /index.html;</code> 的配置.</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http &#123;</span><br><span class="line">         ...</span><br><span class="line">  server &#123;</span><br><span class="line">        ...</span><br><span class="line">    location &#x2F; &#123;</span><br><span class="line">            ...</span><br><span class="line">            try_files $uri $uri&#x2F; &#x2F;index.html;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>

<h5 id="3-把-ng-build-后生成的包放到指定的服务器地址下，即可看到效果"><a href="#3-把-ng-build-后生成的包放到指定的服务器地址下，即可看到效果" class="headerlink" title="3.把 ng build 后生成的包放到指定的服务器地址下，即可看到效果."></a>3.把 <code>ng build</code> 后生成的包放到指定的服务器地址下，即可看到效果.</h5><h4 id="3-发布到-firebase"><a href="#3-发布到-firebase" class="headerlink" title="3.发布到 firebase."></a>3.发布到 <code>firebase</code>.</h4><h6 id="1-参考-3"><a href="#1-参考-3" class="headerlink" title="1.参考:"></a>1.参考:</h6><ul>
<li>1.<a href="https://scotch.io/tutorials/deploying-an-angular-cli-app-to-production-with-firebase">Deploying an Angular CLI App to Production with Firebase</a></li>
<li>2.<a href="https://firebase.google.com/docs/hosting/quickstart?authuser=0">Firebase 托管使用入门</a></li>
</ul>
<h6 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤:"></a>2.步骤:</h6><ul>
<li>1.安装 <code>firebase tools</code> : <code>npm install -g firebase-tools</code></li>
<li>2.在 <code>https://console.firebase.google.com</code> 中登录</li>
<li>3.到 Angular 项目的根目录下执行命令 <code>firebase login</code> <code>firebase init</code>, 然后按以下配置进行:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Are you ready to proceed? Yes</span><br><span class="line">Which Firebase CLI features? Hosting (In the future, use whatever you need! Press space to select.)</span><br><span class="line">Select a default Firebase project? Angular Hosting Test (Choose whatever app you created in the earlier steps)</span><br><span class="line">What do you want to use as your public directory? dist&#x2F;your-project-name (This is important! Angular creates the dist folder.)</span><br><span class="line">Configure as a single-page app? Yes</span><br></pre></td></tr></table></figure>

<ul>
<li>4.然后运行 <code>firebase deploy</code> 即可部署你的网站到 firebase.</li>
</ul>
<h2 id="3-本地代码-HTTPS-部署-1"><a href="#3-本地代码-HTTPS-部署-1" class="headerlink" title="3.本地代码 HTTPS 部署"></a>3.本地代码 HTTPS 部署<a name="local_deploy"/></h2><blockquote>
<p>Mac 的步骤</p>
</blockquote>
<h4 id="1-直接在命令行运行-ng-serve-ssl-true-即可-但是这样浏览器会报-Certificate-is-not-trusted-的警告"><a href="#1-直接在命令行运行-ng-serve-ssl-true-即可-但是这样浏览器会报-Certificate-is-not-trusted-的警告" class="headerlink" title="1.直接在命令行运行 ng serve --ssl true 即可, 但是这样浏览器会报 Certificate is not trusted 的警告."></a>1.直接在命令行运行 <code>ng serve --ssl true</code> 即可, 但是这样浏览器会报 <code>Certificate is not trusted</code> 的警告.</h4><h4 id="2-想要解决这个问题，-需要以下的步骤"><a href="#2-想要解决这个问题，-需要以下的步骤" class="headerlink" title="2.想要解决这个问题， 需要以下的步骤:"></a>2.想要解决这个问题， 需要以下的步骤:</h4><ul>
<li>1.运行命令 <code>openssl req -newkey rsa:2048 -x509 -nodes -keyout server.key -new -out server.crt -sha256 -days 365</code> 生成证书文件 <code>server.crt</code> 和 <code>server.key</code>.</li>
<li>2.双击 <code>server.crt </code> 文件,在弹出的框里选择 <code>Login</code>, 然后在 <code>Login</code> 中双击选择刚刚生成的 <code>localhost</code></li>
<li>3.在 <code>Trust</code> 中选择 <code>Always Trust</code>.</li>
<li>4.把 <code>ssl.crt</code> 和 <code>server.key</code>文件放置到 项目跟目录的 ssl 文件夹下.</li>
<li>5.重启 浏览器,然后运行命令 <code>ng serve --ssl true --ssl-cert &quot;./ssl/server.crt&quot; --ssl-key &quot;./ssl/server.key&quot;</code> .</li>
<li>6.再打开 <a href="https://localhost:4200/">https://localhost:4200</a> 即可看到浏览器已经信任了这个证书.</li>
</ul>
<h2 id="4-错误记录-1"><a href="#4-错误记录-1" class="headerlink" title="4.错误记录"></a>4.错误记录<a name="error_info_note"/></h2><h4 id="1-Angular-CLI-version-8-1-3"><a href="#1-Angular-CLI-version-8-1-3" class="headerlink" title="1.Angular CLI version (8.1.3)"></a>1.Angular CLI version <code>(8.1.3)</code></h4><ul>
<li>1.发现在 html 中调用 ts 文件的 private 方法， <code>ng serve</code>, <code>ng build</code> 都不会报错， 但是 <code>ng build</code> 就会报错，如 <code>ERROR in src/app/header/header.component.html(24,49): : Property &#39;getUserRoles&#39; is private and only accessible within class &#39;HeaderComponent&#39;</code>, 记录仅供以后避免.</li>
</ul>
]]></content>
      <categories>
        <category>Angular</category>
      </categories>
      <tags>
        <tag>Angular</tag>
      </tags>
  </entry>
  <entry>
    <title>Appium-Learn(javascript)</title>
    <url>/2020/07/16/Appium-Learn(javascript)/</url>
    <content><![CDATA[<blockquote>
<p>APP UI 自动化测试(使用 javascript 语言)</p>
</blockquote>
<a id="more"></a>

<h1 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h1><h1 id="2-环境搭建"><a href="#2-环境搭建" class="headerlink" title="2.环境搭建"></a>2.环境搭建</h1><h1 id="3-例子"><a href="#3-例子" class="headerlink" title="3.例子"></a>3.例子</h1><hr>
<hr>
<hr>
<h1 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考</h1><ul>
<li>1.<a href="https://www.softwaretestinghelp.com/5-best-automation-tools-for-testing-android-applications/">11 Best Automation Tools For Testing Android Applications (Android App Testing Tools)</a></li>
<li>2.<a href="http://appium.io/">Appium 移动应用自动化</a></li>
<li>3.<a href="http://appium.io/docs/en/about-appium/getting-started/?lang=zh">Getting started</a></li>
<li>4.<a href="https://www.youtube.com/watch?v=i1tQ1pjEFWw">Appium-Youtube</a></li>
<li>5.<a href="https://github.com/HuJiaoHJ/blog/issues/3">使用 node（wd）编写 Appium 测试用例</a></li>
<li>6.<a href="https://github.com/admc/wd">admc / wd</a></li>
<li>7.<a href="https://github.com/appium/appium">Appium Github</a></li>
<li>8.<a href="https://github.com/admc/wd/blob/master/doc/api.md">WD API</a></li>
</ul>
<h1 id="2-环境搭建-1"><a href="#2-环境搭建-1" class="headerlink" title="2.环境搭建"></a>2.环境搭建</h1><h4 id="1-系统-Mac-10-15-5-Catalina"><a href="#1-系统-Mac-10-15-5-Catalina" class="headerlink" title="1.系统: Mac 10.15.5 Catalina"></a>1.系统: Mac 10.15.5 Catalina</h4><h4 id="2-设置-zsh-shell-的-PATH-zshrc-文件"><a href="#2-设置-zsh-shell-的-PATH-zshrc-文件" class="headerlink" title="2.设置 zsh shell 的 PATH(.zshrc 文件)"></a>2.设置 <code>zsh shell</code> 的 PATH(.zshrc 文件)</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">export ANDROID_HOME&#x3D;&#x2F;Users&#x2F;glb_gz&#x2F;Library&#x2F;Android&#x2F;sdk</span><br><span class="line">export PATH&#x3D;$ANDROID_HOME&#x2F;platform-tools:$PATH</span><br><span class="line">export PATH&#x3D;$ANDROID_HOME&#x2F;tools:$PATH</span><br><span class="line">export PATH&#x3D;$ANDROID_HOME&#x2F;tools&#x2F;bin:$PATH</span><br><span class="line"></span><br><span class="line">export JAVA_HOME&#x3D;$(&#x2F;usr&#x2F;libexec&#x2F;java_home)</span><br><span class="line">export PATH&#x3D;$JAVA_HOME&#x2F;bin:$PATH</span><br></pre></td></tr></table></figure>



<h1 id="3-例子-1"><a href="#3-例子-1" class="headerlink" title="3.例子"></a>3.例子</h1><h2 id="1-用命令行运行"><a href="#1-用命令行运行" class="headerlink" title="1.用命令行运行"></a>1.用命令行运行</h2><blockquote>
<p>打开 模拟器 的 Calculator 应用<br>Javascript WebdriverIO</p>
</blockquote>
<ul>
<li>1.打开 <code>Android Emalator</code>. 打开 <code>Android Studio</code> -&gt; <code>Tools</code> -&gt; <code>AVD Manager</code>, 选择设备打开.</li>
<li>2.在 <code>Terminal</code> 中运行 <code>adb logcat &gt; logfile.txt</code>(把 ADB 的日志记录到文件中，方便后面的查找) , 然后打开 Calculator APP， 然后在 logfile.txt 中查找 <code>for activity</code> 文本，看到 <code>Calculator </code> 后即可查到包名及 Activity.  </li>
<li>2.也可以先打开 <code>Calculator</code> APP, 然后执行以下脚本，即可看到 <code>Calculator</code> APP 的信息(这种方法显示的 <code>MainActivity</code> 信息可能不正确)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ adb shell dumpsys window windows | grep mFocusedApp</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Output</span><br><span class="line"> mFocusedApp&#x3D;AppWindowToken&#123;78cea5a token&#x3D;Token&#123;93aba05 ActivityRecord&#123;d02a17c u0 com.android.calculator2&#x2F;.Calculator t10261&#125;&#125;&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>3.在 <code>Terminal</code> 运行 <code>adb devices</code>, 查看 Android 模拟器的信息(注意 attached 的状态不能为 offline)(需要保持 <code>Android Studio</code> 的开启).</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">List of devices attached</span><br><span class="line"></span><br><span class="line">emulator-5554  	device</span><br></pre></td></tr></table></figure>

<ul>
<li>4.新建 <code>index.js</code>, 填入以下配置信息， 然后先运行 <code>appium</code> 命令去启动 <code>appium</code>, 再打开一个 <code>Terminal</code>, 在 <code>index.js </code> 文件目录下运行命令 <code>node index.js</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; javascript</span><br><span class="line"></span><br><span class="line">const wdio &#x3D; require(&quot;webdriverio&quot;);</span><br><span class="line">const assert &#x3D; require(&quot;assert&quot;);</span><br><span class="line"></span><br><span class="line">const opts &#x3D; &#123;</span><br><span class="line">  path: &#39;&#x2F;wd&#x2F;hub&#39;,</span><br><span class="line">  port: 4723,</span><br><span class="line">  capabilities: &#123;</span><br><span class="line">    platformName: &quot;Android&quot;, </span><br><span class="line">    deviceName: &quot;emulator-5554&quot;,</span><br><span class="line">    appPackage: &quot;com.android.calculator2&quot;,</span><br><span class="line">    appActivity: &quot;.Calculator&quot;,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">async function main () &#123;</span><br><span class="line">  const client &#x3D; await wdio.remote(opts);</span><br><span class="line">  await client.deleteSession();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">main();</span><br></pre></td></tr></table></figure>

<h2 id="2-用-Appium-Desktop-运行"><a href="#2-用-Appium-Desktop-运行" class="headerlink" title="2.用 Appium Desktop 运行."></a>2.用 <code>Appium Desktop</code> 运行.</h2><h4 id="1-Installing-Appium-Desktop-1-17-1"><a href="#1-Installing-Appium-Desktop-1-17-1" class="headerlink" title="1.Installing Appium Desktop(1.17.1)"></a>1.Installing Appium Desktop(1.17.1)</h4><ul>
<li>1.注意要在 <code>System preferences</code> -&gt; <code>Security &amp; Privacy</code> 中选择信任.</li>
</ul>
<h4 id="2-Edit-Configurations"><a href="#2-Edit-Configurations" class="headerlink" title="2.Edit Configurations"></a>2.Edit Configurations</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ANDROID_HOME: &#x2F;Users&#x2F;glb_gz&#x2F;Library&#x2F;Android&#x2F;sdk</span><br><span class="line"># 注意 JAVA_HOME 不能像设置 PATH 那样设置为 &#96;&#x2F;usr&#x2F;libexec&#x2F;java_home&#96; </span><br><span class="line">JAVA_HOME: &#x2F;Library&#x2F;Java&#x2F;JavaVirtualMachines&#x2F;jdk-11.0.1.jdk&#x2F;Contents&#x2F;Home</span><br></pre></td></tr></table></figure>

<h4 id="3-JSON-Representation-设置以下内容"><a href="#3-JSON-Representation-设置以下内容" class="headerlink" title="3.JSON Representation 设置以下内容."></a>3.JSON Representation 设置以下内容.</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;platformName&quot;: &quot;Android&quot;,</span><br><span class="line">  &quot;deviceName&quot;: &quot;emulator-5554&quot;,</span><br><span class="line">  &quot;appPackage&quot;: &quot;com.android.calculator2&quot;,</span><br><span class="line">  &quot;appActivity&quot;: &quot;.Calculator&quot;,</span><br><span class="line">  &quot;noReset&quot;: true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h4 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h4>]]></content>
      <categories>
        <category>auto-test</category>
      </categories>
      <tags>
        <tag>auto-test</tag>
      </tags>
  </entry>
  <entry>
    <title>Appium 自动化测试(python3)</title>
    <url>/2020/07/11/Appium-Learn(python)/</url>
    <content><![CDATA[<blockquote>
<p>Appium 环境的搭建及简单的例子(Python3)</p>
</blockquote>
<a id="more"></a>


<h1 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h1><ul>
<li>1.<a href="https://github.com/appium/appium">Appium Github</a></li>
<li>2.<a href="http://appium.io/">Appium.io 移动应用自动化</a></li>
<li>3.<a href="https://experitest.com/appium-testing/the-complete-guide-appium-testing-using-python/">Appium Python Testing: The Complete Guide</a></li>
<li>4.<a href="https://www.cnblogs.com/tiechui2015/p/10310738.html">Appium的常用定位方法</a></li>
<li>5.<a href="https://www.youtube.com/watch?v=Ot0N0tw54Hg">Appium Scroll</a></li>
<li>6.<a href="https://zhuanlan.zhihu.com/p/109939711">Python 修改 pip 源为国内源</a></li>
<li>7.<a href="https://github.com/oldani/HtmlTestRunner">Python test report(HtmlTestRunner)</a></li>
</ul>
<h1 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤"></a>2.步骤</h1><h2 id="1-下载-Pycharm-CE-然后配置-Project-Interpreter-信息"><a href="#1-下载-Pycharm-CE-然后配置-Project-Interpreter-信息" class="headerlink" title="1.下载 Pycharm CE, 然后配置 Project Interpreter 信息."></a>1.下载 Pycharm CE, 然后配置 <code>Project Interpreter</code> 信息.</h2><h1 id="3-效果"><a href="#3-效果" class="headerlink" title="3.效果"></a>3.效果</h1><h2 id="1-滚动屏幕"><a href="#1-滚动屏幕" class="headerlink" title="1.滚动屏幕"></a>1.滚动屏幕</h2><ul>
<li><p>1.通过坐标, 如从 <code>(x=60, y=1000)</code> 到 <code>(x=50, y=500)</code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># &#x2F;&#x2F; 向下滑动效果</span><br><span class="line">for i in range(5):</span><br><span class="line">    TouchAction(driver).press(x&#x3D;60, y&#x3D;1000).move_to(x&#x3D;50, y&#x3D;500).release().perform()</span><br><span class="line">    sleepSomeTime(2)</span><br></pre></td></tr></table></figure>
</li>
<li><p>2.通过特定的控件的位置.如从 <code>country</code> 到 <code>addressLine2 </code></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">for i in range(5):</span><br><span class="line">    country &#x3D; driver.find_element_by_xpath(&quot;&#x2F;&#x2F;android.widget.TextView[contains(@text,&#39;Country&#39;)]&quot;)</span><br><span class="line">    addressLine2 &#x3D; driver.find_element_by_xpath(&quot;&#x2F;&#x2F;android.widget.TextView[contains(@text,&#39;Address line 2&#39;)]&quot;)</span><br><span class="line">    TouchAction(driver).press(country).move_to(addressLine2).release().perform()</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h2 id="2-保存截图"><a href="#2-保存截图" class="headerlink" title="2.保存截图"></a>2.保存截图</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 保存到 Html</span><br><span class="line"># screenshotBase64 &#x3D; driver.get_screenshot_as_base64()</span><br><span class="line"></span><br><span class="line"># 保存到文件</span><br><span class="line">directory &#x3D; &#39;%s&#x2F;reports&#x2F;&#39; % os.getcwd()</span><br><span class="line">now &#x3D; datetime.now()</span><br><span class="line">file_name &#x3D; &#39;screenshot_&#123;0&#125;.png&#39;.format(now.strftime(&#39;%Y-%m-%d_%H:%M:%S&#39;))</span><br><span class="line"></span><br><span class="line">driver.save_screenshot(directory + file_name)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="3-查看页面的代码结构"><a href="#3-查看页面的代码结构" class="headerlink" title="3.查看页面的代码结构"></a>3.查看页面的代码结构</h2><ul>
<li><p>1.执行</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source &#x3D; driver.page_source</span><br><span class="line">print(&quot;source:&#123;0&#125;&quot;.format(source))</span><br></pre></td></tr></table></figure>
</li>
<li><p>2.输出效果</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">source:&lt;?xml version&#x3D;&#39;1.0&#39; encoding&#x3D;&#39;UTF-8&#39; standalone&#x3D;&#39;yes&#39; ?&gt;</span><br><span class="line">&lt;hierarchy index&#x3D;&quot;0&quot; class&#x3D;&quot;hierarchy&quot; rotation&#x3D;&quot;0&quot; width&#x3D;&quot;1080&quot; height&#x3D;&quot;1812&quot;&gt;</span><br><span class="line">  &lt;android.widget.FrameLayout index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.FrameLayout&quot; text&#x3D;&quot;&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[0,0][1080,1812]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">    &lt;android.widget.LinearLayout index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.LinearLayout&quot; text&#x3D;&quot;&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[0,0][1080,1812]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">      &lt;android.widget.FrameLayout index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.FrameLayout&quot; text&#x3D;&quot;&quot; resource-id&#x3D;&quot;android:id&#x2F;content&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[0,72][1080,1812]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">        &lt;android.support.v4.widget.SlidingPaneLayout index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.support.v4.widget.SlidingPaneLayout&quot; text&#x3D;&quot;&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[0,72][1080,1812]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">          &lt;android.widget.FrameLayout index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.FrameLayout&quot; text&#x3D;&quot;&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;ccb_base_drawer_container&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;true&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[0,72][1080,1812]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">            &lt;android.widget.RelativeLayout index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.RelativeLayout&quot; text&#x3D;&quot;&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[0,72][1080,1812]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">              &lt;android.widget.FrameLayout index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.FrameLayout&quot; text&#x3D;&quot;&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;layout_container&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[0,72][1080,1812]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">                &lt;android.widget.FrameLayout index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.FrameLayout&quot; text&#x3D;&quot;&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;fragment_container&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[0,72][1080,1812]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">                  &lt;android.widget.RelativeLayout index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.RelativeLayout&quot; text&#x3D;&quot;&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[0,72][1080,1812]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">                    &lt;android.widget.ImageView index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.ImageView&quot; text&#x3D;&quot;&quot; content-desc&#x3D;&quot;关闭&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;iv_close&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;true&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;true&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[65,150][137,222]&quot; displayed&#x3D;&quot;true&quot; &#x2F;&gt;</span><br><span class="line">                    &lt;android.widget.ImageView index&#x3D;&quot;1&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.ImageView&quot; text&#x3D;&quot;&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;iv_user_photo&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[417,290][662,535]&quot; displayed&#x3D;&quot;true&quot; &#x2F;&gt;</span><br><span class="line">                    &lt;android.widget.LinearLayout index&#x3D;&quot;2&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.LinearLayout&quot; text&#x3D;&quot;&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;ll_username_reserveinfo&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[0,603][1080,723]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">                      &lt;android.widget.LinearLayout index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.LinearLayout&quot; text&#x3D;&quot;&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;ll_showUserInfo&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[65,603][1015,723]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">                        &lt;android.widget.TextView index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.TextView&quot; text&#x3D;&quot;ID&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;label_userInfo&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;true&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[65,630][257,695]&quot; displayed&#x3D;&quot;true&quot; &#x2F;&gt;</span><br><span class="line">                        &lt;android.view.View index&#x3D;&quot;1&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.view.View&quot; text&#x3D;&quot;&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[257,603][693,723]&quot; displayed&#x3D;&quot;true&quot; &#x2F;&gt;</span><br><span class="line">                        &lt;android.widget.TextView index&#x3D;&quot;2&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.TextView&quot; text&#x3D;&quot;4453***4990&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;tv_userInfo&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;true&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[736,630][1015,695]&quot; displayed&#x3D;&quot;true&quot; &#x2F;&gt;</span><br><span class="line">                      &lt;&#x2F;android.widget.LinearLayout&gt;</span><br><span class="line">                    &lt;&#x2F;android.widget.LinearLayout&gt;</span><br><span class="line">                    &lt;android.widget.FrameLayout index&#x3D;&quot;3&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.FrameLayout&quot; text&#x3D;&quot;&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;ll_password_finger_container&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[0,723][1080,1703]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">                      &lt;android.widget.LinearLayout index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.LinearLayout&quot; text&#x3D;&quot;&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;ll_password_login_container&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[0,723][1080,1703]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">                        &lt;android.widget.LinearLayout index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.LinearLayout&quot; text&#x3D;&quot;&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;ll_password&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[65,723][1015,843]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">                          &lt;android.widget.TextView index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.TextView&quot; text&#x3D;&quot;Password &quot;heckable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;true&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[65,750][257,815]&quot; displayed&#x3D;&quot;true&quot; &#x2F;&gt;</span><br><span class="line">                          &lt;android.widget.EditText index&#x3D;&quot;1&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.EditText&quot; text&#x3D;&quot;•••&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;et_password&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;true&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;true&quot; focused&#x3D;&quot;true&quot; long-clickable&#x3D;&quot;true&quot; password&#x3D;&quot;true&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[300,723][1015,843]&quot; displayed&#x3D;&quot;true&quot; &#x2F;&gt;</span><br><span class="line">                        &lt;&#x2F;android.widget.LinearLayout&gt;</span><br><span class="line">                        &lt;android.widget.LinearLayout index&#x3D;&quot;1&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.LinearLayout&quot; text&#x3D;&quot;&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;ll_login_btn&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;false&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;false&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[0,924][1080,1005]&quot; displayed&#x3D;&quot;true&quot;&gt;</span><br><span class="line">                          &lt;android.widget.Button index&#x3D;&quot;0&quot; package&#x3D;&quot;com.test.main&quot; class&#x3D;&quot;android.widget.Button&quot; text&#x3D;&quot;登录&quot; resource-id&#x3D;&quot;com.test.main:id&#x2F;btn_confirm&quot; checkable&#x3D;&quot;false&quot; checked&#x3D;&quot;false&quot; clickable&#x3D;&quot;true&quot; enabled&#x3D;&quot;true&quot; focusable&#x3D;&quot;true&quot; focused&#x3D;&quot;false&quot; long-clickable&#x3D;&quot;false&quot; password&#x3D;&quot;false&quot; scrollable&#x3D;&quot;false&quot; selected&#x3D;&quot;false&quot; bounds&#x3D;&quot;[259,924][821,1005]&quot; displayed&#x3D;&quot;true&quot; &#x2F;&gt;</span><br><span class="line">                        &lt;&#x2F;android.widget.LinearLayout&gt;</span><br><span class="line">                      &lt;&#x2F;android.widget.LinearLayout&gt;</span><br><span class="line">                    &lt;&#x2F;android.widget.FrameLayout&gt;</span><br><span class="line">                  &lt;&#x2F;android.widget.RelativeLayout&gt;</span><br><span class="line">                &lt;&#x2F;android.widget.FrameLayout&gt;</span><br><span class="line">              &lt;&#x2F;android.widget.FrameLayout&gt;</span><br><span class="line">            &lt;&#x2F;android.widget.RelativeLayout&gt;</span><br><span class="line">          &lt;&#x2F;android.widget.FrameLayout&gt;</span><br><span class="line">        &lt;&#x2F;android.support.v4.widget.SlidingPaneLayout&gt;</span><br><span class="line">      &lt;&#x2F;android.widget.FrameLayout&gt;</span><br><span class="line">    &lt;&#x2F;android.widget.LinearLayout&gt;</span><br><span class="line">  &lt;&#x2F;android.widget.FrameLayout&gt;</span><br><span class="line">&lt;&#x2F;hierarchy&gt;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>auto-test</category>
      </categories>
      <tags>
        <tag>auto-test</tag>
      </tags>
  </entry>
  <entry>
    <title>BLE DFU 相关</title>
    <url>/2019/01/22/BLE_DFU/</url>
    <content><![CDATA[<blockquote>
<p>记录 APP 开发 BLE DFU 相关功能的步骤.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考链接"><a href="#1-参考链接" class="headerlink" title="1.参考链接"></a><a href="#references">1.参考链接</a></h2><ul>
<li>1.相关参考的链接.</li>
<li>2.相关参考的解释.<h2 id="2-详细过程"><a href="#2-详细过程" class="headerlink" title="2.详细过程"></a><a href="#details">2.详细过程</a></h2></li>
<li>1.DFU 的步骤<ul>
<li>0.Nordic BLE DFU 的架构设计.</li>
<li>1.查询版本</li>
<li>2.唤醒 BLE 设备的 DFU 模式(从普通模式转到 DFU 模式 )</li>
<li>3.开始 DFU.</li>
</ul>
</li>
</ul>
<hr>
<hr>
<hr>
<h2 id="1-参考链接-1"><a href="#1-参考链接-1" class="headerlink" title="1.参考链接"></a>1.参考链接<a name="references"/></h2><ul>
<li>1.相关参考的链接.<ul>
<li>1.<a href="https://infocenter.nordicsemi.com/index.jsp?topic=/com.nordic.infocenter.sdk51.v10.0.0/bledfu_architecture_bl.html">DFU Architecture(DFU 的整体架构)</a></li>
<li>3.<a href="https://github.com/NordicSemiconductor/Android-nRF-Connect/blob/master/init%20packet%20handling/How%20to%20generate%20the%20INIT%20file%20for%20DFU.pdf">How to generate the INIT file for DFU.pdf</a></li>
<li>4.<a href="https://github.com/NordicSemiconductor/Android-DFU-Library">Android DFU Library</a></li>
</ul>
</li>
</ul>
<ul>
<li>2.<code>DFU Architecture </code>的解释.<ul>
<li>1.详细的命令解释在路径 <code>Software Development Kit &gt; Previous versions of nRF5 SDK &gt; nRF51 SDK v10.0.0 &gt; Examples &gt; DFU bootloader examples &gt; BLE &amp; HCI/UART Bootloader/DFU &gt; Transport layers -&gt; BLE DFU Service</code> 里</li>
<li>2.概略的步骤解释在路径 <code>Software Development Kit &gt; Previous versions of nRF5 SDK &gt; nRF51 SDK v10.0.0 &gt; Examples &gt; DFU bootloader examples &gt; BLE &amp; HCI/UART Bootloader/DFU &gt; Transport layers -&gt; BLE DFU Profile</code> 里.</li>
</ul>
</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/BLE/Snip20190718_3.png"><br><img src="http://pic.pgyjz.cn/blog/BLE/Snip20190718_4.png"></p>
<hr>
<h2 id="2-详细过程-1"><a href="#2-详细过程-1" class="headerlink" title="2.详细过程"></a>2.详细过程<a name="details"/></h2><blockquote>
<p>BLE 的板子是用 51822 系列的板子,传统模式的 DFU .</p>
</blockquote>
<ul>
<li>1.所用到的 DFU 相关的信息:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public readonly Guid m_dfu_service &#x3D; Guid.Parse(&quot;00001530-1212-EFDE-1523-785FEABCD123&quot;);</span><br><span class="line">public readonly Guid m_control_point_char &#x3D; Guid.Parse(&quot;00001531-1212-EFDE-1523-785FEABCD123&quot;);</span><br><span class="line">	public readonly Guid m_descriptor_char &#x3D; Guid.Parse(&quot;00002902-0000-1000-8000-00805F9B34FB&quot;);</span><br><span class="line">public readonly Guid m_package_char &#x3D; Guid.Parse(&quot;00001532-1212-EFDE-1523-785FEABCD123&quot;);</span><br><span class="line">public readonly Guid m_version_char &#x3D; Guid.Parse(&quot;00001534-1212-EFDE-1523-785FEABCD123&quot;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="1-DFU-的步骤"><a href="#1-DFU-的步骤" class="headerlink" title="1.DFU 的步骤"></a>1.DFU 的步骤</h3><p><img src="http://pic.pgyjz.cn/blog/Xamarin/ota_dfu_typical_ctrl_pt_procedure.svg"></p>
<h4 id="0-Nordic-BLE-DFU-的架构设计"><a href="#0-Nordic-BLE-DFU-的架构设计" class="headerlink" title="0.Nordic BLE DFU 的架构设计."></a>0.Nordic BLE DFU 的架构设计.</h4><p><img src="http://pic.pgyjz.cn/blog/Xamarin/bledfu_architecture.svg"></p>
<h4 id="1-查询版本"><a href="#1-查询版本" class="headerlink" title="1.查询版本"></a>1.查询版本</h4><ul>
<li>1.从 <code>00001534-1212-EFDE-1523-785FEABCD123</code> 中查询版本<ul>
<li>1.如果是 1 , Device 处于 普通模式，需要发命令让 Device 转到 DFU 模式(下面步骤 2).</li>
<li>2.如果是 8, Device 处于 DFU 模式,开始进行 DFU 操作.(下面步骤 3)</li>
</ul>
</li>
</ul>
<h4 id="2-唤醒-BLE-设备的-DFU-模式-从普通模式转到-DFU-模式"><a href="#2-唤醒-BLE-设备的-DFU-模式-从普通模式转到-DFU-模式" class="headerlink" title="2.唤醒 BLE 设备的 DFU 模式(从普通模式转到 DFU 模式 )"></a>2.唤醒 BLE 设备的 DFU 模式(从普通模式转到 DFU 模式 )</h4><ul>
<li>1.打开 <code>Control Point</code> 的 <code>Notifications</code>,开始监听.</li>
<li>2.向 <code>Control Point</code> 的 <code>descriptor</code> 发送值<code>&#123;0x01,0x00&#125;</code>.</li>
<li>3.发送 <code>&#123;0x01,0x04&#125;</code> 到 <code>Control Point</code> 中.<ul>
<li>1.命令后面的一位 <code>0x04</code>指的是类型，因为我们这里是 <code>application</code>.(softdevice is 0x01,bootloader is 0x02,application is 0x04)</li>
</ul>
</li>
<li>4.然后 Device 会主动断开连接，开始进入 DFU 模式，APP 需要进行重新连接，然后从步骤1(查询版本)开始.</li>
</ul>
<h4 id="3-开始-DFU"><a href="#3-开始-DFU" class="headerlink" title="3.开始 DFU."></a>3.开始 DFU.</h4><ul>
<li>1.向 <code>Control Point</code> 的 <code>descriptor</code> 发送值<code>&#123;0x01,0x00&#125;</code>.</li>
<li>2.打开 <code>Control Point</code> 的 <code>Notifications</code>,开始监听.</li>
<li>3.发送 <code>&#123;0x01,0x04&#125;</code>(Start  DFU) 到 <code>Control Point</code> 中.<ul>
<li>1.命令后面的一位 <code>0x04</code>指的是类型，因为我们这里是 <code>application</code>.(softdevice is 0x01,bootloader is 0x02,application is 0x04)</li>
</ul>
</li>
<li>4.发送 firmware 的大小 到 Device.<ul>
<li>1.发送 12 个Bytes 的数据到 <code>00001532 </code> 中.</li>
<li>2.这 12 个 Bytes 的数据分别是 <code>&lt;Length of SoftDevice&gt;&lt;Length of bootloader&gt;&lt;Length of application&gt;</code>,各占 4 个 Bytes.</li>
<li>3.记得 4 个 Bytes 的数据是从低位到高位的，如 <code>softDevice size is 0,bootloader size is 0 ,application size is 38520</code> 则生成的 12 位的数据为 <code>(0x): 00-00-00-00-00-00-00-00-78-96-00-00</code></li>
<li>4.因为我测试 DFU 用的 firmware 用的是 <code>传统模式的 DFU</code> ,所以是个 <code>.zip</code>包，包里有 <code>.bin</code>,<code>.dat</code>,<code>.manifest.json</code> 文件.这里的 <code>size</code> 用的就是 <code>.bin</code> 文件的 size. </li>
<li><a href="http://infocenter.nordicsemi.com/index.jsp?topic=/com.nordic.infocenter.sdk5.v11.0.0/bledfu_transport_bleservice.html&cp=4_0_10_4_3_1_4_1">5.详情可以看这里的 <code>Image Size</code></a></li>
</ul>
</li>
<li>5.发送 <code>&#123;0x02,0x00&#125;</code>(Init DFU Parameters) 到 <code>Control Point</code> 中.</li>
<li>6.发送 (Init Data) 到 <code>00001532</code> 中.<ul>
<li>1.这里的 <code>Init Data</code> 为 zip 包中的 <code>.dat</code> 文件的内容，大小为 14 个 Byte.</li>
</ul>
</li>
<li>7.发送 <code>&#123;0x02,0x01&#125;</code>(Init DFU Parameters) 到 <code>Control Point</code> 中.</li>
<li>8.发送 <code>&#123;0x03&#125;</code>(Receive Firmware Image) 到 <code>Control Point</code> 中.</li>
<li>9.APP 开始发送 firmware 文件<ul>
<li>1.开始发送 zip 文件下的 <code>.bin</code> 文件的内容到 Device(00001532) 中.</li>
</ul>
</li>
<li>10.发送 <code>&#123;0x04&#125;</code>(Validate Firmware) 到 <code>Control Point</code> 中.</li>
<li>11.发送 <code>&#123;0x05&#125;</code>(Activate Image and Reset) 到 <code>Control Point</code> 中.<ul>
<li>1.让 Device 重启.</li>
</ul>
</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Xamarin/exp_ota_dfu_transfer.svg"></p>
]]></content>
      <categories>
        <category>BLE</category>
      </categories>
      <tags>
        <tag>BLE</tag>
      </tags>
  </entry>
  <entry>
    <title>Blog搭建</title>
    <url>/2018/09/10/Blog%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<blockquote>
<p>记录个人博客的搭建过程(GitHub Pages + Hexo).</p>
</blockquote>
<a id="more"></a>

<h2 id="1-相关参考"><a href="#1-相关参考" class="headerlink" title="1.相关参考"></a>1.相关参考</h2><ul>
<li><a href="https://pages.github.com/">1.Websites for you and your projects.</a></li>
</ul>
<h2 id="2-Hexo搭建"><a href="#2-Hexo搭建" class="headerlink" title="2.Hexo搭建"></a><a href="#hexo_deploy">2.Hexo搭建</a></h2><h2 id="3-yilia主题"><a href="#3-yilia主题" class="headerlink" title="3.yilia主题"></a><a href="#yilia_theme">3.yilia主题</a></h2><h2 id="4-GitBook-遇到的相关的问题"><a href="#4-GitBook-遇到的相关的问题" class="headerlink" title="4.GitBook 遇到的相关的问题"></a><a href="#gitbook_issues">4.GitBook 遇到的相关的问题</a></h2><ul>
<li>1.问题一</li>
<li>2.问题二</li>
<li>3.问题三</li>
</ul>
<h2 id="5-自定义域名指向"><a href="#5-自定义域名指向" class="headerlink" title="5.自定义域名指向"></a><a href="#custom_domain">5.自定义域名指向</a></h2><hr>
<hr>
<hr>
<h2 id="2-Hexo搭建-1"><a href="#2-Hexo搭建-1" class="headerlink" title="2.Hexo搭建"></a>2.Hexo搭建<a name="hexo_deploy"/></h2><h4 id="1-安装-Hexo"><a href="#1-安装-Hexo" class="headerlink" title="1.安装 Hexo"></a>1.安装 Hexo</h4><blockquote>
<p><a href="https://hexo.io/zh-cn/docs/">https://hexo.io/zh-cn/docs/</a></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h4 id="2-建站"><a href="#2-建站" class="headerlink" title="2.建站"></a>2.建站</h4><blockquote>
<p>参考:<a href="http://www.jianshu.com/p/834d7cc0668d">http://www.jianshu.com/p/834d7cc0668d</a></p>
</blockquote>
<ul>
<li>1.初始化仓库</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo init yourname</span><br><span class="line">cd yourname</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<ul>
<li>2.修改 _config.yml 文件.</li>
</ul>
<img src="/assets/imgs/blog/Snip20171111_8.png" width="100%" height="100%">

<blockquote>
<p>记得要有缩进!: <a href="https://hexo.io/zh-cn/docs/deployment.html">https://hexo.io/zh-cn/docs/deployment.html</a></p>
<p>记得添加空格:  <a href="https://github.com/hexojs/hexo/issues/1154">https://github.com/hexojs/hexo/issues/1154</a></p>
</blockquote>
<h4 id="3-发布"><a href="#3-发布" class="headerlink" title="3.发布"></a>3.发布</h4><blockquote>
<p>参考:<a href="http://www.jianshu.com/p/834d7cc0668d">http://www.jianshu.com/p/834d7cc0668d</a></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure>



<h4 id="4-错误"><a href="#4-错误" class="headerlink" title="4.错误"></a>4.错误</h4><ul>
<li>1.发现错误 <code>Deployer not found: git</code>,就算是像 ‘教程1’ 说的那样，把 git 改为 github ,再运行 <code>npm install hexo-deployer-git --save</code> 也没用.</li>
</ul>
<blockquote>
<p>教程1: <a href="https://github.com/hexojs/hexo/issues/1040">https://github.com/hexojs/hexo/issues/1040</a></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MBP:myBlog tianzeng$ hexo d</span><br><span class="line">ERROR Deployer not found: github</span><br></pre></td></tr></table></figure>

<ul>
<li>2.解决，原来是在出现错误后，运行</li>
<li>1.Step 1</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MBP:MyBlog2 tianzeng$ hexo deploy</span><br><span class="line">ERROR Deployer not found: git</span><br><span class="line">MBP:MyBlog2 tianzeng$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>

<ul>
<li>2.Step 2</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MBP:MyBlog2 tianzeng$ hexo d</span><br><span class="line">INFO Deploying: git</span><br><span class="line">INFO Setting up Git deployment...</span><br></pre></td></tr></table></figure>

<p>这样就可以了.</p>
<img src="/assets/imgs/blog/Snip20171111_9.png" width="100%" height="100%">



<h4 id="5-脚本"><a href="#5-脚本" class="headerlink" title="5.脚本"></a>5.脚本</h4><blockquote>
<p>参考: <a href="https://github.com/qinjx/30min_guides/blob/master/shell.md">https://github.com/qinjx/30min_guides/blob/master/shell.md</a></p>
</blockquote>
<ul>
<li>在 Mac 上自动完成 blog 的上传和 Git 备份!</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line">CMD_PATH&#x3D;&#96;dirname $0&#96;</span><br><span class="line">cd $CMD_PATH</span><br><span class="line">echo &#39;Begin---------------------------&#39;</span><br><span class="line">echo &#39;提交到 blog&#39;</span><br><span class="line">echo &#39;hexo clean:&#39;</span><br><span class="line">hexo clean</span><br><span class="line">echo &#39;hexo generate:&#39;</span><br><span class="line">hexo generate</span><br><span class="line">echo &#39;hexo deploy:&#39;</span><br><span class="line">hexo deploy</span><br><span class="line">echo &#39;备份到 Github&#39;</span><br><span class="line">echo &#39;git add . :&#39;</span><br><span class="line">git add .</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo -n &quot;Enter your commit Text(default is &#39;Common Update.&#39;):  &quot;</span><br><span class="line">read aComment</span><br><span class="line"></span><br><span class="line"># if 判断 https:&#x2F;&#x2F;billie66.github.io&#x2F;TLCL&#x2F;book&#x2F;chap28.html</span><br><span class="line">if [ -z &quot;$aComment&quot; ]; then</span><br><span class="line">#赋值的操作 https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;24a5230460fd</span><br><span class="line">aComment&#x3D;&quot;Common Update.&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">echo &quot;git commit -m $aComment&quot;</span><br><span class="line">git commit -m &quot;$aComment&quot;</span><br><span class="line"></span><br><span class="line">#echo &#39;git commit -m &quot;Common Update.&quot; :&#39;</span><br><span class="line">#git commit -m &quot;Common Update.&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &#39;git push:&#39;</span><br><span class="line">git push</span><br><span class="line">echo &#39;Finish--------------------------&#39;</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure>

<img src="/assets/imgs/blog/Snip20171111_10.png" width="100%" height="100%">

<hr>
<h4 id="6-把-CNAME-添加到项目中"><a href="#6-把-CNAME-添加到项目中" class="headerlink" title="6.把 CNAME 添加到项目中"></a>6.把 CNAME 添加到项目中</h4><blockquote>
<p>参考:<a href="http://webcache.googleusercontent.com/search?q=cache:Y4TSEfU_xUoJ:jeasonstudio.github.io/2016/05/26/Mac%25E4%25B8%258A%25E6%2590%25AD%25E5%25BB%25BA%25E5%259F%25BA%25E4%25BA%258EGitHub-Page%25E7%259A%2584Hexo%25E5%258D%259A%25E5%25AE%25A2/+&cd=2&hl=zh-CN&ct=clnk&gl=ph">http://webcache.googleusercontent.com/search?q=cache:Y4TSEfU_xUoJ:jeasonstudio.github.io/2016/05/26/Mac%25E4%25B8%258A%25E6%2590%25AD%25E5%25BB%25BA%25E5%259F%25BA%25E4%25BA%258EGitHub-Page%25E7%259A%2584Hexo%25E5%258D%259A%25E5%25AE%25A2/+&amp;cd=2&amp;hl=zh-CN&amp;ct=clnk&amp;gl=ph</a></p>
</blockquote>
<ul>
<li>1.把 CNAME 文件放到 /blog/themes/landscape/source 目录下即可(其他想同步到 github 上的文件也是同理).</li>
</ul>
<h4 id="7-文章开头title"><a href="#7-文章开头title" class="headerlink" title="7.文章开头title"></a>7.文章开头title</h4><blockquote>
<p>标题,标签，种类,日期.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">tags: [tags]</span><br><span class="line">categories: [categories]</span><br><span class="line">date: 2017-11-11 11:46:19</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<hr>
<h4 id="8-升级-hexo-cli"><a href="#8-升级-hexo-cli" class="headerlink" title="8.升级 hexo-cli"></a>8.升级 <code>hexo-cli</code></h4><ul>
<li>1.<code>npm i hexo-cli -g</code></li>
</ul>
<h2 id="3-yilia主题-1"><a href="#3-yilia主题-1" class="headerlink" title="3.yilia主题"></a>3.yilia主题<a name="yilia_theme"/></h2><blockquote>
<p>GitHub: <a href="https://github.com/litten/hexo-theme-yilia">https://github.com/litten/hexo-theme-yilia</a></p>
</blockquote>
<h4 id="1-git-clone-主题"><a href="#1-git-clone-主题" class="headerlink" title="1.git clone 主题."></a>1.git clone 主题.</h4><h4 id="2-把主题放到-themes-下面"><a href="#2-把主题放到-themes-下面" class="headerlink" title="2.把主题放到 themes 下面."></a>2.把主题放到 themes 下面.</h4><h4 id="3-在-config-yml-中把"><a href="#3-在-config-yml-中把" class="headerlink" title="3.在 _config.yml 中把"></a>3.在 <code>_config.yml</code> 中把</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#theme: landscape</span><br><span class="line">theme: hexo-theme-yilia</span><br></pre></td></tr></table></figure>


<h4 id="4-点击-‘所有文章’-按钮，但什么也没显示"><a href="#4-点击-‘所有文章’-按钮，但什么也没显示" class="headerlink" title="4.点击 ‘所有文章’ 按钮，但什么也没显示"></a>4.点击 ‘所有文章’ 按钮，但什么也没显示</h4><blockquote>
<p>解决方法:需要设置缺失模块。</p>
</blockquote>
<ul>
<li>1、请确保node版本大于6.2</li>
<li>2、在博客根目录（注意不是yilia根目录）执行以下命令：</li>
</ul>
<p><code>npm i hexo-generator-json-content --save</code></p>
<p>3、在根目录的 <code>_config.yml</code> 里添加配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">jsonContent:</span><br><span class="line">meta: false</span><br><span class="line">pages: false</span><br><span class="line">posts:</span><br><span class="line">title: true</span><br><span class="line">date: true</span><br><span class="line">path: true</span><br><span class="line">text: false</span><br><span class="line">raw: false</span><br><span class="line">content: false</span><br><span class="line">slug: false</span><br><span class="line">updated: false</span><br><span class="line">comments: false</span><br><span class="line">link: false</span><br><span class="line">permalink: false</span><br><span class="line">excerpt: false</span><br><span class="line">categories: false</span><br><span class="line">tags: true</span><br></pre></td></tr></table></figure>


<h4 id="5-在需要截断的地方，添加以下代码-lt-more-gt-这样在主页显示的时候，就会显示-more-前面的一段预览代码"><a href="#5-在需要截断的地方，添加以下代码-lt-more-gt-这样在主页显示的时候，就会显示-more-前面的一段预览代码" class="headerlink" title="5.在需要截断的地方，添加以下代码 &lt;!-- more --&gt; ,这样在主页显示的时候，就会显示 more 前面的一段预览代码."></a>5.在需要截断的地方，添加以下代码 <code>&lt;!-- more --&gt;</code> ,这样在主页显示的时候，就会显示 <code>more</code> 前面的一段预览代码.</h4><h4 id="6-themes中的config-yml-例子"><a href="#6-themes中的config-yml-例子" class="headerlink" title="6.themes中的config.yml 例子"></a>6.<code>themes</code>中的<code>config.yml</code> 例子</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Header</span><br><span class="line"></span><br><span class="line">menu:</span><br><span class="line">  主页: &#x2F;</span><br><span class="line"></span><br><span class="line"># SubNav</span><br><span class="line">subnav:</span><br><span class="line">  github: &quot;https:&#x2F;&#x2F;github.com&#x2F;ghzjtian&quot;</span><br><span class="line">  #weibo: &quot;#&quot;</span><br><span class="line">  #rss: &quot;#&quot;</span><br><span class="line">  #zhihu: &quot;#&quot;</span><br><span class="line">  qq: &quot;2941249122&quot;</span><br><span class="line">  #weixin: &quot;#&quot;</span><br><span class="line">  #jianshu: &quot;#&quot;</span><br><span class="line">  #douban: &quot;#&quot;</span><br><span class="line">  #segmentfault: &quot;#&quot;</span><br><span class="line">  #bilibili: &quot;#&quot;</span><br><span class="line">  #acfun: &quot;#&quot;</span><br><span class="line">  mail: &quot;mailto:wyzjtian@163.com&quot;</span><br><span class="line">  #facebook: &quot;#&quot;</span><br><span class="line">  #google: &quot;#&quot;</span><br><span class="line">  #twitter: &quot;#&quot;</span><br><span class="line">  #linkedin: &quot;#&quot;</span><br><span class="line"></span><br><span class="line">rss: &#x2F;atom.xml</span><br><span class="line"></span><br><span class="line"># 是否需要修改 root 路径</span><br><span class="line"># 如果您的网站存放在子目录中，例如 http:&#x2F;&#x2F;yoursite.com&#x2F;blog，</span><br><span class="line"># 请将您的 url 设为 http:&#x2F;&#x2F;yoursite.com&#x2F;blog 并把 root 设为 &#x2F;blog&#x2F;。</span><br><span class="line">root: &#x2F;</span><br><span class="line"></span><br><span class="line"># Content</span><br><span class="line"></span><br><span class="line"># 文章太长，截断按钮文字</span><br><span class="line">excerpt_link: more</span><br><span class="line"># 文章卡片右下角常驻链接，不需要请设置为false</span><br><span class="line">show_all_link: &#39;展开全文&#39;</span><br><span class="line"># 数学公式</span><br><span class="line">mathjax: false</span><br><span class="line"># 是否在新窗口打开链接</span><br><span class="line">open_in_new: false</span><br><span class="line"></span><br><span class="line"># 打赏</span><br><span class="line"># 打赏type设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏</span><br><span class="line">reward_type: 2</span><br><span class="line"># 打赏wording</span><br><span class="line">reward_wording: &#39;谢谢你的奖赏&#39;</span><br><span class="line"># 支付宝二维码图片地址，跟你设置头像的方式一样。比如：&#x2F;assets&#x2F;img&#x2F;alipay.jpg</span><br><span class="line">alipay: &#x2F;assets&#x2F;imgs&#x2F;alipay.png</span><br><span class="line"># 微信二维码图片地址</span><br><span class="line">weixin: &#x2F;assets&#x2F;imgs&#x2F;wechat.png</span><br><span class="line"></span><br><span class="line"># 目录</span><br><span class="line"># 目录设定：0-不显示目录； 1-文章对应的md文件里有toc:true属性，才有目录； 2-所有文章均显示目录</span><br><span class="line">toc: 1</span><br><span class="line"># 根据自己的习惯来设置，如果你的目录标题习惯有标号，置为true即可隐藏hexo重复的序号；否则置为false</span><br><span class="line">toc_hide_index: true</span><br><span class="line"># 目录为空时的提示</span><br><span class="line">toc_empty_wording: &#39;目录，不存在的…&#39;</span><br><span class="line"></span><br><span class="line"># 是否有快速回到顶部的按钮</span><br><span class="line">top: true</span><br><span class="line"></span><br><span class="line"># Miscellaneous</span><br><span class="line">baidu_analytics: &#39;&#39;</span><br><span class="line">google_analytics: &#39;&#39;</span><br><span class="line">favicon: &#x2F;favicon.png</span><br><span class="line"></span><br><span class="line">#你的头像url</span><br><span class="line">avatar: &#x2F;assets&#x2F;imgs&#x2F;gz.jpeg</span><br><span class="line"></span><br><span class="line">#是否开启分享</span><br><span class="line">share_jia: true</span><br><span class="line"></span><br><span class="line">#评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus；5、Gitment</span><br><span class="line">#不需要使用某项，直接设置值为false，或注释掉</span><br><span class="line">#具体请参考wiki：https:&#x2F;&#x2F;github.com&#x2F;litten&#x2F;hexo-theme-yilia&#x2F;wiki&#x2F;</span><br><span class="line"></span><br><span class="line">#1、多说</span><br><span class="line">duoshuo: false</span><br><span class="line"></span><br><span class="line">#2、网易云跟帖</span><br><span class="line">wangyiyun: false</span><br><span class="line"></span><br><span class="line">#3、畅言</span><br><span class="line">changyan_appid: false</span><br><span class="line">changyan_conf: false</span><br><span class="line"></span><br><span class="line">#4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的</span><br><span class="line">disqus: false</span><br><span class="line"></span><br><span class="line">#5、Gitment</span><br><span class="line">gitment_owner: false      #你的 GitHub ID</span><br><span class="line">gitment_repo: &#39;&#39;          #存储评论的 repo</span><br><span class="line">gitment_oauth:</span><br><span class="line">  client_id: &#39;&#39;           #client ID</span><br><span class="line">  client_secret: &#39;&#39;       #client secret</span><br><span class="line"></span><br><span class="line"># 样式定制 - 一般不需要修改，除非有很强的定制欲望…</span><br><span class="line">style:</span><br><span class="line">  # 头像上面的背景颜色</span><br><span class="line">  header: &#39;#4d4d4d&#39;</span><br><span class="line">  # 右滑板块背景</span><br><span class="line">  slider: &#39;linear-gradient(200deg,#a0cfe4,#e8c37e)&#39;</span><br><span class="line"></span><br><span class="line"># slider的设置</span><br><span class="line">slider:</span><br><span class="line">  # 是否默认展开tags板块</span><br><span class="line">  showTags: true</span><br><span class="line"></span><br><span class="line"># 智能菜单</span><br><span class="line"># 如不需要，将该对应项置为false</span><br><span class="line"># 比如</span><br><span class="line">#smart_menu:</span><br><span class="line">#  friends: false</span><br><span class="line">smart_menu:</span><br><span class="line">  innerArchive: &#39;所有文章&#39;</span><br><span class="line">  friends: false</span><br><span class="line">  aboutme: &#39;关于我&#39;</span><br><span class="line"></span><br><span class="line">friends:</span><br><span class="line">  友情链接1: http:&#x2F;&#x2F;localhost:4000&#x2F;</span><br><span class="line">  友情链接2: http:&#x2F;&#x2F;localhost:4000&#x2F;</span><br><span class="line">  友情链接3: http:&#x2F;&#x2F;localhost:4000&#x2F;</span><br><span class="line">  友情链接4: http:&#x2F;&#x2F;localhost:4000&#x2F;</span><br><span class="line">  友情链接5: http:&#x2F;&#x2F;localhost:4000&#x2F;</span><br><span class="line">  友情链接6: http:&#x2F;&#x2F;localhost:4000&#x2F;</span><br><span class="line"></span><br><span class="line">aboutme: 毕业于华师，工作在广州&lt;br&gt;&lt;br&gt;勤勤恳恳搬砖，筑起自己天地</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="4-GitBook-遇到的相关的问题-1"><a href="#4-GitBook-遇到的相关的问题-1" class="headerlink" title="4.GitBook 遇到的相关的问题"></a>4.GitBook 遇到的相关的问题<a name="gitbook_issues"/></h2><h4 id="1-问题一"><a href="#1-问题一" class="headerlink" title="1.问题一:"></a>1.问题一:</h4><blockquote>
<p>这两天想用GitBook写一点东西，突然发现导出的html的导航条不能点击(点击没反应)，如:</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/2079545-69facfc3baec7fac.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Snip20170829_2.png"></p>
<p>我的配置是这样的，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ GitBook --version</span><br><span class="line">CLI version: 2.3.2</span><br><span class="line">GitBook version: 3.2.3</span><br></pre></td></tr></table></figure>

<ul>
<li><p>解决方法:<br>经过一番的google,发现是 <code>GitBook version</code> 的问题.<a href="https://segmentfault.com/q/1010000006051743">参考: https://segmentfault.com/q/1010000006051743</a></p>
<ul>
<li><p>1.build的时候指定版本2.6.7，就可以的了: <code>$ gitbook build --gitbook=2.6.7</code></p>
</li>
<li><p>2.也可以在 <code>book.json</code> 中指明要编译的GitBook的版本: <code>&quot;gitbook&quot;: &quot;2.6.7&quot;,</code></p>
</li>
</ul>
</li>
</ul>
<hr>
<h4 id="2-问题二"><a href="#2-问题二" class="headerlink" title="2.问题二:"></a>2.问题二:</h4><blockquote>
<p>在指明了GitBook的version后，编译 <code>$ gitbook build</code> 时又发现了另外的一个问题，出错: <code>&quot;Cannot find module &#39;internal/fs&#39;&quot;</code></p>
</blockquote>
<ul>
<li>解决方法<br><a href="https://github.com/npm/npm/issues/14232">https://github.com/npm/npm/issues/14232</a><br>是node 的问题，把node 切换回旧的就行了,node 切回前:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">v8.4.0</span><br><span class="line">$ npm -v</span><br><span class="line">5.3.0</span><br></pre></td></tr></table></figure>

<p>切回后:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">v6.11.2</span><br><span class="line">$ npm -v</span><br><span class="line">3.10.10</span><br></pre></td></tr></table></figure>

<ul>
<li><p>node切换的步骤:</p>
</li>
<li><p>1.下载 <code>n</code>: <code>$ npm install -g n</code></p>
</li>
<li><p>2.下载node 的LTS版本,这样就可以了:</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ sudo n lts</span><br><span class="line"></span><br><span class="line">     install : node-v6.11.2</span><br><span class="line">       mkdir : &#x2F;usr&#x2F;local&#x2F;n&#x2F;versions&#x2F;node&#x2F;6.11.2</span><br><span class="line">       fetch : https:&#x2F;&#x2F;nodejs.org&#x2F;dist&#x2F;v6.11.2&#x2F;node-v6.11.2-darwin-x64.tar.gz</span><br><span class="line">######################################################################## 100.0%</span><br><span class="line">   installed : v6.11.2</span><br></pre></td></tr></table></figure>

<ul>
<li>这样就可以用version 2.6.7进行愉快地导出html了:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ gitbook build</span><br><span class="line">(node:8140) fs: re-evaluating native module sources is not supported. If you are using the graceful-fs module, please update it to a more recent version.</span><br><span class="line">(node:8140) fs: re-evaluating native module sources is not supported. If you are using the graceful-fs module, please update it to a more recent version.</span><br><span class="line">info: loading book configuration....</span><br><span class="line">warn: gitbook version specified in your book.json might be too strict for future patches, &#39;2.x.x&#39; is more adequate </span><br><span class="line">info: OK </span><br><span class="line">info: load plugin gitbook-plugin-tbfed-pagefooter ....OK </span><br><span class="line">info: load plugin gitbook-plugin-splitter ....OK </span><br><span class="line">info: load plugin gitbook-plugin-anchor-navigation-ex ....OK </span><br><span class="line">info: load plugin gitbook-plugin-highlight ....OK </span><br><span class="line">info: load plugin gitbook-plugin-search ....OK </span><br><span class="line">info: load plugin gitbook-plugin-sharing ....OK </span><br><span class="line">info: load plugin gitbook-plugin-fontsettings ....OK </span><br><span class="line">info: &gt;&gt; 7 plugins loaded </span><br><span class="line">info: start generation with website generator </span><br><span class="line">info: clean website generator</span><br><span class="line">info: OK </span><br><span class="line">info: generation is finished </span><br><span class="line"></span><br><span class="line">Done, without error</span><br></pre></td></tr></table></figure>

<h4 id="3-问题三"><a href="#3-问题三" class="headerlink" title="3.问题三"></a>3.问题三</h4><ul>
<li>1.出现 <code>Cannot find module &#39;internal/util/types&#39;</code> 错误<ul>
<li>1.怀疑是 Mac 升级了相关的 <code>node,npm</code> 等等引起的错误(gitbook v2.6.7 支持的 node 的版本太低,现在的 Mac 的相关软件的版本比较高)，将不做处理，怕引起相关软件的不兼容.</li>
<li>2.目前 Mac 的软件的版本为:</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MB-Pro-2:ge_li_bo_pei_xun tianzeng$ node -v</span><br><span class="line">v10.3.0</span><br><span class="line">MB-Pro-2:ge_li_bo_pei_xun tianzeng$ npm -v</span><br><span class="line">6.1.0</span><br></pre></td></tr></table></figure>


<hr>
<h2 id="5-自定义域名指向-1"><a href="#5-自定义域名指向-1" class="headerlink" title="5.自定义域名指向"></a>5.自定义域名指向<a name="custom_domain"/></h2><h4 id="方法-1"><a href="#方法-1" class="headerlink" title="方法 1:"></a>方法 1:</h4><ul>
<li>1.在 Github 的仓库 <code>Settings</code> 中设置</li>
</ul>
<h4 id="方法-2"><a href="#方法-2" class="headerlink" title="方法 2:"></a>方法 2:</h4><ul>
<li>1.在 本地仓库的 <code>相应的主题/source</code> 下添加 <code>CNAME</code> 文件，并在里面放上想要的 <code>domain</code> ,如:<img src="/assets/imgs/blog/Snip20181108_3.png" width="80%" height="80%">





</li>
</ul>
]]></content>
      <categories>
        <category>blog</category>
      </categories>
      <tags>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>DB_Browser_for_SQLite的使用方法</title>
    <url>/2018/07/29/DB_Browser_for_SQLite%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/</url>
    <content><![CDATA[<h1 id="DB-Browser-for-SQLite的使用方法"><a href="#DB-Browser-for-SQLite的使用方法" class="headerlink" title="DB_Browser_for_SQLite的使用方法"></a>DB_Browser_for_SQLite的使用方法</h1><blockquote>
<p>在网上看到有个开源的查看 SQLite 中数据的软件 DB_Browser_for_SQLite ，所以下载来看看,没想到下载下来，一打开就 Crash.特意在这里记录下解决的方法</p>
</blockquote>
<a id="more"></a>

<h3 id="1-相关机器及软件的配置"><a href="#1-相关机器及软件的配置" class="headerlink" title="1.相关机器及软件的配置"></a>1.相关机器及软件的配置</h3><img src="/assets/imgs/Mac/ScreenShot_2018-07-29_23.08.14.png">

<img src="/assets/imgs/Mac/Snip20180729_1.png">


<h3 id="2-解决的步骤"><a href="#2-解决的步骤" class="headerlink" title="2.解决的步骤"></a>2.解决的步骤</h3><ul>
<li><p>1.在官网下载最新的 Release 版本(Version 3.10.1 released)</p>
<ul>
<li><a href="https://github.com/sqlitebrowser/sqlitebrowser">1.GitHub 源码</a></li>
<li><a href="https://sqlitebrowser.org/">2.官网(MacOS 上会闪退，暂时运行不了)</a></li>
</ul>
</li>
<li><p>2.下载下来，安装好后，一打开就 Crash.</p>
</li>
</ul>
<img src="/assets/imgs/Mac/ScreenShot_2018-07-29_23.07.56.png">

<img src="/assets/imgs/Mac/ScreenShot_2018-07-29_23.20.31.png">

<ul>
<li><a href="https://github.com/sqlitebrowser/sqlitebrowser/issues/1311">3.在 GitHub 中看到好像是 APP 联网的问题</a><ul>
<li>1.遂尝试把 Mac 的网络断掉，然后再打开，可以了!!!</li>
<li>2.然后再打开 APP，然后打开 <code>偏好设置</code>,把里面的 <code>自动更新</code>取消勾选，就 OK ,联网再打开也没事.</li>
</ul>
</li>
</ul>
<img src="/assets/imgs/Mac/Snip20180729_2.png">

<img src="/assets/imgs/Mac/Snip20180729_3.png">

<img src="/assets/imgs/Mac/Snip20180729_5.png">

]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Debian中Nginx的ssl配置</title>
    <url>/2018/04/12/Debian%E4%B8%ADNginx%E7%9A%84ssl%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<ul>
<li>Debian 中 Nginx 的 ssl 配置</li>
<li>1.服务器的配置</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Linux glb-gz-debian 3.16.0-4-amd64 #1 SMP Debian 3.16.43-2+deb8u5 (2017-09-19) x86_64</span><br><span class="line">nginx&#x2F;1.6.2</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.参考:<ul>
<li>1.<a href="https://www.digitalocean.com/community/tutorials/how-to-create-a-self-signed-ssl-certificate-for-nginx-on-debian-8">How To Create a Self-Signed SSL Certificate for Nginx on Debian 8</a></li>
</ul>
</li>
</ul>
<a id="more"></a>


<h3 id="1-GLB-公司的服务器-参考了-‘参考1’-后，已经可以外部-HTTPS-访问到网站-用自签名的-key"><a href="#1-GLB-公司的服务器-参考了-‘参考1’-后，已经可以外部-HTTPS-访问到网站-用自签名的-key" class="headerlink" title="1.GLB 公司的服务器,参考了 ‘参考1’ 后，已经可以外部 HTTPS 访问到网站(用自签名的 key )."></a>1.GLB 公司的服务器,参考了 ‘参考1’ 后，已经可以外部 HTTPS 访问到网站(用自签名的 key ).</h3><h3 id="2-用-腾讯云的-key-腾讯云提供的-ATS-页面检测"><a href="#2-用-腾讯云的-key-腾讯云提供的-ATS-页面检测" class="headerlink" title="2.用 腾讯云的 key,腾讯云提供的 ATS 页面检测."></a>2.用 腾讯云的 key,<a href="https://cloud.tencent.com/product/ssl#userDefined10">腾讯云提供的 ATS 页面检测</a>.</h3><h3 id="3-china-Server-集成-腾讯云-的-SSL-证书"><a href="#3-china-Server-集成-腾讯云-的-SSL-证书" class="headerlink" title="3.china Server 集成 腾讯云 的 SSL 证书."></a>3.china Server 集成 腾讯云 的 SSL 证书.</h3><ul>
<li>1.申请一个 ‘域名型免费版(DV)’ 证书</li>
<li>2.填写的相关的内容 -&gt; 文件验证 -&gt; 按照要求，在指定的位置写入文件</li>
<li>3.证书审核通过，然后就开始<a href="https://cloud.tencent.com/document/product/400/4143">证书的部署</a></li>
</ul>
<ul>
<li><p>4.把证书(.key 和 .crt)放到 <code>/etc/nginx/china.tianlovezhen.site_ssl_conf</code> 目录里面.</p>
</li>
<li><ol start="5">
<li>在 <code>/etc/nginx/sites-available/default</code> 中，增加了以下的代码:</li>
</ol>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">listen 443;</span><br><span class="line">    server_name china.tianlovezhen.site; #Bind the host</span><br><span class="line">    ssl on;</span><br><span class="line">    ssl_certificate &#x2F;etc&#x2F;nginx&#x2F;china.tianlovezhen.site_ssl_conf&#x2F;1_china.tianlovezhen.site_bundle.crt;</span><br><span class="line">    ssl_certificate_key &#x2F;etc&#x2F;nginx&#x2F;china.tianlovezhen.site_ssl_conf&#x2F;2_china.tianlovezhen.site.key;</span><br><span class="line">    ssl_session_timeout 5m;</span><br><span class="line">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #Use this Protocols Setting</span><br><span class="line">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;#Use this Utils Setting</span><br><span class="line">    ssl_prefer_server_ciphers on;</span><br><span class="line">    </span><br></pre></td></tr></table></figure>

<ul>
<li><p>6.成功在 nginx 中加入 HTTPS  ！！！相关的图片:<br><img src="/assets/imgs/web/Snip20180427_1.png"><br><img src="/assets/imgs/web/Snip20180427_3.png"></p>
</li>
<li><p>7.(请看👇下面的 8 ,这个 7 有错误 !!!)<code>https</code> 访问正常，但 <code>http</code> 访问出现错误 <code>400 The plain HTTP request was sent to HTTPS port</code></p>
<blockquote>
<p><a href="https://www.centos.bz/2018/01/nginx%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3the-plain-http-request-was-sent-to-https-port%E9%94%99%E8%AF%AF/">解决方法:</a>将上面配置文中的“ ssl on ; ” 注释掉或者修改成 “ ssl off ;”，这样，Nginx就可以同时处理HTTP请求和HTTPS请求了。<br>发现 这样做的话， https 请求不能正常返回值.</p>
</blockquote>
</li>
<li><p>8.HTTP 请求会转为 HTTPS 请求.</p>
<ul>
<li>1.参考<a href="https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-debian-8">How To Secure Nginx with Let’s Encrypt on Debian 8</a> </li>
<li>2.下面是我的配置:<ul>
<li>1.增加 <code>/etc/nginx/snippets/ssl-example.com.conf</code> 文件,内容为:</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ssl_certificate &#x2F;etc&#x2F;nginx&#x2F;china.tianlovezhen.site_ssl_conf&#x2F;1_china.tianlovezhen.site_bundle.crt;</span><br><span class="line">ssl_certificate_key &#x2F;etc&#x2F;nginx&#x2F;china.tianlovezhen.site_ssl_conf&#x2F;2_china.tianlovezhen.site.key;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.增加 <code>/etc/nginx/snippets/ssl-params.conf</code> 文件，内容为:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># from https:&#x2F;&#x2F;cipherli.st&#x2F;</span><br><span class="line"># and https:&#x2F;&#x2F;raymii.org&#x2F;s&#x2F;tutorials&#x2F;Strong_SSL_Security_On_nginx.html</span><br><span class="line"></span><br><span class="line">ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line">ssl_prefer_server_ciphers on;</span><br><span class="line">ssl_ciphers &quot;EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH&quot;;</span><br><span class="line">ssl_ecdh_curve secp384r1;</span><br><span class="line">ssl_session_cache shared:SSL:10m;</span><br><span class="line">ssl_session_tickets off;</span><br><span class="line">ssl_stapling on;</span><br><span class="line">ssl_stapling_verify on;</span><br><span class="line">resolver 8.8.8.8 8.8.4.4 valid&#x3D;300s;</span><br><span class="line">resolver_timeout 5s;</span><br><span class="line"># Disable preloading HSTS for now.  You can use the commented out header line that includes</span><br><span class="line"># the &quot;preload&quot; directive if you understand the implications.</span><br><span class="line">#add_header Strict-Transport-Security &quot;max-age&#x3D;63072000; includeSubdomains; preload&quot;;</span><br><span class="line">add_header Strict-Transport-Security &quot;max-age&#x3D;63072000; includeSubdomains&quot;;</span><br><span class="line">add_header X-Frame-Options DENY;</span><br><span class="line">add_header X-Content-Type-Options nosniff;</span><br><span class="line"></span><br><span class="line">#ssl_dhparam &#x2F;etc&#x2F;ssl&#x2F;certs&#x2F;dhparam.pem;</span><br></pre></td></tr></table></figure>

<ul>
<li>3.修改 <code>/etc/nginx/sites-available/default</code> 文件，把前面的 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">	listen 80 default_server;</span><br><span class="line">	listen [::]:80 default_server;</span><br><span class="line">	server_name _</span><br><span class="line">	# SSL configuration</span><br><span class="line">	#</span><br><span class="line">	#listen 443 ssl default_server;</span><br><span class="line">	#listen [::]:443 ssl default_server;</span><br><span class="line">	</span><br><span class="line">	#</span><br><span class="line">	# Note: You should disable gzip for SSL traffic.</span><br><span class="line">	# See: https:&#x2F;&#x2F;bugs.debian.org&#x2F;773332</span><br><span class="line">   ...</span><br></pre></td></tr></table></figure>

<p>修改为:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">	listen 80 default_server;</span><br><span class="line">	listen [::]:80 default_server;</span><br><span class="line">	server_name  china.tianlovezhen.site; #Bind the host</span><br><span class="line">        return 301 https:&#x2F;&#x2F;$server_name$request_uri;</span><br><span class="line">&#125;</span><br><span class="line">server &#123;</span><br><span class="line">	# SSL configuration</span><br><span class="line">	#</span><br><span class="line">	 listen 443 ssl default_server;</span><br><span class="line">	 listen [::]:443 ssl default_server;</span><br><span class="line">	include snippets&#x2F;ssl-example.com.conf;</span><br><span class="line">	include snippets&#x2F;ssl-params.conf;</span><br><span class="line">	#</span><br><span class="line">	# Note: You should disable gzip for SSL traffic.</span><br><span class="line">	# See: https:&#x2F;&#x2F;bugs.debian.org&#x2F;773332</span><br><span class="line">	...</span><br></pre></td></tr></table></figure>

<ul>
<li>3.如果需要同时支持 HTTP 和 HTTPS 的访问，只需把 <code>default</code> 文件改为:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">	listen 80 default_server;</span><br><span class="line">	listen [::]:80 default_server;</span><br><span class="line">	#	server_name japan.tianlovezhen.site; #Bind the host</span><br><span class="line">        #return 301 https:&#x2F;&#x2F;$server_name$request_uri;</span><br><span class="line">#&#125;</span><br><span class="line">#server &#123;</span><br><span class="line">	# SSL configuration</span><br><span class="line">	#</span><br><span class="line">	 listen 443 ssl default_server;</span><br><span class="line">	 listen [::]:443 ssl default_server;</span><br><span class="line">server_name japan.tianlovezhen.site; #Bind the host</span><br><span class="line">	include snippets&#x2F;ssl-example.com.conf;</span><br><span class="line">	include snippets&#x2F;ssl-params.conf;</span><br><span class="line">	...</span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Excel 导入 Json 文件数据</title>
    <url>/2020/02/23/Excel-learn/</url>
    <content><![CDATA[<blockquote>
<p>用 Excel 导入 Json 文件的数据， 并把 Key 和 value 的数据分成不同的列去显示.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-从-JSON-文件中导入数据到-Excel-Mac-excel-2016"><a href="#1-从-JSON-文件中导入数据到-Excel-Mac-excel-2016" class="headerlink" title="1.从 JSON 文件中导入数据到 Excel(Mac excel 2016)"></a>1.从 JSON 文件中导入数据到 Excel(Mac excel 2016)</h2><h2 id="2-从-Excel-中导出数据到-JSON-文件"><a href="#2-从-Excel-中导出数据到-JSON-文件" class="headerlink" title="2.从 Excel 中导出数据到 JSON 文件."></a>2.从 Excel 中导出数据到 JSON 文件.</h2><hr>
<hr>
<hr>
<h2 id="1-从-JSON-文件中导入数据到-Excel-Mac-excel-2016-1"><a href="#1-从-JSON-文件中导入数据到-Excel-Mac-excel-2016-1" class="headerlink" title="1.从 JSON 文件中导入数据到 Excel(Mac excel 2016)"></a>1.从 JSON 文件中导入数据到 Excel(Mac excel 2016)</h2><h4 id="1-目标"><a href="#1-目标" class="headerlink" title="1.目标:"></a>1.目标:</h4><ul>
<li>1.源 json 文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;product.rlm1&quot;: &quot;RLM 1&quot;,</span><br><span class="line">  &quot;product.zeroturn&quot;: &quot;Zeroturn&quot;,</span><br><span class="line">  &quot;product.battery&quot;: &quot;Batteries&quot;,</span><br><span class="line">  &quot;product.rlm2&quot;: &quot;RLM 2&quot;,</span><br><span class="line"></span><br><span class="line">  &quot;search&quot;: &quot;Search&quot;,</span><br><span class="line">  &quot;set&quot;: &quot;Set&quot;,</span><br><span class="line">  &quot;update-now&quot;: &quot;Update now&quot;,</span><br><span class="line">  &quot;enable&quot;: &quot;Enable&quot;,</span><br><span class="line">  &quot;disable&quot;: &quot;Disable&quot;,</span><br><span class="line">  &quot;length-unit-m&quot;: &quot;m&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.导入 json 数据后,目标 Excel 文件的样子(Key 跟 value 分开不同的列)</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_4.png"></p>
<h4 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤:"></a>2.步骤:</h4><ul>
<li>1.在 Excel 中选择 Data -&gt; Get External Data -&gt; Import Text File</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_2.png"><br><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_5.png"></p>
<ul>
<li>2.选择 Delimited</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_6.png"></p>
<ul>
<li>3.根据自己的需求去选择不同的配置，我这里选择了 Common,Space, 自添加了 colon :.</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Office/screenshot_2020-02-24_at_14.52.54.png"></p>
<ul>
<li>4.选择 Do not import column(Skip)</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Office/screenshot_2020-02-24_at_14.53.09.png"></p>
<ul>
<li>5.选择 new sheet, 及可以在新的 Tab 中看到 json 的 key -&gt; value 已经成功被导入.</li>
</ul>
<h4 id="3-注意："><a href="#3-注意：" class="headerlink" title="3.注意："></a>3.注意：</h4><ul>
<li><p>1.JSON 文件的 value 值中不要有 双引号(“”), 否则 Excel 中解析出来会错误.<br><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_22.png"><br><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_21.png"></p>
</li>
<li><p>2.如果有双引号，请把它变为单引号 (‘’), 这样输出的 Excel 文件就会正常了.</p>
</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_23.png"><br><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_24.png"></p>
<hr>
<h2 id="2-从-Excel-中导出数据到-JSON-文件-1"><a href="#2-从-Excel-中导出数据到-JSON-文件-1" class="headerlink" title="2.从 Excel 中导出数据到 JSON 文件."></a>2.从 Excel 中导出数据到 JSON 文件.</h2><ul>
<li>1.参考: <a href="http://www.convertcsv.com/csv-to-json.htm"> CSV -&gt; JSON </a></li>
</ul>
<h4 id="1-把-xlsx-格式转换为-CSV-格式"><a href="#1-把-xlsx-格式转换为-CSV-格式" class="headerlink" title="1.把 xlsx 格式转换为 CSV 格式"></a>1.把 xlsx 格式转换为 CSV 格式</h4><ul>
<li>1.File -&gt; <code>Save as ...</code> -&gt; 选择 CSV 格式，然后保存.</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_18.png"><br><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_19.png"></p>
<ul>
<li><p>2.进入网站 <a href="http://www.convertcsv.com/csv-to-json.htm">http://www.convertcsv.com/csv-to-json.htm</a> , 在 Step1 处选择 刚刚生成的 CSV 文件.</p>
</li>
<li><p>3.Step2:选择 <code>Skip # of lines:0</code>, Tab 为选中的状态.</p>
</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_29.png"></p>
<ul>
<li>4.Step3 的选择如图所示, Step4 输入自己的 JSON 模板，然后点击 <code>Convert CSV to Json via template</code></li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_30.png"><br><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_31.png"></p>
<ul>
<li>5.Step5,直接点击 <code>Download result</code> 即可，无需做其它的操作.</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_32.png"></p>
<ul>
<li>6.因为我们生成的 json 文件会包括空字符键值对: <code>&quot;&quot;:&quot;&quot;</code>, 所以我们把它全部替换成空格即可.</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_33.png"></p>
<ul>
<li>7.用 JSON 对比工具，可以看到生成的文件与目标文件现在完全一致了.</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Office/Snip20200224_34.png"></p>
]]></content>
      <categories>
        <category>Office</category>
      </categories>
      <tags>
        <tag>Office</tag>
      </tags>
  </entry>
  <entry>
    <title>GitLab 的搭建</title>
    <url>/2017/12/19/GitLab%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="GitLab-服务器的搭建"><a href="#GitLab-服务器的搭建" class="headerlink" title="GitLab 服务器的搭建"></a>GitLab 服务器的搭建</h1><ul>
<li>记录下公司的 GitLab 服务器的搭建过程。</li>
</ul>
<a id="more"></a>

<h2 id="1-GitLab-参考"><a href="#1-GitLab-参考" class="headerlink" title="1.GitLab 参考"></a><a href="#gitlab_references">1.GitLab 参考</a></h2><h2 id="2-GitLab-存储相关"><a href="#2-GitLab-存储相关" class="headerlink" title="2.GitLab 存储相关"></a><a href="#gitlab_store">2.GitLab 存储相关</a></h2><h2 id="3-GitLab-配置"><a href="#3-GitLab-配置" class="headerlink" title="3.GitLab 配置"></a><a href="#gitlab_config">3.GitLab 配置</a></h2><h2 id="4-GitLab-错误的解决"><a href="#4-GitLab-错误的解决" class="headerlink" title="4.GitLab 错误的解决"></a><a href="#gitlab_issues">4.GitLab 错误的解决</a></h2><hr>
<h2 id="1-GitLab-参考-1"><a href="#1-GitLab-参考-1" class="headerlink" title="1.GitLab 参考"></a>1.GitLab 参考<a name="gitlab_references"/></h2><ul>
<li>参考1: <a href="https://about.gitlab.com/installation/#debian">https://about.gitlab.com/installation/#debian</a></li>
<li>参考2: <a href="https://github.com/gitlabhq">https://github.com/gitlabhq</a></li>
<li>3: <a href="http://www.jianshu.com/p/b26affeffc18">http://www.jianshu.com/p/b26affeffc18</a></li>
<li>4.快速安装 GitLab 并汉化:  <a href="http://www.jianshu.com/p/7a0d6917e009">http://www.jianshu.com/p/7a0d6917e009</a></li>
</ul>
<hr>
<h2 id="2-GitLab-存储相关-1"><a href="#2-GitLab-存储相关-1" class="headerlink" title="2.GitLab 存储相关"></a>2.GitLab 存储相关<a name="gitlab_store"/></h2><ul>
<li>1.项目文件的位置<ul>
<li><a href="https://docs.gitlab.com/ee/administration/repository_storage_paths.html">参考1.Repository storage paths</a></li>
</ul>
</li>
<li>2.项目的路径在 <code>/var/opt/gitlab/git-data</code> 中(项目-&gt;个人-&gt;个人的项目).</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user@glb:&#x2F;home&#x2F;tian# cd &#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;git-data</span><br><span class="line">user@glb:&#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;git-data# ls</span><br><span class="line">repositories</span><br><span class="line">user@glb:&#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;git-data# cd repositories</span><br><span class="line">user@glb:&#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;git-data&#x2F;repositories# ls</span><br><span class="line">Kyrie  Tian_test  Tim  yonghui.ye</span><br><span class="line">user@glb:&#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;git-data&#x2F;repositories# cd Tim </span><br><span class="line">user@glb:&#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;git-data&#x2F;repositories&#x2F;Tim# ls</span><br><span class="line">Android_GreenGuide.git	       GoogleMapDev.git</span><br><span class="line">Android_GreenGuide.wiki.git    GoogleMapDev.wiki.git</span><br><span class="line">Cramer.git		       GreenGuide_Translate.git</span><br><span class="line">Cramer.wiki.git		       GreenGuide_Translate.wiki.git</span><br><span class="line">EmployeePackage.git	       InternalProject.git</span><br><span class="line">EmployeePackage.wiki.git       InternalProject.wiki.git</span><br><span class="line">GLB_BLE_Protocol.git	       newProject.git</span><br><span class="line">GLB_BLE_Protocol.wiki.git      newProject.wiki.git</span><br><span class="line">GLB_BLE_TestApp2.git	       PrivateProject.git</span><br><span class="line">GLB_BLE_TestApp2.wiki.git      PrivateProject.wiki.git</span><br><span class="line">GLB_BLE_TEST_APP.git	       TestProject.git</span><br><span class="line">GLB_BLE_TEST_APP_iOS.git       TestProject.wiki.git</span><br><span class="line">GLB_BLE_TEST_APP_iOS.wiki.git  ZTR_iOS.git</span><br><span class="line">GLB_BLE_TEST_APP.wiki.git      ZTR_iOS.wiki.git</span><br><span class="line">user@glb:&#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;git-data&#x2F;repositories&#x2F;Tim# </span><br></pre></td></tr></table></figure>

<ul>
<li>3.但是在项目中保存的文件应该是经过编译了的，实际的项目的文件找不到.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user@glb:&#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;git-data&#x2F;repositories&#x2F;Tim# cd Cramer.git</span><br><span class="line">user@glb:&#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;git-data&#x2F;repositories&#x2F;Tim&#x2F;Cramer.git# ls</span><br><span class="line">config	description  HEAD  hooks  info	objects  refs</span><br><span class="line">user@glb:&#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;git-data&#x2F;repositories&#x2F;Tim&#x2F;Cramer.git# cd objects</span><br><span class="line">user@glb:&#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;git-data&#x2F;repositories&#x2F;Tim&#x2F;Cramer.git&#x2F;objects# ls</span><br><span class="line">01  0c	17  24	34  3f	4d  52	76  80	86  9e	b1  c3	cc  e0	info</span><br><span class="line">02  0d	1a  2c	39  45	4e  57	79  81	8a  a0	b9  c8	ce  e2	pack</span><br><span class="line">08  0e	1b  2d	3b  48	4f  6c	7b  83	8c  a1	bb  c9	d0  e7</span><br><span class="line">09  0f	1c  2e	3c  4b	50  72	7e  84	9b  a6	bd  ca	d1  ec</span><br><span class="line">0b  13	1f  2f	3e  4c	51  75	7f  85	9d  aa	c2  cb	d4  fa</span><br><span class="line">user@glb:&#x2F;var&#x2F;opt&#x2F;gitlab&#x2F;git-data&#x2F;repositories&#x2F;Tim&#x2F;Cramer.git&#x2F;objects# du -h --max-depth&#x3D;1</span><br><span class="line">53M	.&#x2F;pack</span><br><span class="line">8.0K	.&#x2F;39</span><br><span class="line">8.0K	.&#x2F;57</span><br><span class="line">20K	.&#x2F;75</span><br><span class="line">8.0K	.&#x2F;2c</span><br><span class="line">8.0K	.&#x2F;3f</span><br><span class="line">12K	.&#x2F;ca</span><br><span class="line">8.0K	.&#x2F;0b</span><br><span class="line">8.0K	.&#x2F;3c</span><br><span class="line">16K	.&#x2F;01</span><br><span class="line">16K	.&#x2F;79</span><br><span class="line">8.0K	.&#x2F;34</span><br><span class="line">8.0K	.&#x2F;d0</span><br><span class="line">8.0K	.&#x2F;b9</span><br><span class="line">8.0K	.&#x2F;7e</span><br><span class="line">8.0K	.&#x2F;76</span><br><span class="line">8.0K	.&#x2F;17</span><br><span class="line">8.0K	.&#x2F;4f</span><br><span class="line">8.0K	.&#x2F;ec</span><br><span class="line">8.0K	.&#x2F;45</span><br><span class="line">8.0K	.&#x2F;80</span><br><span class="line">8.0K	.&#x2F;e7</span><br><span class="line">8.0K	.&#x2F;fa</span><br><span class="line">8.0K	.&#x2F;09</span><br><span class="line">8.0K	.&#x2F;7f</span><br><span class="line">8.0K	.&#x2F;a1</span><br><span class="line">8.0K	.&#x2F;86</span><br><span class="line">8.0K	.&#x2F;1f</span><br><span class="line">8.0K	.&#x2F;4d</span><br><span class="line">8.0K	.&#x2F;7b</span><br><span class="line">8.0K	.&#x2F;9d</span><br><span class="line">8.0K	.&#x2F;bd</span><br><span class="line">8.0K	.&#x2F;c9</span><br><span class="line">8.0K	.&#x2F;1b</span><br><span class="line">8.0K	.&#x2F;a0</span><br><span class="line">8.0K	.&#x2F;d1</span><br><span class="line">16K	.&#x2F;e0</span><br><span class="line">8.0K	.&#x2F;24</span><br><span class="line">8.0K	.&#x2F;cc</span><br><span class="line">8.0K	.&#x2F;1c</span><br><span class="line">8.0K	.&#x2F;0e</span><br><span class="line">16K	.&#x2F;0f</span><br><span class="line">12K	.&#x2F;cb</span><br><span class="line">8.0K	.&#x2F;13</span><br><span class="line">8.0K	.&#x2F;52</span><br><span class="line">8.0K	.&#x2F;08</span><br><span class="line">8.0K	.&#x2F;4c</span><br><span class="line">8.0K	.&#x2F;02</span><br><span class="line">20K	.&#x2F;8c</span><br><span class="line">12K	.&#x2F;9e</span><br><span class="line">8.0K	.&#x2F;a6</span><br><span class="line">8.0K	.&#x2F;4e</span><br><span class="line">8.0K	.&#x2F;6c</span><br><span class="line">8.0K	.&#x2F;aa</span><br><span class="line">12K	.&#x2F;2f</span><br><span class="line">8.0K	.&#x2F;81</span><br><span class="line">8.0K	.&#x2F;3b</span><br><span class="line">8.0K	.&#x2F;84</span><br><span class="line">8.0K	.&#x2F;c2</span><br><span class="line">8.0K	.&#x2F;info</span><br><span class="line">8.0K	.&#x2F;51</span><br><span class="line">8.0K	.&#x2F;bb</span><br><span class="line">12K	.&#x2F;0c</span><br><span class="line">20K	.&#x2F;0d</span><br><span class="line">8.0K	.&#x2F;4b</span><br><span class="line">8.0K	.&#x2F;8a</span><br><span class="line">8.0K	.&#x2F;9b</span><br><span class="line">12K	.&#x2F;83</span><br><span class="line">12K	.&#x2F;b1</span><br><span class="line">12K	.&#x2F;3e</span><br><span class="line">8.0K	.&#x2F;c3</span><br><span class="line">12K	.&#x2F;e2</span><br><span class="line">8.0K	.&#x2F;2d</span><br><span class="line">8.0K	.&#x2F;d4</span><br><span class="line">8.0K	.&#x2F;ce</span><br><span class="line">8.0K	.&#x2F;2e</span><br><span class="line">8.0K	.&#x2F;1a</span><br><span class="line">8.0K	.&#x2F;c8</span><br><span class="line">8.0K	.&#x2F;85</span><br><span class="line">8.0K	.&#x2F;50</span><br><span class="line">12K	.&#x2F;48</span><br><span class="line">8.0K	.&#x2F;72</span><br><span class="line">54M	.</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="3-GitLab-的配置"><a href="#3-GitLab-的配置" class="headerlink" title="3.GitLab 的配置"></a>3.GitLab 的配置<a name="gitlab_config"/></h2><ul>
<li>1.GitLab 安装完成后，出现的提示信息.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">GitLab was unable to detect a valid hostname for your instance.</span><br><span class="line">Please configure a URL for your GitLab instance by setting &#96;external_url&#96;</span><br><span class="line">configuration in &#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb file.</span><br><span class="line">Then, you can start your GitLab instance by running the following command:</span><br><span class="line">  sudo gitlab-ctl reconfigure</span><br><span class="line"></span><br><span class="line">For a comprehensive list of configuration options please see the Omnibus GitLab readme</span><br><span class="line">https:&#x2F;&#x2F;gitlab.com&#x2F;gitlab-org&#x2F;omnibus-gitlab&#x2F;blob&#x2F;master&#x2F;README.md</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="4-GitLab-错误的解决-1"><a href="#4-GitLab-错误的解决-1" class="headerlink" title="4.GitLab 错误的解决"></a>4.GitLab 错误的解决<a name="gitlab_issues"/></h2><h3 id="1-出现-Whoops-GitLab-is-taking-too-much-time-to-respond-Whoops-something-went-wrong-on-our-end-错误"><a href="#1-出现-Whoops-GitLab-is-taking-too-much-time-to-respond-Whoops-something-went-wrong-on-our-end-错误" class="headerlink" title="1.出现 Whoops, GitLab is taking too much time to respond.,Whoops, something went wrong on our end. 错误:"></a>1.出现 <code>Whoops, GitLab is taking too much time to respond.</code>,<code>Whoops, something went wrong on our end.</code> 错误:</h3><img src="/assets/imgs/git/screen_shot_gitlab.png" width="50%" height="50%">
<img src="/assets/imgs/git/screen_shot_gitlab2.png" width="50%" height="50%">

<h3 id="1-1-解决方法记录"><a href="#1-1-解决方法记录" class="headerlink" title="1.1.解决方法记录:"></a>1.1.解决方法记录:</h3><ul>
<li>1.看到 <code>var</code> 目录满了，可能是这个原因:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># df -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">&#x2F;dev&#x2F;sda1       8.2G  3.1G  4.7G  40% &#x2F;</span><br><span class="line">udev             10M     0   10M   0% &#x2F;dev</span><br><span class="line">tmpfs           1.6G   49M  1.6G   4% &#x2F;run</span><br><span class="line">tmpfs           3.9G     0  3.9G   0% &#x2F;dev&#x2F;shm</span><br><span class="line">tmpfs           5.0M  4.0K  5.0M   1% &#x2F;run&#x2F;lock</span><br><span class="line">tmpfs           3.9G     0  3.9G   0% &#x2F;sys&#x2F;fs&#x2F;cgroup</span><br><span class="line">&#x2F;dev&#x2F;sda5       2.7G  2.6G     0 100% &#x2F;var</span><br><span class="line">&#x2F;dev&#x2F;sda7       360M  5.3M  332M   2% &#x2F;tmp</span><br><span class="line">&#x2F;dev&#x2F;sda8       432G  698M  409G   1% &#x2F;home</span><br><span class="line"></span><br><span class="line"># du -h --max-depth&#x3D;1 &#x2F;var</span><br><span class="line">16K	&#x2F;var&#x2F;lost+found</span><br><span class="line">4.0K	&#x2F;var&#x2F;local</span><br><span class="line">8.0K	&#x2F;var&#x2F;www</span><br><span class="line">8.0K	&#x2F;var&#x2F;tmp</span><br><span class="line">40K	&#x2F;var&#x2F;mail</span><br><span class="line">6.0M	&#x2F;var&#x2F;backups</span><br><span class="line">820K	&#x2F;var&#x2F;spool</span><br><span class="line">187M	&#x2F;var&#x2F;lib</span><br><span class="line">1.4G	&#x2F;var&#x2F;cache</span><br><span class="line">899M	&#x2F;var&#x2F;opt</span><br><span class="line">84M	&#x2F;var&#x2F;log</span><br><span class="line">2.6G	&#x2F;var</span><br></pre></td></tr></table></figure>
<ul>
<li>2.所以把 <code>var/cache</code>和 <code>var/opt</code> 目录移到 <code>home</code> 目录中,建立软链接.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ mv &#x2F;var&#x2F;cache &#x2F;home&#x2F;</span><br><span class="line">$ ln -s &#x2F;home&#x2F;cache &#x2F;var&#x2F;cache</span><br><span class="line">$ mv &#x2F;var&#x2F;opt &#x2F;home&#x2F;</span><br><span class="line">$ ln -s &#x2F;home&#x2F;opt &#x2F;var&#x2F;opt</span><br></pre></td></tr></table></figure>

<ul>
<li>3.配置 <code>/etc/gitlab/gitlab.rb</code> 文件,然后运行 <code>sudo gitlab-ctl reconfigure</code>,参考 <a href="https://docs.gitlab.com/omnibus/settings/unicorn.html">Unicorn settings</a>,<a href="https://gitlab.com/gitlab-org/gitlab-ce/issues/30095">502-Whoops, GitLab is taking too much time to respond</a><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unicorn[&#39;worker_processes&#39;] &#x3D; 3</span><br><span class="line">unicorn[&#39;worker_timeout&#39;] &#x3D; 60</span><br></pre></td></tr></table></figure></li>
<li>4.重新启动服务器，问题就解决了.(重启 gitlab 也无效 !)</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>HTML + CSS 学习记录</title>
    <url>/2019/08/21/H5%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<blockquote>
<p>记录 H5 常用属性的使用方法</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a><a href="#references">1.参考</a></h2><h2 id="2-居中"><a href="#2-居中" class="headerlink" title="2.居中"></a><a href="#align_center">2.居中</a></h2><h2 id="3-HTML-项目中优化项设置"><a href="#3-HTML-项目中优化项设置" class="headerlink" title="3.HTML 项目中优化项设置"></a><a href="#html_improve">3.HTML 项目中优化项设置</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考<a name="references"/></h2><ul>
<li>1.<a href="https://www.w3schools.com/default.asp">W3schools.com</a></li>
<li>2.<a href="https://developer.mozilla.org/zh-CN/">MDN web docs</a></li>
<li>3.<a href="https://www.w3schools.com/cssref/css_default_values.asp">元素在浏览器中默认的值</a></li>
<li>4.<a href="https://www.w3schools.com/css/css_positioning.asp">position 位置摆放的使用</a></li>
<li>5.<a href="https://www.cnblogs.com/keithwang/p/3139517.html">block，inline和inline-block概念和区别</a></li>
<li>6.<a href="https://stackoverflow.com/questions/8969381/what-is-the-difference-between-display-inline-and-display-inline-block">What is the difference between display: inline and display: inline-block?</a></li>
<li>7.<a href="https://css-tricks.com/centering-in-the-unknown/">Centering in the Unknown</a></li>
<li>8.<a href="https://css-tricks.com/centering-css-complete-guide/">Centering in CSS: A Complete Guide</a></li>
</ul>
<h2 id="2-居中-1"><a href="#2-居中-1" class="headerlink" title="2.居中"></a>2.居中<a name="align_center"/></h2><h3 id="1-水平居中"><a href="#1-水平居中" class="headerlink" title="1.水平居中"></a>1.水平居中</h3><ul>
<li><p>1.如果它是个行内元素，就对它的父元素应用 <code>text-align: center</code>,效果如下:<br><img src="http://pic.pgyjz.cn/blog/HTML5/HTML5/Snip20191024_3.png"></p>
</li>
<li><p>2.如果它是个块级元素，就对它自身应用 <code>margin:auto</code><br><img src="http://pic.pgyjz.cn/blog/HTML5/HTML5/Snip20191024_4.png"></p>
</li>
</ul>
<h3 id="2-垂直居中-参考-《CSS-揭秘》中-40-居中对齐-内容"><a href="#2-垂直居中-参考-《CSS-揭秘》中-40-居中对齐-内容" class="headerlink" title="2.垂直居中(参考 《CSS 揭秘》中 40 居中对齐 内容)"></a>2.垂直居中(参考 《CSS 揭秘》中 40 居中对齐 内容)</h3><ul>
<li>1.下面的例子中共用的 HTML 文件:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># html:</span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;main&gt;</span><br><span class="line">      &lt;h1&gt;Am I cenntered yet?&lt;&#x2F;h1&gt;</span><br><span class="line">      &lt;p&gt;Center me, please!&lt;&#x2F;p&gt;</span><br><span class="line">    &lt;&#x2F;main&gt;</span><br><span class="line"> &lt;&#x2F;body&gt;</span><br></pre></td></tr></table></figure>

<h4 id="1-方法一"><a href="#1-方法一" class="headerlink" title="1.方法一:"></a>1.方法一:</h4><ul>
<li>要求元素具有固定的宽度和高度:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> # CSS</span><br><span class="line">body &#123;</span><br><span class="line">  background-color: yellow;</span><br><span class="line">&#125;</span><br><span class="line">main &#123;</span><br><span class="line">  background-color: gray;</span><br><span class="line">  </span><br><span class="line">  position: absolute;</span><br><span class="line">   width: 18em;</span><br><span class="line">  height: 6em;</span><br><span class="line">  </span><br><span class="line">  top: 50%;</span><br><span class="line">  left: 50%;</span><br><span class="line">  margin-top: -3em;</span><br><span class="line">  margin-left: -9em; </span><br><span class="line">&#x2F;*  上面4行可以简化为:</span><br><span class="line">  top: calc(50% - 3em);</span><br><span class="line">  left: calc(50% - 9em);</span><br><span class="line">  *&#x2F;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>效果如下:<br><img src="http://pic.pgyjz.cn/blog/HTML5/HTML5/Snip20191024_5.png"></p>
<h4 id="2-方法二"><a href="#2-方法二" class="headerlink" title="2.方法二:"></a>2.方法二:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  background-color: yellow;</span><br><span class="line">&#125;</span><br><span class="line">main &#123;</span><br><span class="line">  background-color: gray;</span><br><span class="line">  position: absolute;</span><br><span class="line">  top: 50%;</span><br><span class="line">  left: 50%;</span><br><span class="line">  transform: translate(-50%, -50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>也是得到如下的效果(因为 CSS 变形函数 <code>translate()</code> 使用百分比值时, 是以这个元素自身的宽度和高度为基准进行换算和移动的):<br><img src="http://pic.pgyjz.cn/blog/HTML5/HTML5/Snip20191024_6.png"></p>
<h4 id="3-方法三"><a href="#3-方法三" class="headerlink" title="3.方法三:"></a>3.方法三:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  background-color: yellow;</span><br><span class="line">&#125;</span><br><span class="line">main &#123;</span><br><span class="line">  background-color: gray;</span><br><span class="line"> </span><br><span class="line">  width: 18em;</span><br><span class="line">  paddinng: 1em 1.5em;</span><br><span class="line">  margin: 50vh auto 0;</span><br><span class="line">  transform: translateY(-50%);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>也是得到 上面居中 的效果(但这个方法只适用于在视口中居中的场景):</p>
<h4 id="4-方法四"><a href="#4-方法四" class="headerlink" title="4.方法四:"></a>4.方法四:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">body &#123;</span><br><span class="line">  background-color: yellow;</span><br><span class="line">  </span><br><span class="line">  display: flex;</span><br><span class="line">  min-height: 100vh;</span><br><span class="line">  margin: 0 ;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line">main &#123;</span><br><span class="line">  background-color: gray;</span><br><span class="line"> </span><br><span class="line"> margin: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>也是得到 上面居中 的效果.</p>
<h4 id="5-方法五"><a href="#5-方法五" class="headerlink" title="5.方法五:"></a>5.方法五:</h4><p>1.将匿名容器(即没有被标签包裹的文本节点) 垂直居中:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">display: flex;</span><br><span class="line">align-items: center;</span><br><span class="line">justify-content: center;</span><br></pre></td></tr></table></figure>
<p>效果如下:<br><img src="http://pic.pgyjz.cn/blog/HTML5/HTML5/Snip20191024_8.png"></p>
<h2 id="3-HTML-项目中优化项设置-1"><a href="#3-HTML-项目中优化项设置-1" class="headerlink" title="3.HTML 项目中优化项设置"></a>3.HTML 项目中优化项设置<a name="html_improve"/></h2><ul>
<li>1.如果项目中设置了 <code>body &#123; margin: 0; &#125;</code> ,则需要一起设置 <code>* &#123; box-sizing: border-box; &#125; </code>(因为默认的控件的大小是不包括 border 和 padding 的, 这很不合常理!), 因为 <code>&lt;input&gt;</code> <code>&lt;textarea&gt;</code> 或有一些元素它的宽度会超出自身设置的宽度一点点. <code> width of input, textarea, and submit button will go outside of the screen.</code><ul>
<li>1.<a href="https://www.w3schools.com/css/css3_box-sizing.asp">参考1:https://www.w3schools.com/css/css3_box-sizing.asp</a></li>
<li>2.<a href="https://www.w3schools.com/css/tryit.asp?filename=trycss3_box-sizing_all">参考2:https://www.w3schools.com/css/tryit.asp?filename=trycss3_box-sizing_all</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>H5</category>
      </categories>
      <tags>
        <tag>H5</tag>
      </tags>
  </entry>
  <entry>
    <title>Homebrew 的源配置</title>
    <url>/2019/12/22/HomeBrew_setup/</url>
    <content><![CDATA[<blockquote>
<p>记录 Mac 下设置 Homebrew 源的过程.</p>
</blockquote>
<a id="more"></a>



<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h2><ul>
<li>1.<a href="https://www.zhihu.com/question/31360766/answer/75845239">(Homebrew有比较快的源（mirror）吗？ - 剑微寒的回答 - 知乎</a></li>
<li>2.<a href="https://juejin.im/post/5c738bacf265da2deb6aaf97">Mac HomeBrew国内镜像安装方法</a></li>
<li>3.<a href="https://lug.ustc.edu.cn/wiki/mirrors/help/brew.git">替换及重置Homebrew默认源</a></li>
</ul>
<h2 id="2-替换源过程"><a href="#2-替换源过程" class="headerlink" title="2.替换源过程"></a>2.替换源过程</h2><ul>
<li>1.替换 brew.git</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 清理 代理</span><br><span class="line">$:homebrew-core glb_gz$ noproxy</span><br><span class="line">clear proxy done</span><br><span class="line">cd &quot;$(brew --repo)&quot;</span><br><span class="line">$:Homebrew glb_gz$ pwd</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;Homebrew</span><br><span class="line">&#x2F;&#x2F; 替换前</span><br><span class="line">$:Homebrew glb_gz$ git remote get-url origin</span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;brew</span><br><span class="line">&#x2F;&#x2F; 替换</span><br><span class="line">$:Homebrew glb_gz$ git remote set-url origin https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;brew.git</span><br><span class="line">&#x2F;&#x2F; 替换后</span><br><span class="line">$:Homebrew glb_gz$ git remote get-url origin</span><br><span class="line">https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;brew.git</span><br><span class="line">$:homebrew-core glb_gz$ brew update</span><br><span class="line">Already up-to-date.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.替换 homebrew-core.git</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 清理 代理</span><br><span class="line">$:homebrew-core glb_gz$ noproxy</span><br><span class="line">clear proxy done</span><br><span class="line">$:Homebrew glb_gz$ cd &quot;$(brew --repo)&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core&quot;</span><br><span class="line">$:homebrew-core glb_gz$ pwd</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;Homebrew&#x2F;Library&#x2F;Taps&#x2F;homebrew&#x2F;homebrew-core</span><br><span class="line">&#x2F;&#x2F; 替换前</span><br><span class="line">$:homebrew-core glb_gz$ git remote get-url origin </span><br><span class="line">https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;homebrew-core</span><br><span class="line">&#x2F;&#x2F;替换后</span><br><span class="line">$:homebrew-core glb_gz$ git remote set-url origin https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;homebrew-core.git</span><br><span class="line">$:homebrew-core glb_gz$ git remote get-url origin </span><br><span class="line">https:&#x2F;&#x2F;mirrors.ustc.edu.cn&#x2F;homebrew-core.git</span><br><span class="line">$:homebrew-core glb_gz$ brew update</span><br><span class="line">Already up-to-date.</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>JavaScript Promise Learn</title>
    <url>/2020/05/12/JavaScript-promise/</url>
    <content><![CDATA[<blockquote>
<p>JavaScript Promise 的用法</p>
</blockquote>
<a id="more"></a>


<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h2><ul>
<li>1.<a href="https://www.positronx.io/angular-8-es-6-typescript-promises-examples/">TypeScript Promises Examples</a></li>
<li>2.<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Using_promises#Promise_%E6%8B%92%E7%BB%9D%E4%BA%8B%E4%BB%B6">MDN 使用 Promise</a></li>
<li>3.<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise">MDN Promise</a></li>
<li>3.<a href="https://medium.com/javascript-scene/master-the-javascript-interview-what-is-a-promise-27fc71e77261">Master the JavaScript Interview: What is a Promise?</a></li>
</ul>
<h2 id="2-例子"><a href="#2-例子" class="headerlink" title="2.例子"></a>2.例子</h2><ul>
<li>1.Attach Success Handler with Promise</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function asyncAction() &#123;</span><br><span class="line">  var promise &#x3D; new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class="line">    setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">      console.log(&quot;Async is done!&quot;);</span><br><span class="line">      resolve();</span><br><span class="line">    &#125;, 1500);</span><br><span class="line">  &#125;);</span><br><span class="line">  return promise;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">asyncAction().then(</span><br><span class="line">  () &#x3D;&gt; console.log(&quot;Resolved!&quot;)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Output</span><br><span class="line">Async is done!</span><br><span class="line">Resolved!</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.Attaching Error Handler with Promise</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function asyncAction() &#123;</span><br><span class="line">  var promise &#x3D; new Promise((resolve, reject) &#x3D;&gt; &#123;</span><br><span class="line">    setTimeout(() &#x3D;&gt; &#123;</span><br><span class="line">      console.log(&quot;Async is done!&quot;);</span><br><span class="line">      reject(&#39;Rejected!&#39;);</span><br><span class="line">    &#125;, 1500);</span><br><span class="line">  &#125;);</span><br><span class="line">  return promise;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">asyncAction().then(function(success) &#123; </span><br><span class="line">    console.log(success); </span><br><span class="line">&#125;) </span><br><span class="line">.catch(function(error) &#123; </span><br><span class="line">   &#x2F;&#x2F; error handler is called</span><br><span class="line">   console.log(error); </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Output</span><br><span class="line">Async is done!</span><br><span class="line">Rejected!</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.Attach Multiple Then Handlers with Promise</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Promise.resolve(&quot;Completed&quot;)</span><br><span class="line">  .then(</span><br><span class="line">    (value) &#x3D;&gt; &#123;</span><br><span class="line">      return &#39;Completed Two&#39;;</span><br><span class="line">    &#125;,</span><br><span class="line">    (error) &#x3D;&gt; console.error(error)</span><br><span class="line">  )</span><br><span class="line">  .then(</span><br><span class="line">    (value) &#x3D;&gt; console.log(value),</span><br><span class="line">    (error) &#x3D;&gt; console.error(error)</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">&#x2F;*  Output:</span><br><span class="line">   &#39;Completed&#39;</span><br><span class="line">   &#39;Completed Two&#39;</span><br><span class="line">*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Promise.reject(&#39;Rejected&#39;)</span><br><span class="line">  .then(</span><br><span class="line">    (value) &#x3D;&gt; console.log(value)</span><br><span class="line">   )</span><br><span class="line">  .then(</span><br><span class="line">    (value) &#x3D;&gt; console.log(value),</span><br><span class="line">    (error) &#x3D;&gt; console.error(error)</span><br><span class="line">  );</span><br><span class="line"> </span><br><span class="line"> &#x2F;* Output:</span><br><span class="line"> &#39;Rejected&#39;</span><br><span class="line"> </span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>javaScript</category>
      </categories>
      <tags>
        <tag>javaScript</tag>
      </tags>
  </entry>
  <entry>
    <title>Jenkins 的安装与使用</title>
    <url>/2020/06/13/Jenkins-install-and-usage/</url>
    <content><![CDATA[<blockquote>
<p>记录 Jenkins 在 Mac 上安装与使用的过程</p>
</blockquote>
<a id="more"></a>


<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h2><h2 id="2-在-Mac-mini-上安装-Jenkins"><a href="#2-在-Mac-mini-上安装-Jenkins" class="headerlink" title="2.在 Mac mini 上安装 Jenkins"></a>2.在 Mac mini 上安装 Jenkins</h2><h2 id="3-设置-Jenkins-中-Shell-的-PATH"><a href="#3-设置-Jenkins-中-Shell-的-PATH" class="headerlink" title="3.设置 Jenkins 中 Shell 的 PATH"></a>3.设置 Jenkins 中 Shell 的 PATH</h2><h2 id="4-源代码管理"><a href="#4-源代码管理" class="headerlink" title="4.源代码管理"></a>4.源代码管理</h2><h2 id="5-触发机制"><a href="#5-触发机制" class="headerlink" title="5.触发机制"></a>5.触发机制</h2><h2 id="6-Build-的脚本"><a href="#6-Build-的脚本" class="headerlink" title="6.Build 的脚本"></a>6.Build 的脚本</h2><h2 id="7-常用的插件"><a href="#7-常用的插件" class="headerlink" title="7.常用的插件"></a>7.常用的插件</h2><h2 id="8-过程及结果通知"><a href="#8-过程及结果通知" class="headerlink" title="8.过程及结果通知"></a>8.过程及结果通知</h2><h2 id="9-用户管理"><a href="#9-用户管理" class="headerlink" title="9.用户管理"></a>9.用户管理</h2><h2 id="10-自动打包-Xamarin-Android-项目"><a href="#10-自动打包-Xamarin-Android-项目" class="headerlink" title="10.自动打包 Xamarin.Android 项目"></a>10.自动打包 <code>Xamarin.Android</code> 项目</h2><h2 id="11-打包-Xamarin-iOS-项目"><a href="#11-打包-Xamarin-iOS-项目" class="headerlink" title="11.打包 Xamarin.iOS 项目"></a>11.打包 <code>Xamarin.iOS</code> 项目</h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考</h2><ul>
<li>1.<a href="https://www.jenkins.io/">Jenkins</a></li>
<li>2.<a href="https://docs.microsoft.com/en-us/xamarin/tools/ci/jenkins-walkthrough">Using Jenkins with Xamarin</a></li>
<li>3.<a href="https://stackoverflow.com/questions/54192905/how-to-save-jenkins-configuration">Save Jenkins configuration</a></li>
<li>4.<a href="https://issues.jenkins-ci.org/browse/JENKINS-30107">Login Credentials Brute Force</a></li>
</ul>
<h2 id="2-在-Mac-mini-上安装-Jenkins-1"><a href="#2-在-Mac-mini-上安装-Jenkins-1" class="headerlink" title="2.在 Mac mini 上安装 Jenkins"></a>2.在 Mac mini 上安装 Jenkins</h2><h4 id="1-下载安装"><a href="#1-下载安装" class="headerlink" title="1.下载安装"></a>1.下载安装</h4><blockquote>
<p><a href="https://www.jenkins.io/download/lts/macos/">1.Homebrew Installer</a><br><a href="https://damien.co/general/how-to-start-stop-restart-or-reload-jenkins-mac-osx-8022/">2.How to Stop, Restart Jenkins - Common URL options</a><br><a href="https://stackoverflow.com/questions/11062335/update-jenkins-from-a-war-file">3.Update Jenkins from a war file</a></p>
</blockquote>
<ul>
<li>1.使用 brew 下载</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install jenkins-lts</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 会提示需下载 jdk 8(Jenkins-lts)</span><br><span class="line">brew cask install homebrew&#x2F;cask-versions&#x2F;adoptopenjdk8</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.开始/结束 等控制命令</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 作为服务类型去运行</span><br><span class="line">brew services start jenkins-lts</span><br><span class="line">brew services stop jenkins-lts</span><br><span class="line">brew services restart jenkins-lts</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 作为 命令行 程序去运行</span><br><span class="line">$ jenkins-lts</span><br><span class="line"></span><br><span class="line">开启后，可以使用浏览器去控制 Jenkins</span><br><span class="line">&#x2F;&#x2F; http:&#x2F;&#x2F;[jenkins-server]&#x2F;[command] where [command] can be</span><br><span class="line">exit -&gt; shutdown jenkins</span><br><span class="line">restart restart jenkins</span><br><span class="line">reload to reload the configuration</span><br><span class="line"></span><br><span class="line">如: http:&#x2F;&#x2F;10.100.1.172:8080&#x2F;restart 去重启 Jenkins</span><br></pre></td></tr></table></figure>


<h5 id="2-Jenkins-配置文件"><a href="#2-Jenkins-配置文件" class="headerlink" title="2.Jenkins 配置文件"></a>2.Jenkins 配置文件</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~&#x2F;.jenkins&#x2F;config.xml</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;opt&#x2F;jenkins-lts&#x2F;homebrew.mxcl.jenkins-lts.plist</span><br><span class="line"></span><br><span class="line">任务文件路径:  ~&#x2F;.jenkins&#x2F;jobs&#x2F;[JOB NAME]</span><br><span class="line">任务配置文件路径:  ~&#x2F;.jenkins&#x2F;jobs&#x2F;[JOB NAME]&#x2F;config.xml</span><br><span class="line">项目文件路径: ~&#x2F;.jenkins&#x2F;workspace</span><br></pre></td></tr></table></figure>

<h5 id="3-更新"><a href="#3-更新" class="headerlink" title="3.更新"></a>3.更新</h5><ul>
<li>1.在 <code>Manage Jenkins -&gt; System Information</code> 中可以看到 <code>jenkins.war</code> 的文件的路径 <code>executable-war</code>，如这里为: </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">System Properties</span><br><span class="line">Name  			Value   </span><br><span class="line">awt.toolkit	sun.lwawt.macosx.LWCToolkit</span><br><span class="line">BUILD_TIMESTAMP	2020-07-06_02:30:05_CST</span><br><span class="line">executable-war	&#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;jenkins-lts&#x2F;2.204.1&#x2F;libexec&#x2F;jenkins.war</span><br></pre></td></tr></table></figure>
<ul>
<li>2.在搭建的 <code>Jenkins Server</code> 中下载新版 <code>jenkins.war</code> 包.</li>
<li>3.停止 Jenkins: <code>brew services stop jenkins-lts</code></li>
<li>4.用新下载的 <code>jenkins.war</code> 替换 <code>/usr/local/Cellar/jenkins-lts/2.204.1/libexec/jenkins.war</code></li>
<li>5.重启 Jenkins: <code>brew services start jenkins-lts</code></li>
</ul>
<h2 id="3-设置-Jenkins-中-Shell-的-PATH-1"><a href="#3-设置-Jenkins-中-Shell-的-PATH-1" class="headerlink" title="3.设置 Jenkins 中 Shell 的 PATH"></a>3.设置 Jenkins 中 Shell 的 PATH</h2><blockquote>
<p>如果不设置的话，会导致在 terminal 上能正常运行的脚本在 Jenkins 的 <code>Execute shell</code> 上不能正常运行.</p>
</blockquote>
<h5 id="1-参考-2"><a href="#1-参考-2" class="headerlink" title="1.参考"></a>1.参考</h5><ul>
<li>1.<a href="https://stackoverflow.com/questions/15620369/jenkins-on-mac-path-is-not-set-right-no-usr-local-bin">jenkins on Mac, PATH is not set right, no /usr/local/bin</a></li>
</ul>
<h5 id="2-操作"><a href="#2-操作" class="headerlink" title="2.操作"></a>2.操作</h5><ul>
<li>1.编辑 Jenkins <code>/usr/local/Cellar/jenkins-lts/2.204.1/homebrew.mxcl.jenkins-lts.plist</code> 文件，添加 Mac 的 $PATH 到 Jenkins 中.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 输出 PATH</span><br><span class="line">echo $PATH </span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE plist PUBLIC &quot;-&#x2F;&#x2F;Apple&#x2F;&#x2F;DTD PLIST 1.0&#x2F;&#x2F;EN&quot; &quot;http:&#x2F;&#x2F;www.apple.com&#x2F;DTDs&#x2F;PropertyList-1.0.dtd&quot;&gt;</span><br><span class="line">&lt;plist version&#x3D;&quot;1.0&quot;&gt;</span><br><span class="line">  &lt;dict&gt;</span><br><span class="line">    &lt;key&gt;Label&lt;&#x2F;key&gt;</span><br><span class="line">    &lt;string&gt;homebrew.mxcl.jenkins-lts&lt;&#x2F;string&gt;</span><br><span class="line">    &lt;key&gt;ProgramArguments&lt;&#x2F;key&gt;</span><br><span class="line">    &lt;array&gt;</span><br><span class="line">      &lt;string&gt;&#x2F;usr&#x2F;libexec&#x2F;java_home&lt;&#x2F;string&gt;</span><br><span class="line">      &lt;string&gt;-v&lt;&#x2F;string&gt;</span><br><span class="line">      &lt;string&gt;1.8&lt;&#x2F;string&gt;</span><br><span class="line">      &lt;string&gt;--exec&lt;&#x2F;string&gt;</span><br><span class="line">      &lt;string&gt;java&lt;&#x2F;string&gt;</span><br><span class="line">      &lt;string&gt;-Dmail.smtp.starttls.enable&#x3D;true&lt;&#x2F;string&gt;</span><br><span class="line">      &lt;string&gt;-jar&lt;&#x2F;string&gt;</span><br><span class="line">      &lt;string&gt;&#x2F;usr&#x2F;local&#x2F;opt&#x2F;jenkins-lts&#x2F;libexec&#x2F;jenkins.war&lt;&#x2F;string&gt;</span><br><span class="line">      &lt;string&gt;--httpListenAddress&#x3D;127.0.0.1&lt;&#x2F;string&gt;</span><br><span class="line">      &lt;string&gt;--httpPort&#x3D;8080&lt;&#x2F;string&gt;</span><br><span class="line">    &lt;&#x2F;array&gt;</span><br><span class="line">    &lt;key&gt;RunAtLoad&lt;&#x2F;key&gt;</span><br><span class="line">    &lt;true&#x2F;&gt;</span><br><span class="line">    &lt;key&gt;EnvironmentVariables&lt;&#x2F;key&gt;</span><br><span class="line">    &lt;dict&gt;</span><br><span class="line">        &lt;key&gt;PATH&lt;&#x2F;key&gt;</span><br><span class="line">        &lt;string&gt;(You PATH)&lt;&#x2F;string&gt;</span><br><span class="line">    &lt;&#x2F;dict&gt;</span><br><span class="line">  &lt;&#x2F;dict&gt;</span><br><span class="line">&lt;&#x2F;plist&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h2 id="4-源代码管理-1"><a href="#4-源代码管理-1" class="headerlink" title="4.源代码管理"></a>4.源代码管理</h2><blockquote>
<p>首次安装完成后会自动安装 Git 插件</p>
</blockquote>
<h2 id="5-触发机制-1"><a href="#5-触发机制-1" class="headerlink" title="5.触发机制"></a>5.触发机制</h2><blockquote>
<p>一般选择 <code>Poll SCM</code></p>
</blockquote>
<h2 id="6-Build-的脚本-1"><a href="#6-Build-的脚本-1" class="headerlink" title="6.Build 的脚本"></a>6.Build 的脚本</h2><blockquote>
<p>在 Mac 上运行就选择 <code>Execute shell</code>, 然后执行的脚本格式跟在 terminal 上一样.</p>
</blockquote>
<h2 id="7-常用的插件-1"><a href="#7-常用的插件-1" class="headerlink" title="7.常用的插件"></a>7.常用的插件</h2><h4 id="1-Build-Timestamp"><a href="#1-Build-Timestamp" class="headerlink" title="1.Build Timestamp"></a>1.<a href="https://stackoverflow.com/a/44011594/5237440">Build Timestamp</a></h4><ul>
<li>1.让 Jenkins 使用 Timestamp</li>
</ul>
<h4 id="2-Email-Extension"><a href="#2-Email-Extension" class="headerlink" title="2.Email Extension"></a>2.<a href="https://plugins.jenkins.io/email-ext/">Email Extension</a></h4><ul>
<li>1.使 Email 的格式更加丰富</li>
</ul>
<h4 id="3-Workspace-Cleanup"><a href="#3-Workspace-Cleanup" class="headerlink" title="3.Workspace Cleanup"></a>3.<a href="https://plugins.jenkins.io/ws-cleanup/">Workspace Cleanup</a></h4><ul>
<li>1.在每次 Build 前就 Clean 整个项目.</li>
</ul>
<h4 id="4-Environment-Injector"><a href="#4-Environment-Injector" class="headerlink" title="4.Environment Injector"></a>4.Environment Injector</h4><ul>
<li>1.安全地插入 password 等等敏感的数据</li>
</ul>
<h4 id="5-Delivery-Pipeline"><a href="#5-Delivery-Pipeline" class="headerlink" title="5.Delivery Pipeline"></a>5.Delivery Pipeline</h4><ul>
<li>1.可视化 任务管道传递</li>
</ul>
<h4 id="6-Role-based-Authorization"><a href="#6-Role-based-Authorization" class="headerlink" title="6.Role-based Authorization"></a>6.Role-based Authorization</h4><ul>
<li>1.角色权限管理</li>
</ul>
<h2 id="8-过程及结果通知-1"><a href="#8-过程及结果通知-1" class="headerlink" title="8.过程及结果通知"></a>8.过程及结果通知</h2><h4 id="1-参考-3"><a href="#1-参考-3" class="headerlink" title="1.参考"></a>1.参考</h4><ul>
<li>1.<a href="https://www.jianshu.com/p/cb816b42673d">Jenkins配置邮件提醒</a></li>
<li>2.<a href="https://bytefreaks.net/applications/jenkins-improve-the-format-of-the-email">邮件格式定义:Jenkins: Improve the format of the email</a></li>
</ul>
<h4 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤"></a>2.步骤</h4><ul>
<li>1.Enable <code>Configure Global Security</code> -&gt; <code>Enable proxy compatibility</code></li>
<li>2.如设置 QQ ，则需要先 <a href="https://service.mail.qq.com/cgi-bin/help?subtype=1&&id=28&&no=331">开启 SMTP 服务</a>,然后使用返回的授权码代替密码进行登录.</li>
<li>3.正确设置 邮件服务器的信息.</li>
</ul>
<h4 id="3-每个-build-都发送邮件"><a href="#3-每个-build-都发送邮件" class="headerlink" title="3.每个 build 都发送邮件"></a>3.每个 build 都发送邮件</h4><ul>
<li>1.<a href="https://shalimatech.com/send-email-every-build-jenkins/">send email at every build</a></li>
</ul>
<h4 id="4-设置格式"><a href="#4-设置格式" class="headerlink" title="4.设置格式"></a>4.设置格式</h4><ul>
<li>1.发送人名字设置, 在 <code>Configure System</code> -&gt; <code>System Admin e-mail address</code> 设置为 <code>Name&lt;email address&gt;</code> 格式, 如: <code>Jenkins server &lt;123@qq.com&gt;</code>.</li>
</ul>
<h4 id="5-Eamil-模板参考"><a href="#5-Eamil-模板参考" class="headerlink" title="5.Eamil 模板参考"></a>5.Eamil 模板参考</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Hi All,</span><br><span class="line">    &lt;br&#x2F;&gt;</span><br><span class="line">    &lt;br&#x2F;&gt;</span><br><span class="line">    $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS.&lt;br&#x2F;&gt;</span><br><span class="line">    &lt;br&#x2F;&gt;</span><br><span class="line">    Click &lt;a href&#x3D;&quot;$BUILD_URL&#x2F;console&quot;&gt;$BUILD_URL&#x2F;console&lt;&#x2F;a&gt; to view full &lt;strong&gt;console output&lt;&#x2F;strong&gt; results.&lt;br&#x2F;&gt;</span><br><span class="line">    Click &lt;a href&#x3D;&quot;$JOB_URL&#x2F;ws&#x2F;README.md&quot;&gt;$JOB_URL&#x2F;ws&#x2F;README.md&lt;&#x2F;a&gt; to download the &lt;strong&gt;README.md&lt;&#x2F;strong&gt; file. &lt;br&#x2F;&gt;</span><br><span class="line">    If you cannot connect to the build server, check the attached logs.&lt;br&#x2F;&gt;</span><br><span class="line">    &lt;br&#x2F;&gt;</span><br><span class="line">    --&lt;br&#x2F;&gt;</span><br><span class="line">    Following is the last 100 lines of the log.&lt;br&#x2F;&gt;</span><br><span class="line">    &lt;br&#x2F;&gt;</span><br><span class="line">    --LOG-BEGIN--&lt;br&#x2F;&gt;</span><br><span class="line">    &lt;pre style&#x3D;&#39;line-height: 22px; display: block; color: #333; font-family: Monaco,Menlo,Consolas,&quot;Courier New&quot;,monospace; padding: 10.5px; margin: 0 0 11px; font-size: 13px; word-break: break-all; word-wrap: break-word; white-space: pre-wrap; background-color: #f5f5f5; border: 1px solid #ccc; border: 1px solid rgba(0,0,0,.15); -webkit-border-radius: 4px; -moz-border-radius: 4px; border-radius: 4px;&#39;&gt;</span><br><span class="line">    $&#123;BUILD_LOG, maxLines&#x3D;100, escapeHtml&#x3D;true&#125;</span><br><span class="line">    &lt;&#x2F;pre&gt;</span><br><span class="line">    --LOG-END--</span><br><span class="line">    &lt;br&#x2F;&gt;</span><br><span class="line">    &lt;br&#x2F;&gt;</span><br><span class="line"></span><br><span class="line">From: Mac mini&#39;s Jenkins server &lt;$BUILD_TIMESTAMP&gt;</span><br></pre></td></tr></table></figure>



<h2 id="9-用户管理-1"><a href="#9-用户管理-1" class="headerlink" title="9.用户管理"></a>9.用户管理</h2><blockquote>
<p>需要 <a href="https://plugins.jenkins.io/matrix-auth/"><code>Matrix Authorization Strategy</code></a> 插件</p>
</blockquote>
<h4 id="1-参考-4"><a href="#1-参考-4" class="headerlink" title="1.参考"></a>1.参考</h4><ul>
<li>1.<a href="https://www.edureka.co/community/47822/there-restrict-permissions-user-per-individual-job-jenkins">A way to restrict permissions to a user per individual job in jenkins</a></li>
<li>2.<a href="https://wiki.jenkins.io/display/jenkins/standard+security+setup">Standard Security Setup(wiki.jenkins.io)</a></li>
<li>3.<a href="http://abhijitkakade.com/2019/06/how-to-reset-jenkins-admin-users-password/">How to Reset Jenkins Admin users Password</a></li>
</ul>
<h4 id="2-具体操作"><a href="#2-具体操作" class="headerlink" title="2.具体操作"></a>2.具体操作</h4><ul>
<li><p>1.From the jenkins dashboard,click on Manage Jenkins.</p>
</li>
<li><p>2.under Manage jenkins-&gt;Configure Global Security-&gt;select Enable security.</p>
</li>
<li><p>3.Under the Authorization section, select the “Project-based Matrix Authorization Strategy”</p>
</li>
<li><p>4.Add the particular user and assign the appropriate permissions.(用户必须在这里有 <code>Overall -&gt; Read</code> 的权限，否则在子项目配置的权限也会没有效果.)</p>
</li>
<li><p>5.And then to assign Job specific permissions :</p>
<ul>
<li><p>1.Go to the job (say job1) for which you need to assign permissions.</p>
</li>
<li><p>2.Click Configure-&gt;under the general tab-&gt;Enable Project-based Security.</p>
</li>
<li><p>3.Add the particular user (say user1) and assign the required permissions.</p>
</li>
</ul>
</li>
</ul>
<h2 id="10-自动打包-Xamarin-Android-项目-1"><a href="#10-自动打包-Xamarin-Android-项目-1" class="headerlink" title="10.自动打包 Xamarin.Android 项目"></a>10.自动打包 <code>Xamarin.Android</code> 项目</h2><h4 id="0-前期准备"><a href="#0-前期准备" class="headerlink" title="0.前期准备"></a>0.前期准备</h4><h5 id="1-Mac-安装-xmlstarlet-软件"><a href="#1-Mac-安装-xmlstarlet-软件" class="headerlink" title="1.Mac 安装 xmlstarlet 软件."></a>1.Mac 安装 xmlstarlet 软件.</h5><ul>
<li><p>1.安装 <a href="http://macappstore.org/xmlstarlet/"><code>xmlstarlet</code>(Mac xml 解析器)</a></p>
<ul>
<li>1.因为打包后生成的 APK 包需要附上版本号，要读取 <code>AndroidManifest.xml</code> 文件才能完成这个操作. </li>
<li>2.安装: <code>brew install xmlstarlet</code></li>
</ul>
</li>
<li><p>2.使用方法</p>
<ul>
<li>1.<a href="https://stackoverflow.com/a/17333937/5237440">Extract XML Value in bash script</a></li>
<li>2.<a href="http://xmlstar.sourceforge.net/doc/UG/xmlstarlet-ug.html">XmlStarlet Command Line XML Toolkit User’s Guide</a></li>
</ul>
</li>
<li><p>3.例子</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; input.xml</span><br><span class="line">&lt;?xml version&#x3D;&quot;1.0&quot; encoding&#x3D;&quot;UTF-8&quot;?&gt;</span><br><span class="line"></span><br><span class="line">&lt;Environment xmlns:android&#x3D;&quot;http:&#x2F;&#x2F;schemas.android.com&#x2F;apk&#x2F;res&#x2F;android&quot; xmlns&#x3D;&quot;http:&#x2F;&#x2F;schemas.dmtf.org&#x2F;ovf&#x2F;environment&#x2F;1&quot; xmlns:xsi&#x3D;&quot;http:&#x2F;&#x2F;www.w3.org&#x2F;2001&#x2F;XMLSchema-instance&quot; xmlns:oe&#x3D;&quot;http:&#x2F;&#x2F;schemas.dmtf.org&#x2F;ovf&#x2F;environment&#x2F;1&quot; xmlns:ve&#x3D;&quot;http:&#x2F;&#x2F;www.vmware.com&#x2F;schema&#x2F;ovfenv&quot; oe:id&#x3D;&quot;customerId&quot; ve:vCenterId&#x3D;&quot;centerID&quot; android:versionCode&#x3D;&quot;251&quot; android:versionName&#x3D;&quot;2.4.0&quot; &gt;</span><br><span class="line">  &lt;PropertySection&gt;</span><br><span class="line">&lt;Property oe:key&#x3D;&quot;vami.hostname&quot; oe:value&#x3D;&quot;jal&quot;&#x2F;&gt;</span><br><span class="line">&lt;Property oe:key&#x3D;&quot;vamitimezone&quot; oe:value&#x3D;&quot;Asia&#x2F;Kolkata&quot;&#x2F;&gt;</span><br><span class="line">&lt;Property oe:key&#x3D;&quot;ABC_enable&quot; oe:value&#x3D;&quot;1&quot;&#x2F;&gt;</span><br><span class="line">&lt;Property oe:key&#x3D;&quot;software_only_installer_name&quot; oe:value&#x3D;&quot;install-r8-0-0-0&quot;&#x2F;&gt;</span><br><span class="line">&lt;Property oe:key&#x3D;&quot;software_only_staging_dir&quot; oe:value&#x3D;&quot;&#x2F;media&#x2F;dir&quot;&#x2F;&gt;</span><br><span class="line">&lt;Property oe:key&#x3D;&quot;software_only_mount_dir&quot; oe:value&#x3D;&quot;&#x2F;media&#x2F;cdrom&quot;&#x2F;&gt;</span><br><span class="line">  &lt;&#x2F;PropertySection&gt;</span><br><span class="line">&lt;&#x2F;Environment&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">$ xmlstarlet sel -t -v &quot;&#x2F;&#x2F;@android:versionCode&quot; input.xml</span><br><span class="line">&#x2F;&#x2F; Output: 251</span><br><span class="line"></span><br><span class="line">$ xmlstarlet sel -t -v &quot;&#x2F;&#x2F;@ve:vCenterId&quot; input.xml</span><br><span class="line">&#x2F;&#x2F; Output: centerID</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="2-把-zipalign-添加到个人目录的环境变量中"><a href="#2-把-zipalign-添加到个人目录的环境变量中" class="headerlink" title="2.把 zipalign 添加到个人目录的环境变量中"></a>2.把 zipalign 添加到个人目录的环境变量中</h5><blockquote>
<p>Android 打包需要用到的工具.</p>
</blockquote>
<h6 id="1-参考-5"><a href="#1-参考-5" class="headerlink" title="1.参考"></a>1.参考</h6><ul>
<li>1.<a href="https://stackoverflow.com/a/55135196/5237440">Zipalign - Command not found - MAC terminal</a></li>
</ul>
<h6 id="2-配置-zipalign-环境"><a href="#2-配置-zipalign-环境" class="headerlink" title="2.配置 zipalign 环境"></a>2.配置 zipalign 环境</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 查找 zipalign 位置</span><br><span class="line">$ find ~&#x2F;Library&#x2F;Developer&#x2F;Xamarin -name &quot;zipalign&quot;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 把 zipalign 放置到 个人环境目录下</span><br><span class="line">$ echo &quot;export PATH&#x3D;\$PATH:~&#x2F;Library&#x2F;Developer&#x2F;Xamarin&#x2F;android-sdk-macosx&#x2F;build-tools&#x2F;29.0.2&quot; &gt;&gt; ~&#x2F;.bash_profile &amp;&amp; . ~&#x2F;.bash_profile</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 测试效果</span><br><span class="line">$ zipalign</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="3-实际效果"><a href="#3-实际效果" class="headerlink" title="3.实际效果"></a>3.实际效果</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 模板</span><br><span class="line">zipalign -f -v 4 yourSigned.apk yourFinaleApk</span><br><span class="line"></span><br><span class="line">zipalign -f -v 4 $WORKSPACE&#x2F;BLE_APP.Android&#x2F;Bin&#x2F;Release&#x2F;com.glb.BLE_APP-Signed.apk $WORKSPACE&#x2F;BLE_APP.Android&#x2F;Bin&#x2F;Release&#x2F;finalApp.apk</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h4 id="1-项目参数的保存"><a href="#1-项目参数的保存" class="headerlink" title="1.项目参数的保存"></a>1.项目参数的保存</h4><ul>
<li>0.Build Environment</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Delete workspace before build starts</span><br><span class="line">Add timestamps to the Console Output</span><br><span class="line"></span><br><span class="line">Inject passwords to the build as environment variables(STORE_PASS)</span><br></pre></td></tr></table></figure>

<ul>
<li>1.Excute shell</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">pwd</span><br><span class="line"></span><br><span class="line">whoami</span><br><span class="line"></span><br><span class="line">cd MowerGG</span><br><span class="line"></span><br><span class="line">nuget restore</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<ul>
<li>2.Inject Environment</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">KEYSTORE_FILE &#x3D; &#x2F;Users&#x2F;glb_gz&#x2F;Desktop&#x2F;GreenworksGreenGuide.keystore</span><br><span class="line">KEYSTORE_ALIAS &#x3D; GreenworksGreenGuide</span><br><span class="line"></span><br><span class="line">APK_BIN_PATH &#x3D;  $WORKSPACE&#x2F;MowerGG&#x2F;MowerGG.Android&#x2F;bin</span><br><span class="line">MANIFEST_PATH &#x3D; $WORKSPACE&#x2F;MowerGG&#x2F;MowerGG.Android&#x2F;Properties</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>4.Excute shell</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 必须放置在这里(这个 Execute shell)，否则后面的执行会读取不到这个值</span><br><span class="line">declare -a Environments&#x3D;(</span><br><span class="line">                 &quot;Brand1 - Dev2;AndroidManifest1.xml&quot;</span><br><span class="line">                 &quot;Brand2 - Dev2;AndroidManifest2.xml&quot;</span><br><span class="line">                )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">StartJarSignAndZip() &#123;</span><br><span class="line"></span><br><span class="line">	versionName&#x3D;$(xmlstarlet sel -t -v &quot;&#x2F;&#x2F;@android:versionName&quot; &quot;$MANIFEST_PATH&quot;&#x2F;&quot;$2&quot;)</span><br><span class="line">	versionCode&#x3D;$(xmlstarlet sel -t -v &quot;&#x2F;&#x2F;@android:versionCode&quot; &quot;$MANIFEST_PATH&quot;&#x2F;&quot;$2&quot;)</span><br><span class="line">	packageName&#x3D;$(xmlstarlet sel -t -v &quot;&#x2F;&#x2F;@package&quot; &quot;$MANIFEST_PATH&quot;&#x2F;&quot;$2&quot;)</span><br><span class="line"></span><br><span class="line">	INPUT_APK&#x3D;&quot;$APK_BIN_PATH&quot;&#x2F;&quot;$1&quot;&#x2F;&quot;$packageName&quot;&quot;.apk&quot;</span><br><span class="line">    SIGNED_APK&#x3D;&quot;$APK_BIN_PATH&quot;&#x2F;&quot;$1&quot;&#x2F;&quot;$packageName&quot;&quot;-Signed.apk&quot;</span><br><span class="line">    FINAL_APK&#x3D;&quot;$APK_BIN_PATH&quot;&#x2F;&quot;$1&quot;&#x2F;&quot;$packageName&quot;&quot;_$versionName&quot;&quot;.$versionCode&quot;&quot;.apk&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	jarsigner -verbose -sigalg MD5withRSA -digestalg SHA1 -keystore $KEYSTORE_FILE -storepass $STORE_PASS -signedjar &quot;$SIGNED_APK&quot; &quot;$INPUT_APK&quot; $KEYSTORE_ALIAS</span><br><span class="line"></span><br><span class="line">	zipalign -f -v 4 &quot;$SIGNED_APK&quot; &quot;$FINAL_APK&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">StartMSBuild() &#123;</span><br><span class="line">	msbuild &#x2F;p:Configuration&#x3D;&quot;$1&quot; &#x2F;t:PackageForAndroid &#x2F;t:SignAndroidPackage  MowerGG&#x2F;MowerGG.Android&#x2F;Globe.IoT.App.GreenGuide.Android.csproj</span><br><span class="line">	</span><br><span class="line">    StartJarSignAndZip &quot;$1&quot; &quot;$2&quot;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for environment in &quot;$&#123;Environments[@]&#125;&quot;</span><br><span class="line">   do</span><br><span class="line">     echo &quot;$environment&quot;</span><br><span class="line">     configuration&#x3D;$(echo &quot;$environment&quot; | awk -F&#39;;&#39; &#39;&#123;print $1&#125;&#39;)</span><br><span class="line">     manifestFileName&#x3D;$(echo &quot;$environment&quot; | awk -F&#39;;&#39; &#39;&#123;print $2&#125;&#39;)</span><br><span class="line">     StartMSBuild &quot;$configuration&quot; &quot;$manifestFileName&quot;</span><br><span class="line">   done</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="11-打包-Xamarin-iOS-项目-1"><a href="#11-打包-Xamarin-iOS-项目-1" class="headerlink" title="11.打包 Xamarin.iOS 项目"></a>11.打包 <code>Xamarin.iOS</code> 项目</h2><h4 id="1-参考-6"><a href="#1-参考-6" class="headerlink" title="1.参考"></a>1.参考</h4><ul>
<li>1.<a href="https://docs.microsoft.com/en-us/xamarin/ios/deploy-test/app-distribution/ipa-support?tabs=macos">IPA Support in Xamarin.iOS</a></li>
</ul>
<h4 id="2-过程"><a href="#2-过程" class="headerlink" title="2.过程"></a>2.过程</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">msbuild &#x2F;p:Configuration&#x3D;&quot;APP.iOS - Develop&quot; &#x2F;p:Platform&#x3D;&quot;iPhone&quot; &#x2F;p:IpaPackageDir&#x3D;&quot;&#x2F;Users&#x2F;user&#x2F;Desktop&quot; &#x2F;p:BuildIpa&#x3D;true &#x2F;t:Build Globe.IoT.App.GreenGuide.iOS.csproj</span><br></pre></td></tr></table></figure>






<p>/Users/glb_gz/Documents/Xamarin_Workplace/ggmowerapp/MowerGG/MowerGG.iOS/Globe.IoT.App.GreenGuide.iOS.csproj</p>
]]></content>
      <categories>
        <category>CI</category>
      </categories>
      <tags>
        <tag>CI</tag>
      </tags>
  </entry>
  <entry>
    <title>Laravel学习</title>
    <url>/2018/06/03/Laravel%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="Laravel学习"><a href="#Laravel学习" class="headerlink" title="Laravel学习"></a>Laravel学习</h1><blockquote>
<p>1.记录下对 PHP 框架 Laravel 的学习。</p>
</blockquote>
<a id="more"></a>

<h3 id="1-基本的-Laravel-命令"><a href="#1-基本的-Laravel-命令" class="headerlink" title="1.基本的 Laravel 命令"></a><a href="#basic_command">1.基本的 Laravel 命令</a></h3><ul>
<li>1.Laravel 5.6 开发文档</li>
<li>2.相关的 Valet 的命令</li>
<li>3.Homestead 的相关的命令</li>
</ul>
<h3 id="2-Voyager-后台框架的学习"><a href="#2-Voyager-后台框架的学习" class="headerlink" title="2.Voyager 后台框架的学习"></a><a href="#voyager_learn">2.Voyager 后台框架的学习</a></h3><blockquote>
<p>Voyager 是在 Laravel 的基础上的后台框架.</p>
</blockquote>
<h3 id="3-Composer-本地路径加载第三方扩展包"><a href="#3-Composer-本地路径加载第三方扩展包" class="headerlink" title="3.Composer 本地路径加载第三方扩展包"></a><a href="https://laravel-china.org/topics/1999/composer-local-path-loading-third-party-extension-pack">3.Composer 本地路径加载第三方扩展包</a></h3><ul>
<li><a href="https://laravel-china.org/topics/1901/correct-method-for-installing-composer-expansion-pack">1.正确的 Composer 扩展包安装方法</a></li>
</ul>
<h3 id="4-数据的模拟插入"><a href="#4-数据的模拟插入" class="headerlink" title="4.数据的模拟插入"></a><a href="#data_insert">4.数据的模拟插入</a></h3><h3 id="5-数据库的迁移"><a href="#5-数据库的迁移" class="headerlink" title="5.数据库的迁移"></a><a href="#database_migrate">5.数据库的迁移</a></h3><h3 id="6-相关的-cache-清除"><a href="#6-相关的-cache-清除" class="headerlink" title="6.相关的 cache 清除"></a><a href="#cache_clear">6.相关的 cache 清除</a></h3><h3 id="7-邮件发送功能"><a href="#7-邮件发送功能" class="headerlink" title="7.邮件发送功能"></a><a href="#email_send">7.邮件发送功能</a></h3><hr>
<hr>
<hr>
<h3 id="1-基本的-Laravel-命令-1"><a href="#1-基本的-Laravel-命令-1" class="headerlink" title="1.基本的 Laravel 命令"></a>1.基本的 Laravel 命令<a name="basic_command"/></h3><h4 id="1-Laravel-5-6-开发文档"><a href="#1-Laravel-5-6-开发文档" class="headerlink" title="1.Laravel 5.6 开发文档"></a>1.Laravel 5.6 开发文档</h4><pre><code>* [1.中文](https://laravel-china.org/docs/laravel/5.6/installation/1352)
* [2.英文](https://laravel.com/docs/5.6)</code></pre>
<h4 id="2-相关的-Valet-的命令-参考自-laravel-com"><a href="#2-相关的-Valet-的命令-参考自-laravel-com" class="headerlink" title="2.相关的 Valet 的命令,参考自:laravel.com:"></a>2.相关的 Valet 的命令,<a href="https://laravel.com/docs/5.6/valet">参考自:laravel.com</a>:</h4><pre><code>* 1.新建一个 laravel 的项目

    `
    laravel new project
    `

* 2.valet 的启动/停止 等等:

    `
    valet start
    valet stop
    `

* 3.mysql 的启动/停止

    `
    brew services start mysql
    brew services stop mysql
    `</code></pre>
<h4 id="3-Homestead-的相关的命令"><a href="#3-Homestead-的相关的命令" class="headerlink" title="3.Homestead 的相关的命令"></a><a href="https://laravel-china.org/docs/laravel/5.6/homestead/1355#a29c5a">3.Homestead 的相关的命令</a></h4><ul>
<li>1.<code>vagrant up</code> 启动 Homestead</li>
<li>2.<code>vagrant -h</code> 启动帮助页面.</li>
<li>3.<a href="https://laracasts.com/discuss/channels/laravel/how-can-access-my-laravel-project-from-my-homestead?page=1#">解决 <code>No input file specified</code> 的问题</a></li>
<li>4.做 mysql 数据库的  migrate 时， <code>.env</code> 文件的配置为:</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">DB_CONNECTION=mysql</span><br><span class="line">DB_HOST=<span class="number">192.168</span><span class="number">.10</span><span class="number">.10</span></span><br><span class="line">DB_PORT=<span class="number">3306</span></span><br><span class="line">DB_DATABASE=homestead</span><br><span class="line">DB_USERNAME=homestead</span><br><span class="line">DB_PASSWORD=secret</span><br></pre></td></tr></table></figure>


<ul>
<li><p><a href="https://juejin.im/post/5a614681518825732646de42">5.PhpStorm+Homestead+Xdebug调试Laravel</a></p>
<ul>
<li><p>1.在 Chrome 上，要那图标变为绿色才表示监听中</p>
<img src="/assets/imgs/laravel/ScreenShot_2018-06-11_11.05.11.png" >
</li>
</ul>
</li>
<li><p>6.本机的 <code>Sequel Pro</code> 连接 Homestead 数据库的配置</p>
  <img src="/assets/imgs/laravel/ScreenShot_2018-06-09_21.27.51.png" width="70%" height="70%">
</li>
<li><p>7.Tinker 的使用</p>
<pre><code>  * 1.[使用 Tinker 来调试 Laravel 应用程序的数据以及使用 Tinker 一些总结](https://laravel-china.org/articles/8575/debugging-laravel-application-data-with-tinker-and-using-some-tinker-summaries)</code></pre>
  <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#在终端中打开 tingker</span></span><br><span class="line">php artisan tinker</span><br><span class="line"><span class="comment">#在数据库中生成一个 User 的数据</span></span><br><span class="line">factory(App\User::class)-&gt;create();</span><br><span class="line"><span class="comment">#查看 User 表的所有数据.</span></span><br><span class="line">App\User::all();</span><br></pre></td></tr></table></figure>
</li>
<li><p>8.<a href="https://stackoverflow.com/questions/23788096/how-to-setup-phpmyadmin-on-a-laravel-homestead-box/36640591">在 Homestead 中加入 phpmyadmin ,How to setup phpmyadmin on a Laravel Homestead box?</a></p>
<pre><code>  * 1.成功添加后，访问的地址为: [http://phpmyadmin.test:8000/](http://phpmyadmin.test:8000/)</code></pre>
</li>
<li><p>9.如果之前项目的 <code>HomeStead</code> 开着没有关闭,又开另外一个项目的 <code>HomeStead</code> ,浏览器显示的还会是之前的项目的显示.</p>
</li>
<li><p>10.在 <code>voyager</code> 的后台主页显示 <code>Missing storage symlink</code> 的问题，点击了 <code>Fix it</code> 也没有反应.</p>
<ul>
<li>1.原因:是因为 <code>homestead</code> 把 Mac 上链接文件复制到了 linux 上,但双方的路径不一样所导致的.通过 <code>vagrant ssh</code> 链接到主机，然后查看就知道了:</li>
</ul>
</li>
</ul>
<pre><code>    <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vagrant@hooks:~&#x2F;code&#x2F;public$ ls -al</span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x 1 vagrant vagrant  320 Jun 20 02:28 .</span><br><span class="line">drwxr-xr-x 1 vagrant vagrant 1024 Jun 20 03:25 ..</span><br><span class="line">drwxr-xr-x 1 vagrant vagrant   96 Jun 20 02:09 css</span><br><span class="line">-rw-r--r-- 1 vagrant vagrant    0 Jun 20 02:09 favicon.ico</span><br><span class="line">-rw-r--r-- 1 vagrant vagrant  593 Jun 20 02:09 .htaccess</span><br><span class="line">-rw-r--r-- 1 vagrant vagrant 1823 Jun 20 02:09 index.php</span><br><span class="line">drwxr-xr-x 1 vagrant vagrant   96 Jun 20 02:09 js</span><br><span class="line">-rw-r--r-- 1 vagrant vagrant   24 Jun 20 02:09 robots.txt</span><br><span class="line">lrwxr-xr-x 1 vagrant vagrant   79 Jun 20 02:28 storage -&gt; &#x2F;Users&#x2F;tianzeng&#x2F;Documents&#x2F;php_Workplace&#x2F;GitHub&#x2F;Laravel&#x2F;hooks&#x2F;storage&#x2F;app&#x2F;public</span><br><span class="line">drwxr-xr-x 1 vagrant vagrant   96 Jun 20 02:28 vendor</span><br></pre></td></tr></table></figure></code></pre>
<ul>
<li><p><a href="https://github.com/ghzjtian/yoyager/tree/dev2#truely_path">2.解决方法:</a></p>
<ul>
<li><p>1.导航到 远程主机的 code 目录下,<code>vagrant ssh</code> -&gt; <code>cd code</code>    </p>
</li>
<li><p>2.运行命令 <code>sudo ln -s /home/vagrant/code/storage/app/public /home/vagrant/code/public/storage</code></p>
</li>
<li><p>3.查看结果，已修改成功.</p>
  <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vagrant@hooks:~&#x2F;code$ ls -al public </span><br><span class="line">total 12</span><br><span class="line">drwxr-xr-x 1 vagrant vagrant  320 Jun 20 03:52 .</span><br><span class="line">drwxr-xr-x 1 vagrant vagrant 1024 Jun 20 03:25 ..</span><br><span class="line">drwxr-xr-x 1 vagrant vagrant   96 Jun 20 02:09 css</span><br><span class="line">-rw-r--r-- 1 vagrant vagrant    0 Jun 20 02:09 favicon.ico</span><br><span class="line">-rw-r--r-- 1 vagrant vagrant  593 Jun 20 02:09 .htaccess</span><br><span class="line">-rw-r--r-- 1 vagrant vagrant 1823 Jun 20 02:09 index.php</span><br><span class="line">drwxr-xr-x 1 vagrant vagrant   96 Jun 20 02:09 js</span><br><span class="line">-rw-r--r-- 1 vagrant vagrant   24 Jun 20 02:09 robots.txt</span><br><span class="line">lrwxr-xr-x 1 vagrant vagrant   37 Jun 20 03:52 storage -&gt; &#x2F;home&#x2F;vagrant&#x2F;code&#x2F;storage&#x2F;app&#x2F;public</span><br><span class="line">drwxr-xr-x 1 vagrant vagrant   96 Jun 20 02:28 vendor</span><br><span class="line">vagrant@hooks:~&#x2F;code$ </span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
<li><p>11.多站点的支持,只需在 <code>Homestead.yaml</code> 文件中增加如下的站点信息,并且在 <code>hosts</code> 文件中增加 <code>homestead2.test</code> 的信息,然后运行 <code>vagrant reload --provision</code> 重新加载即可.</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	folders:</span><br><span class="line">    -</span><br><span class="line">        map: &#x2F;Users&#x2F;tianzeng&#x2F;Documents&#x2F;php_Workplace&#x2F;FastCloud&#x2F;FastCloud</span><br><span class="line">        to: &#x2F;home&#x2F;vagrant&#x2F;code</span><br><span class="line"></span><br><span class="line">    - map: &#x2F;Users&#x2F;tianzeng&#x2F;Documents&#x2F;php_Workplace&#x2F;testPHP</span><br><span class="line">      to: &#x2F;home&#x2F;vagrant&#x2F;code2</span><br><span class="line"></span><br><span class="line">sites:</span><br><span class="line">    -</span><br><span class="line">        map: homestead.test</span><br><span class="line">        to: &#x2F;home&#x2F;vagrant&#x2F;code&#x2F;public</span><br><span class="line"></span><br><span class="line">    -   map: homestead2.test</span><br><span class="line">        to: &#x2F;home&#x2F;vagrant&#x2F;code2</span><br></pre></td></tr></table></figure>



<hr>
<h3 id="2-Voyager-后台框架的学习-1"><a href="#2-Voyager-后台框架的学习-1" class="headerlink" title="2.Voyager 后台框架的学习"></a>2.Voyager 后台框架的学习<a name="voyager_learn"/></h3><ul>
<li><a href="https://voyager.readme.io/docs/installation">1.Voyager v1.1 开发文档.</a></li>
</ul>
<h3 id="4-数据的模拟插入-1"><a href="#4-数据的模拟插入-1" class="headerlink" title="4.数据的模拟插入"></a>4.数据的模拟插入<a name="data_insert"/></h3><ul>
<li>1.参考 <a href="https://laravel-china.org/docs/laravel/5.6/seeding/1401">Seeders</a> , <a href="https://laravel-china.org/docs/laravel/5.6/database-testing/1412#writing-factories">Factory</a></li>
<li>2.相关的步骤:<ul>
<li>1.生成一个 <code>factory</code>,如: <code>php artisan make:factory SparkFactory --model=Spark</code> ,并填写相关的模拟数据的生成:</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">use Faker\Generator as Faker;</span><br><span class="line"></span><br><span class="line">$factory-&gt;define(App\Spark::class, function (Faker $faker) &#123;</span><br><span class="line">return [</span><br><span class="line">&#39;name&#39; &#x3D;&gt; &#39;产品名_&#39;.str_random(10),</span><br><span class="line">&#39;pic&#39; &#x3D;&gt; &#39;http:&#x2F;&#x2F;file.mancando.cn&#x2F;resource&#x2F;images&#x2F;product&#x2F;10020001&#x2F;201609091354591425789.jpg&#39;,</span><br><span class="line">&#39;number&#39; &#x3D;&gt; &#39;产品编号_&#39;.str_random(10),</span><br><span class="line">&#39;supplier_number&#39; &#x3D;&gt; &#39;供应商编号_&#39;.str_random(10),</span><br><span class="line">&#39;category_name&#39; &#x3D;&gt; &#39;产品种类_&#39;.str_random(10),</span><br><span class="line">&#39;brand_name&#39; &#x3D;&gt; &#39;品牌名_&#39;.str_random(10),</span><br><span class="line">&#39;package_size&#39; &#x3D;&gt; random_int(0,10),</span><br><span class="line">&#39;unit&#39; &#x3D;&gt; &#39;支&#39;,</span><br><span class="line">&#39;status&#39; &#x3D;&gt; random_int(0,2),</span><br><span class="line">&#39;description&#39; &#x3D;&gt; &#39;描述_&#39;.str_random(20),</span><br><span class="line">&#39;sale_price&#39; &#x3D;&gt; random_int(10,20),</span><br><span class="line">&#39;purchase_price&#39; &#x3D;&gt; random_int(5,10),</span><br><span class="line">&#39;sales&#39; &#x3D;&gt; random_int(100,200),</span><br><span class="line">&#39;stock&#39; &#x3D;&gt; random_int(50,100),</span><br><span class="line">];</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.生成一个对应的 <code>Seeder</code> ,如: <code>php artisan make:seeder SparksTableSeeder </code> ,并写入生成模拟数据的逻辑(这里为 50 条模拟数据的生成):</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">public function run()</span><br><span class="line">   &#123;</span><br><span class="line"></span><br><span class="line">       factory(App\Spark::class,50)-&gt;create();</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>3.运行 <code>composer dump-autoload</code> 命令，<a href="https://stackoverflow.com/questions/26143315/laravel-5-artisan-seed-reflectionexception-class-songstableseeder-does-not-e">否则会有 <code>Class XXXSeeder does not exist</code> 发生.</a></li>
<li>4.运行命令 <code>php artisan db:seed --class=SparksTableSeeder</code> ,数据就已经生成了.</li>
</ul>
<hr>
<h3 id="5-数据库的迁移-1"><a href="#5-数据库的迁移-1" class="headerlink" title="5.数据库的迁移"></a>5.数据库的迁移<a name="database_migrate"/></h3><ul>
<li>1.参考: <a href="https://laravel-china.org/docs/laravel/5.6/migrations/1400">数据库的迁移</a></li>
<li>2.步骤:<ul>
<li>0.生成一个 Model,如 Setting: <code>php artisan make:Model Setting</code>.</li>
<li>1.运行命令<code>php artisan make:migration create_new_sparks_table --create=my_sparks </code> ,将会有文件 <code>database/migrations/2018_07_31_065118_create_new_sparks_table.php</code> 生成.</li>
<li>2.往 <code>2018_07_31_065118_create_new_sparks_table.php </code>的 up 方法中填入数据库的字段数据, 如:</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">use Illuminate\Support\Facades\Schema;</span><br><span class="line">use Illuminate\Database\Schema\Blueprint;</span><br><span class="line">use Illuminate\Database\Migrations\Migration;</span><br><span class="line"></span><br><span class="line">class CreateNewSparksTable extends Migration</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * Run the migrations.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public function up()</span><br><span class="line">    &#123;</span><br><span class="line">        Schema::create(&#39;my_sparks&#39;, function (Blueprint $table) &#123;</span><br><span class="line">            $table-&gt;increments(&#39;id&#39;);</span><br><span class="line"></span><br><span class="line">            $table -&gt; string(&#39;name&#39;) -&gt; nullable();</span><br><span class="line">            $table -&gt; string(&#39;pic&#39;)-&gt; nullable();</span><br><span class="line">            $table -&gt; string(&#39;number&#39;)-&gt; nullable();</span><br><span class="line">            $table -&gt; string(&#39;supplier_number&#39;)-&gt; nullable();</span><br><span class="line">            $table -&gt; string(&#39;category_name&#39;)-&gt; nullable();</span><br><span class="line">            $table -&gt; string(&#39;brand_name&#39;)-&gt; nullable();</span><br><span class="line">            $table -&gt; unsignedInteger(&#39;package_size&#39;)-&gt; nullable();</span><br><span class="line">            $table -&gt; string(&#39;unit&#39;)-&gt; nullable();</span><br><span class="line">            $table -&gt; tinyInteger(&#39;status&#39;)-&gt; nullable();</span><br><span class="line">            $table -&gt; text(&#39;description&#39;)-&gt; nullable();</span><br><span class="line">            $table -&gt; unsignedInteger(&#39;sale_price&#39;)-&gt; nullable();</span><br><span class="line">            $table -&gt; unsignedInteger(&#39;purchase_price&#39;)-&gt; nullable();</span><br><span class="line">            $table -&gt; unsignedInteger(&#39;sales&#39;)-&gt; nullable();</span><br><span class="line">            $table -&gt; unsignedInteger(&#39;stock&#39;)-&gt; nullable();</span><br><span class="line"></span><br><span class="line">            $table-&gt;nullabletimestamps();</span><br><span class="line">            $table-&gt; softDeletes()-&gt; nullable();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * Reverse the migrations.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public function down()</span><br><span class="line">    &#123;</span><br><span class="line">        Schema::dropIfExists(&#39;my_sparks&#39;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>3.运行迁移 <code>php artisan migrate</code>. 即可生成指定字段的数据表.</p>
</li>
<li><p>4.想要在代码里删除刚刚新增的数据表(发现有错误发生!!!)</p>
<ul>
<li>1.修改文件名,如 把 <code>2018_07_31_065119_create_new_sparks_table.php</code> 改为 <code>2018_07_31_065120_create_new_sparks_table.php</code>,只有这样在运行 <code>php artisan migrate</code> 时才可以运行这个文件.</li>
<li>2.在 up 方法中 写入</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$this-&gt;down();</span><br><span class="line">       return;	</span><br></pre></td></tr></table></figure>

<ul>
<li><p>5.更新数据库，添加一个数据库的字段</p>
<ul>
<li><p>1.先运行 <code>php artisan make:migration update_products_table</code>,在 <code>migrations</code>生成一个文件。</p>
</li>
<li><p>2.然后在 run 方法中添加所需要添加的字段，如</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Schema::table(&#39;products&#39;,function (Blueprint $table)&#123;</span><br><span class="line">          $table-&gt;string(&#39;image_large&#39;)-&gt;nullable()-&gt;after(&#39;image&#39;);</span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>3.运行 <code>php artisan migrate</code> 即可.</p>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="6-相关的-cache-清除-1"><a href="#6-相关的-cache-清除-1" class="headerlink" title="6.相关的 cache 清除"></a>6.相关的 cache 清除<a name="cache_clear"/></h2><ul>
<li>1.清除 view 缓存. <code>php artisan view:clear</code><ul>
<li>1.但是在 <code>PHP Storm</code> 中，用这条命令清除了后，一刷新 浏览器的网页，旧的页面又出来了.</li>
<li>2.没有找到解决的方法!!!<ul>
<li><a href="https://github.com/laravel/framework/issues/2501">1.Option to disable cache</a></li>
<li><a href="https://stackoverflow.com/questions/16971445/how-i-can-disable-templates-caching-in-development-mode">2.How I can disable templates caching in development mode?
</a></li>
<li><a href="https://laracasts.com/discuss/channels/laravel/changing-blade-files-never-change-when-refreshingclearing-cache?page=1">3.Changing blade files never change when refreshing/clearing cache</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h3 id="7-邮件发送功能-1"><a href="#7-邮件发送功能-1" class="headerlink" title="7.邮件发送功能"></a>7.邮件发送功能<a name="email_send"/></h3><h5 id="1-用-mailtrap-去代发邮件"><a href="#1-用-mailtrap-去代发邮件" class="headerlink" title="1.用 mailtrap 去代发邮件:"></a>1.用 <a href="https://mailtrap.io/inboxes/399408/messages/887456554">mailtrap</a> 去代发邮件:</h5><ul>
<li>1.参考(发现都没效果，从 mailtrap 后台可以看到有发送的 EMAIL 数据，但目标邮箱没收到任何的邮件):<ul>
<li><a href="https://appdividend.com/2018/03/05/send-email-in-laravel-tutorial/">1.How To Send Email In Laravel Tutorial</a></li>
<li><a href="https://www.tutorialspoint.com/laravel/laravel_sending_email.htm">2.Laravel - Sending Email</a></li>
</ul>
</li>
</ul>
<h5 id="2-用-163-邮箱去做发送邮箱-亲测有效"><a href="#2-用-163-邮箱去做发送邮箱-亲测有效" class="headerlink" title="2.用 163 邮箱去做发送邮箱.(亲测有效)"></a>2.用 163 邮箱去做发送邮箱.(亲测有效)</h5><ul>
<li>1.用 163 普通的免费邮,进去网页版，然后按 设置-&gt;客户端授权密码(设置一个密码)-开启,就可以开启 laravel 客户端登录发送邮件了.<ul>
<li>2.发现用 163 企业邮找不到</li>
</ul>
</li>
<li>2.在 <code>.env</code>中做如下的配置,<a href="http://help.163.com/09/1223/14/5R7P3QI100753VB8.html">163免费邮客户端设置的POP3、SMTP、IMAP地址</a>:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MAIL_DRIVER&#x3D;smtp</span><br><span class="line">MAIL_HOST&#x3D;smtp.163.com</span><br><span class="line">MAIL_PORT&#x3D;994</span><br><span class="line">MAIL_USERNAME&#x3D;test@163.com</span><br><span class="line">MAIL_PASSWORD&#x3D;上一步的客户端授权码</span><br><span class="line">MAIL_ENCRYPTION&#x3D;ssl</span><br><span class="line">MAIL_FROM_ADDRESS&#x3D; test@163.com</span><br><span class="line">MAIL_FROM_NAME&#x3D;test</span><br></pre></td></tr></table></figure>

<ul>
<li>3.发送的实际代码参考:<ul>
<li><a href="https://www.jianshu.com/p/15ea81c9d781">1.使用 Laravel 基于 SMTP 驱动实现发送邮件</a></li>
<li><a href="https://appdividend.com/2018/03/05/send-email-in-laravel-tutorial/">2.How To Send Email In Laravel Tutorial</a></li>
<li><a href="https://www.tutorialspoint.com/laravel/laravel_sending_email.htm">3.Laravel - Sending Email</a></li>
<li><a href="https://www.jianshu.com/p/8ccb2820df23">4.利用Laravel自带SMTP邮件组件实现发送邮件</a></li>
<li><a href="https://laravel-china.org/articles/5455/laravel55-new-feature-markdown-mail-template-display">5.Laravel5.5 新特性~Markdown 邮件模板的显示</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux命令</title>
    <url>/2018/11/02/Linux%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="1-Linux-相关命令"><a href="#1-Linux-相关命令" class="headerlink" title="1.Linux 相关命令"></a><a href="#linux_command">1.Linux 相关命令</a></h2><h3 id="1-1参考"><a href="#1-1参考" class="headerlink" title="1.1参考"></a>1.1参考</h3><h3 id="1-2文件相关命令"><a href="#1-2文件相关命令" class="headerlink" title="1.2文件相关命令"></a>1.2文件相关命令</h3><h3 id="1-3网络相关命令"><a href="#1-3网络相关命令" class="headerlink" title="1.3网络相关命令"></a>1.3网络相关命令</h3><h4 id="1-端口检测"><a href="#1-端口检测" class="headerlink" title="1.端口检测"></a>1.端口检测</h4><a id="more"></a>

<hr>
<hr>
<hr>
<h2 id="1-Linux-相关命令-1"><a href="#1-Linux-相关命令-1" class="headerlink" title="1.Linux 相关命令"></a>1.Linux 相关命令<a name="linux_command"/></h2><h3 id="1-1参考-1"><a href="#1-1参考-1" class="headerlink" title="1.1参考"></a>1.1参考</h3><ul>
<li>1.<a href="https://www.zhihu.com/question/49073893">Linux中常用的命令都是哪些单词的缩写？</a></li>
</ul>
<h3 id="1-2文件相关命令-1"><a href="#1-2文件相关命令-1" class="headerlink" title="1.2文件相关命令"></a>1.2文件相关命令</h3><ul>
<li>0.相关参考:<ul>
<li>1.参考1: <a href="http://www.cnblogs.com/peida/archive/2012/12/07/2806483.html">每天一个linux命令（33）：df 命令</a></li>
<li>2.参考2: <a href="https://www.jianshu.com/p/1c22dcb17a2e">Linux查看文件和文件夹大小</a></li>
</ul>
</li>
<li>1.列出文件系统的可用空间及使用情况(df – Disk Free):<code>df -h</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># df -h</span><br><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">&#x2F;dev&#x2F;sda1       8.2G  3.1G  4.7G  40% &#x2F;</span><br><span class="line">udev             10M     0   10M   0% &#x2F;dev</span><br><span class="line">tmpfs           1.6G   49M  1.6G   4% &#x2F;run</span><br><span class="line">tmpfs           3.9G  4.0K  3.9G   1% &#x2F;dev&#x2F;shm</span><br><span class="line">tmpfs           5.0M  4.0K  5.0M   1% &#x2F;run&#x2F;lock</span><br><span class="line">tmpfs           3.9G     0  3.9G   0% &#x2F;sys&#x2F;fs&#x2F;cgroup</span><br><span class="line">&#x2F;dev&#x2F;sda5       2.7G  291M  2.3G  12% &#x2F;var</span><br><span class="line">&#x2F;dev&#x2F;sda7       360M  5.3M  332M   2% &#x2F;tmp</span><br><span class="line">&#x2F;dev&#x2F;sda8       432G  3.0G  407G   1% &#x2F;home</span><br></pre></td></tr></table></figure>

<ul>
<li>2.查看文件或文件夹的磁盘使用空间(du – Disk Usage):<code>du -h --max-depth=1 your_dest_dir</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"># du -h --max-depth&#x3D;1 &#x2F;var</span><br><span class="line">16K	&#x2F;var&#x2F;lost+found</span><br><span class="line">4.0K	&#x2F;var&#x2F;local</span><br><span class="line">8.0K	&#x2F;var&#x2F;www</span><br><span class="line">8.0K	&#x2F;var&#x2F;tmp</span><br><span class="line">48K	&#x2F;var&#x2F;mail</span><br><span class="line">6.0M	&#x2F;var&#x2F;backups</span><br><span class="line">816K	&#x2F;var&#x2F;spool</span><br><span class="line">187M	&#x2F;var&#x2F;lib</span><br><span class="line">93M	&#x2F;var&#x2F;log</span><br><span class="line">286M	&#x2F;var</span><br></pre></td></tr></table></figure>

<h3 id="1-3网络相关命令-1"><a href="#1-3网络相关命令-1" class="headerlink" title="1.3网络相关命令"></a>1.3网络相关命令</h3><h4 id="1-端口检测-1"><a href="#1-端口检测-1" class="headerlink" title="1.端口检测"></a>1.端口检测</h4><h6 id="0-相关参考"><a href="#0-相关参考" class="headerlink" title="0.相关参考"></a>0.相关参考</h6><ul>
<li>1.<a href="http://www.cnblogs.com/onmyway20xx/p/3626433.html">linux 检测远程端口是否打开</a></li>
<li>2.<a href="https://www.jianshu.com/p/0abf51f22e40">检测远程主机上的某个端口是否开启</a></li>
<li>3.<a href="https://www.jianshu.com/p/78c7f4ab19bd">Mac安装telnet</a></li>
<li>4.<a href="https://my.oschina.net/foreverich/blog/402252">mac os x 查看网络端口情况</a></li>
</ul>
<h6 id="1-查看当前主机-tcp-开放了哪些端口"><a href="#1-查看当前主机-tcp-开放了哪些端口" class="headerlink" title="1.查看当前主机 tcp 开放了哪些端口"></a>1.查看当前主机 tcp 开放了哪些端口</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@MyServer:~# netstat -anp tcp</span><br><span class="line">Active Internet connections (servers and established)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID&#x2F;Program name    </span><br><span class="line">tcp        0      0 62.42.41.223:9001       0.0.0.0:*               LISTEN      3816&#x2F;ss-server      </span><br><span class="line">tcp        0      0 62.42.41.223:9002       0.0.0.0:*               LISTEN      3887&#x2F;ss-server      </span><br><span class="line">tcp        0      0 62.42.41.223:9003       0.0.0.0:*               LISTEN      3893&#x2F;ss-server      </span><br><span class="line">tcp        0      0 0.0.0.0:8080            0.0.0.0:*               LISTEN      18545&#x2F;nginx: master </span><br><span class="line">tcp        0      0 0.0.0.0:22              0.0.0.0:*               LISTEN      4254&#x2F;sshd           </span><br><span class="line">tcp        0      0 62.42.41.223:22         218.92.1.131:56386      ESTABLISHED 4345&#x2F;sshd: root [pr </span><br><span class="line">tcp        0      0 62.42.41.223:9002       218.19.136.78:27844     SYN_RECV    -                   </span><br><span class="line">tcp        0      0 62.42.41.223:9003       218.19.136.78:27847     ESTABLISHED 3893&#x2F;ss-server</span><br></pre></td></tr></table></figure>
<h6 id="2-远程监测端口是否打开"><a href="#2-远程监测端口是否打开" class="headerlink" title="2.远程监测端口是否打开:"></a>2.远程监测端口是否打开:</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">root@server3:~# nc -v 62.42.41.223 9002</span><br><span class="line">Warning: forward host lookup failed for 62.42.41.223.vultr.com: No address associated with name</span><br><span class="line">62.42.41.223.vultr.com [62.42.41.223] 9002 (?) open</span><br><span class="line">^C</span><br><span class="line">root@server3:~# nc -v 62.42.41.223 9005</span><br><span class="line">Warning: forward host lookup failed for 62.42.41.223.vultr.com: No address associated with name</span><br><span class="line">62.42.41.223.vultr.com [62.42.41.223] 9005 (?) : Connection refused</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h6 id="3-苹果电脑自带软件"><a href="#3-苹果电脑自带软件" class="headerlink" title="3.苹果电脑自带软件"></a>3.苹果电脑自带软件</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">使用网络实用工具</span><br><span class="line">网络实用工具是苹果自带的网络分析工具</span><br><span class="line">10.8之前的位于 launchpad --&gt; 其他--&gt; 网络实用工具</span><br><span class="line">10.9之后隐藏了该应用，但可以通过 spotlight 搜索 网络实用工具或者 最左上角的苹果标志 --&gt; 关于本机 --&gt;点按&#39;系统报告&#39; --&gt; 标题栏的&#39;窗口&#39; --&gt; 网络实用工具 --&gt; 点按&#39;端口扫描&#39;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>MAMP PRO 快速配置 ssl</title>
    <url>/2018/02/13/MAMP_PRO%E5%BF%AB%E9%80%9F%E9%85%8D%E7%BD%AEssl/</url>
    <content><![CDATA[<h3 id="MAMP-PRO-快速配置-ssl"><a href="#MAMP-PRO-快速配置-ssl" class="headerlink" title="MAMP PRO 快速配置 ssl"></a>MAMP PRO 快速配置 ssl</h3><blockquote>
<p>参考: <a href="http://documentation.mamp.info/en/MAMP-PRO-Mac/Settings/Hosts/SSL/">http://documentation.mamp.info/en/MAMP-PRO-Mac/Settings/Hosts/SSL/</a></p>
</blockquote>
<a id="more"></a>

<h4 id="1-详细的步骤"><a href="#1-详细的步骤" class="headerlink" title="1.详细的步骤"></a><a href="#steps">1.详细的步骤</a></h4><h4 id="2-出现的错误"><a href="#2-出现的错误" class="headerlink" title="2.出现的错误"></a><a href="#errors">2.出现的错误</a></h4><hr>
<hr>
<h4 id="1-详细的步骤-1"><a href="#1-详细的步骤-1" class="headerlink" title="1.详细的步骤:"></a>1.详细的步骤:<a name="steps"/></h4><ul>
<li><p>1.增加一个 主机.<br><img src="/assets/imgs/web/ScreenShot2018-02-13_11.07.02.png"></p>
</li>
<li><p>2.填写相关的信息.<br><img src="/assets/imgs/web/ScreenShot2018-02-13_11.06.37.png"></p>
</li>
<li><p>3.开启 ssl.<br><img src="/assets/imgs/web/ScreenShot2018-02-13_11.09.17.png"></p>
</li>
<li><p>4.验证(可以访问 ssl 的网站了)</p>
</li>
</ul>
<p><img src="/assets/imgs/web/ScreenShot2018-02-13_11.26.07.png"></p>
<p><img src="/assets/imgs/web/ScreenShot2018-02-13_11.27.23.png"></p>
<hr>
<h4 id="2-出现的错误-1"><a href="#2-出现的错误-1" class="headerlink" title="2.出现的错误"></a>2.出现的错误<a name="errors"/></h4><blockquote>
<p>未解决.</p>
</blockquote>
<ul>
<li>1.在本地的 MBP 中，用浏览器访问 127.0.0.1 和 localhost 都可以正常地访问,访问 <a href="https://localhost/">https://localhost</a> 也很正常，但是访问 <a href="https://127.0.0.1/">https://127.0.0.1</a> 就会出现下面的错误:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Forbidden</span><br><span class="line">You don&#39;t have permission to access &#x2F; on this server.</span><br></pre></td></tr></table></figure>






]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 创建定时任务</title>
    <url>/2020/06/11/Mac-crontab/</url>
    <content><![CDATA[<blockquote>
<p>在 Mac 上用 crontab 创建简单的定时任务</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h2><ul>
<li>1.<a href="https://www.jianshu.com/p/838db0269fd0">Linux之crontab定时任务</a></li>
<li>2.<a href="https://medium.com/better-programming/https-medium-com-ratik96-scheduling-jobs-with-crontab-on-macos-add5a8b26c30">Scheduling Jobs With Crontab on macOS</a></li>
<li>3.<a href="https://apple.stackexchange.com/questions/378553/crontab-operation-not-permitted">Crontab Operation not permitted</a></li>
</ul>
<h2 id="2-创建一个每天自动删除文件的任务"><a href="#2-创建一个每天自动删除文件的任务" class="headerlink" title="2.创建一个每天自动删除文件的任务"></a>2.创建一个每天自动删除文件的任务</h2><blockquote>
<p>每天凌晨 1 点自动删除指定目录下的文件夹</p>
</blockquote>
<h4 id="1-创建定时任务脚本"><a href="#1-创建定时任务脚本" class="headerlink" title="1.创建定时任务脚本"></a>1.创建定时任务脚本</h4><ul>
<li>1.在用户的主目录下创建 <code>auto-task-scripts</code> 文件夹， </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd ~</span><br><span class="line">mkdir auto-task-scripts</span><br></pre></td></tr></table></figure>

<ul>
<li>2.然后进入 <code>auto-task-scripts</code> , 新增 <code>auto-delete-task.sh</code> 及 <code>log.txt</code> 文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cd auto-task-scripts</span><br><span class="line"></span><br><span class="line">touch auto-delete-task.sh</span><br><span class="line"></span><br><span class="line">touch log.txt</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>3.写入以下代码到 <code>auto-delete-task.sh</code> 中 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line"># start_date_time&#x3D;&quot;Xamarin&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Cleaning path(~&#x2F;Library&#x2F;Caches&#x2F;Xamarin&#x2F;mtbs) task start.(&#96;date &quot;+%Y-%m-%d %H:%M:%S&quot;&#96;)&quot;;</span><br><span class="line"># echo $start_date_time &gt;&gt; .&#x2F;log.txt</span><br><span class="line"># ls -lh ~&#x2F;Library&#x2F;Caches&#x2F;Xamarin&#x2F;mtbs &gt;&gt; .&#x2F;log.txt</span><br><span class="line"></span><br><span class="line">rm -rf ~&#x2F;Library&#x2F;Caches&#x2F;Xamarin&#x2F;mtbs&#x2F;builds</span><br><span class="line"># ls -lh ~&#x2F;Library&#x2F;Caches&#x2F;Xamarin&#x2F;mtbs &gt;&gt; .&#x2F;log.txt</span><br><span class="line">finish_date_time&#x3D;&quot;Xamarin&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Cleaning path(~&#x2F;Library&#x2F;Caches&#x2F;Xamarin&#x2F;mtbs) task finish.(&#96;date &quot;+%Y-%m-%d %H:%M:%S&quot;&#96;)&quot;;</span><br><span class="line">echo $finish_date_time &gt;&gt; .&#x2F;log.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># app_task_start_message&#x3D;&quot;APP&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Cleaning path(~&#x2F;Desktop&#x2F;MowerGG-Installation-packages) task start.(&#96;date &quot;+%Y-%m-%d %H:%M:%S&quot;&#96;)&quot;;</span><br><span class="line"># echo $app_task_start_message &gt;&gt; .&#x2F;log.txt</span><br><span class="line"># [How to Delete Files Older than 30 days in Linux](https:&#x2F;&#x2F;tecadmin.net&#x2F;delete-files-older-x-days&#x2F;)</span><br><span class="line">find ~&#x2F;Desktop&#x2F;MowerGG-Installation-packages -name &quot;*.zip&quot; -type df -mtime +1 -exec rm -Rf &#123;&#125; \;</span><br><span class="line"># [Bash Script OSX not deleting files it finds](https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;9689124&#x2F;bash-script-osx-not-deleting-files-it-finds)</span><br><span class="line">app_task_finish_message&#x3D;&quot;APP&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Cleaning path(~&#x2F;Desktop&#x2F;MowerGG-Installation-packages) task finish.(&#96;date &quot;+%Y-%m-%d %H:%M:%S&quot;&#96;)&quot;;</span><br><span class="line">echo $app_task_finish_message &gt;&gt; .&#x2F;log.txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># a3s_frontend_task_start_message&#x3D;&quot;a3s-frontend&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Cleaning path(~&#x2F;Desktop&#x2F;A3S-Frontend-Installation-packages) task start.(&#96;date &quot;+%Y-%m-%d %H:%M:%S&quot;&#96;)&quot;;</span><br><span class="line"># echo $a3s_frontend_task_start_message &gt;&gt; .&#x2F;log.txt</span><br><span class="line">find &#x2F;Users&#x2F;globle&#x2F;Desktop&#x2F;A3S-Frontend-Installation-packages -name &quot;*.zip&quot; -type df -mtime +1 -exec rm -Rf &#123;&#125; \;</span><br><span class="line">a3s_frontend_task_finish_message&#x3D;&quot;a3s-frontend&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; Cleaning path(~&#x2F;Desktop&#x2F;A3S-Frontend-Installation-packages) task finish.(&#96;date &quot;+%Y-%m-%d %H:%M:%S&quot;&#96;)&quot;;</span><br><span class="line">echo $a3s_frontend_task_finish_message &gt;&gt; .&#x2F;log.txt</span><br><span class="line"></span><br><span class="line">echo &quot;-&quot; &gt;&gt; .&#x2F;log.txt</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>3.设置 <code>auto-delete-task.sh</code> 文件的权限为 <code>755</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">chmod 755 .&#x2F;auto-delete-task.sh</span><br></pre></td></tr></table></figure>

<ul>
<li>4.删除指定日期的文件, <ul>
<li>1.<a href="https://apple.stackexchange.com/a/236001">delete all files in Downloads whose dates added are greater than 1 year</a></li>
<li>2.<a href="https://askubuntu.com/questions/789602/auto-delete-files-older-than-7-days">Auto delete files older than 7 days</a></li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 删除 test 目录中超过 60 天的目录.</span><br><span class="line">find &#x2F;Users&#x2F;USER&#x2F;Documents&#x2F;windows_Workplace&#x2F;test -type d -ctime +60 -exec mv &#123;&#125; ~&#x2F;.Trash \;</span><br></pre></td></tr></table></figure>

<h4 id="2-添加一个定时任务"><a href="#2-添加一个定时任务" class="headerlink" title="2.添加一个定时任务"></a>2.添加一个定时任务</h4><blockquote>
<p>添加了定时任务后， <code>terminal</code> 每次操作都会有 mail 提示，这个有点麻烦.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 查看定时任务</span><br><span class="line">$ crontab -l</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 编辑定时任务</span><br><span class="line">$ crontab -e</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 每分钟都去执行 auto-delete-task.sh 脚本.</span><br><span class="line">* * * * * cd ~&#x2F;auto-task-scripts &amp;&amp; .&#x2F;auto-delete-task.sh</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 每天 (凌晨 01:01) 执行 auto-task-scripts 内的 auto-delete-task.sh 脚本.</span><br><span class="line">01 01 * * * cd ~&#x2F;auto-task-scripts &amp;&amp; .&#x2F;auto-delete-task.sh</span><br><span class="line"></span><br><span class="line">&#96;&#96;&#96;  </span><br><span class="line"></span><br><span class="line">#### 3.修改 cron 的权限</span><br><span class="line"></span><br><span class="line">###### 1.经过以上的步骤，你会发现手动执行脚本可以删除指定的文件，但是用自动化的 cron 执行脚本就不会有效果，查看 &#96;&#x2F;private&#x2F;var&#x2F;mail&#x2F;user&#96; 文件，可以看到 ls 与 find 命令都没有权限</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p> ls: : Operation not permitted</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">###### 2.为 cron 添加 &#96;Full Disk Access&#96; 的权限</span><br><span class="line">* 1.在 Terminal 中执行以下命令，查看 cron 的路径</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p> % which cron<br>/usr/sbin/cron</p>
<pre><code>
* 2.在 `System preferences.app &gt; Security &amp; Privacy &gt; Privacy &gt; Full Disk Access` 中，添加 cron 即可.
</code></pre>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 下 Terminal 设置代理</title>
    <url>/2019/07/22/Mac_terminal_setProxy/</url>
    <content><![CDATA[<blockquote>
<p>对 Mac 电脑下的 Terminal 设置代理</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h2><ul>
<li>1.<a href="https://miao1007.github.io/%E5%9C%A8mac%E7%BB%88%E7%AB%AF%E4%B8%8B%E9%85%8D%E7%BD%AEproxy/">在Mac终端下配置Proxy</a></li>
</ul>
<h2 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤:"></a>2.步骤:</h2><ul>
<li>1.用 SS 来配置 Proxy</li>
<li>2.用终端打开 <code>~/. bash_profile</code> 文件： <code>open -a xcode ~/. bash_profile</code></li>
<li>3.新增以下内容:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#proxy</span><br><span class="line">LANTERN&#x3D;&#39;127.0.0.1:8787&#39;</span><br><span class="line"># 需要手动开启</span><br><span class="line">SS_1086&#x3D;&#39;127.0.0.1:1086&#39;</span><br><span class="line">SS&#x3D;&#39;127.0.0.1:1087&#39;</span><br><span class="line">SS_1089&#x3D;&#39;127.0.0.1:1089&#39;</span><br><span class="line">COW&#x3D;&#39;127.0.0.1:7777&#39;</span><br><span class="line">POLIPO&#x3D;&#39;127.0.0.1:8123&#39;</span><br><span class="line">defp&#x3D;$SS</span><br><span class="line"></span><br><span class="line"># No Proxy</span><br><span class="line">function noproxy</span><br><span class="line">&#123;</span><br><span class="line">unset http_proxy HTTP_PROXY https_proxy HTTPS_PROXY all_proxy ALL_PROXY ftp_proxy FTP_PROXY dns_proxy DNS_PROXY JAVA_OPTS GRADLE_OPTS MAVEN_OPTS</span><br><span class="line">echo &quot;clear proxy done&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function setproxy</span><br><span class="line">&#123;</span><br><span class="line">if [ $# -eq 0 ]</span><br><span class="line">then</span><br><span class="line">inArg&#x3D;$defp</span><br><span class="line">else</span><br><span class="line">inArg&#x3D;$1</span><br><span class="line">fi</span><br><span class="line">HOST&#x3D;$(echo $inArg |cut -d: -f1)</span><br><span class="line">PORT&#x3D;$(echo $inArg |cut -d: -f2)</span><br><span class="line">http_proxy&#x3D;http:&#x2F;&#x2F;$HOST:$PORT</span><br><span class="line">HTTP_PROXY&#x3D;$http_proxy</span><br><span class="line">all_proxy&#x3D;$http_proxy</span><br><span class="line">ALL_PROXY&#x3D;$http_proxy</span><br><span class="line">ftp_proxy&#x3D;$http_proxy</span><br><span class="line">FTP_PROXY&#x3D;$http_proxy</span><br><span class="line">dns_proxy&#x3D;$http_proxy</span><br><span class="line">DNS_PROXY&#x3D;$http_proxy</span><br><span class="line">https_proxy&#x3D;$http_proxy</span><br><span class="line">HTTPS_PROXY&#x3D;$https_proxy</span><br><span class="line">JAVA_OPTS&#x3D;&quot;-Dhttp.proxyHost&#x3D;$HOST -Dhttp.proxyPort&#x3D;$PORT -Dhttps.proxyHost&#x3D;$HOST -Dhttps.proxyPort&#x3D;$PORT&quot;</span><br><span class="line">GRADLE_OPTS&#x3D;&quot;-Dgradle.user.home&#x3D;$HOME&#x2F;.gradle&quot;</span><br><span class="line">MAVEN_OPTS&#x3D;$JAVA_OPTS</span><br><span class="line">no_proxy&#x3D;&quot;localhost,127.0.0.1,localaddress,.localdomain.com,.coding.net,.ruby-china.org&quot;</span><br><span class="line">echo &quot;current proxy is $&#123;http_proxy&#125;&quot;</span><br><span class="line">export no_proxy http_proxy HTTP_PROXY https_proxy HTTPS_PROXY all_proxy ALL_PROXY ftp_proxy FTP_PROXY dns_proxy DNS_PROXY JAVA_OPTS GRADLE_OPTS MAVEN_OPTS</span><br><span class="line">&#125;</span><br><span class="line"># 打开终端就自动启动代理</span><br><span class="line">setproxy</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>4.重启终端,会看到以下的输出 <code>current proxy is http://127.0.0.1:1087</code>:</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Mac/MacSetProxy/Snip20190722_1.png"></p>
<ul>
<li>5.其他的一些控制命令:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#当不需要时，可以执行noproxy以取消</span><br><span class="line">$ noproxy </span><br><span class="line">clear proxy done</span><br><span class="line"></span><br><span class="line">#当然可以在某些情况下手动修改地址</span><br><span class="line">$ setproxy $depf</span><br><span class="line">current proxy is http:&#x2F;&#x2F;127.0.0.1:8123</span><br><span class="line">$ setproxy $LANTERN</span><br><span class="line">current proxy is http:&#x2F;&#x2F;127.0.0.1:8787</span><br><span class="line">$ setproxy 127.0.0.1:443</span><br><span class="line">current proxy is http:&#x2F;&#x2F;127.0.0.1:443</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>6.查看效果:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MacPro:~ glb_gz$ curl https:&#x2F;&#x2F;ip.cn</span><br><span class="line">&#123;&quot;ip&quot;: &quot;66.62.41.113&quot;, &quot;country&quot;: &quot;美国&quot;, &quot;city&quot;: &quot;&quot;&#125;</span><br><span class="line">MacPro:~ glb_gz$ </span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac上七牛云的用法</title>
    <url>/2018/11/20/Mac%E4%B8%8A%E4%B8%83%E7%89%9B%E4%BA%91%E7%9A%84%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<h3 id="记录下在-Mac-上怎样使用七牛云去存储图片"><a href="#记录下在-Mac-上怎样使用七牛云去存储图片" class="headerlink" title="记录下在 Mac 上怎样使用七牛云去存储图片"></a>记录下在 Mac 上怎样使用七牛云去存储图片</h3><a id="more"></a>

<h2 id="1-新建一个-存储空间"><a href="#1-新建一个-存储空间" class="headerlink" title="1.新建一个 存储空间"></a><a href="#new_store">1.新建一个 存储空间</a></h2><h2 id="2-添加一个域名"><a href="#2-添加一个域名" class="headerlink" title="2.添加一个域名"></a><a href="#add_domain">2.添加一个域名</a></h2><h2 id="3-使用-chrome-qiniu-upload-files-插件快速上传图片"><a href="#3-使用-chrome-qiniu-upload-files-插件快速上传图片" class="headerlink" title="3.使用 chrome/qiniu upload files 插件快速上传图片"></a><a href="#use_plugin">3.使用 <code>chrome/qiniu upload files</code> 插件快速上传图片</a></h2><hr>
<hr>
<hr>
<h2 id="1-新建一个-存储空间-1"><a href="#1-新建一个-存储空间-1" class="headerlink" title="1.新建一个 存储空间"></a>1.新建一个 存储空间<a name="new_store"/></h2><ul>
<li>1.这里一定要选择 华东地区，因为 <code>Chrome</code> 上的插件 <code>qiniu upload files</code> 只支持 华东地区.</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Mac/qiNiuYun/Snip20181120_2.png"></p>
<hr>
<h2 id="2-添加一个域名-1"><a href="#2-添加一个域名-1" class="headerlink" title="2.添加一个域名"></a>2.添加一个域名<a name="add_domain"/></h2><ul>
<li><p>1.因为自动分配的域名会 30 天后过期，所以需要添加一个经过 <code>ICP</code> 备案的域名,我这里为 <code>pic.pgyjz.cn</code>.</p>
</li>
<li><p>2.添加后，七牛云 会分配一个域名给你，你把它添加到域名管理后台的 CNAME 的记录值那里就可以了(我这里为 阿里云 的域名管理后台).</p>
</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Mac/qiNiuYun/Snip20181120_4.png"></p>
<hr>
<h2 id="3-使用-chrome-qiniu-upload-files-插件快速上传图片-1"><a href="#3-使用-chrome-qiniu-upload-files-插件快速上传图片-1" class="headerlink" title="3.使用 chrome/qiniu upload files 插件快速上传图片"></a>3.使用 <code>chrome/qiniu upload files</code> 插件快速上传图片<a name="use_plugin"/></h2><ul>
<li>1.到 <code>个人中心</code>-&gt;<code>密钥管理</code> 处,取得相应的 <code>密钥</code>.</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Mac/qiNiuYun/Snip20181120_5.png"></p>
<ul>
<li>2.下载 <code>chrome/qiniu upload files</code> .</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Mac/qiNiuYun/Snip20181120_6.png"></p>
<ul>
<li>3.拖拉图片，即可上传</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Mac/qiNiuYun/Snip20181120_7.png"></p>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac上的抓包工具分析</title>
    <url>/2018/03/02/Mac%E4%B8%8A%E7%9A%84%E6%8A%93%E5%8C%85%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h3 id="1-Charles"><a href="#1-Charles" class="headerlink" title="1.Charles"></a><a href="#charles">1.Charles</a></h3><h5 id="1-抓取-APP-的数据"><a href="#1-抓取-APP-的数据" class="headerlink" title="1.抓取 APP 的数据"></a>1.抓取 APP 的数据</h5><h5 id="2-抓取-Mac-上的数据"><a href="#2-抓取-Mac-上的数据" class="headerlink" title="2.抓取 Mac 上的数据"></a>2.抓取 Mac 上的数据</h5><h5 id="3-Charles-通过-Shadowsocks-去抓取被墙的网站的数据"><a href="#3-Charles-通过-Shadowsocks-去抓取被墙的网站的数据" class="headerlink" title="3.Charles 通过 Shadowsocks 去抓取被墙的网站的数据."></a>3.Charles 通过 Shadowsocks 去抓取被墙的网站的数据.</h5><h3 id="2-Wireshark"><a href="#2-Wireshark" class="headerlink" title="2. Wireshark"></a><a href="#wireshark">2. Wireshark</a></h3><a id="more"></a>

<hr>
<hr>
<hr>
<h3 id="1-Charles-1"><a href="#1-Charles-1" class="headerlink" title="1.Charles"></a>1.Charles<a name="charles"/></h3><blockquote>
<p>可以抓取普通的 Get,post 的数据.</p>
</blockquote>
<h5 id="1-抓取-APP-的数据-1"><a href="#1-抓取-APP-的数据-1" class="headerlink" title="1.抓取 APP 的数据"></a>1.抓取 APP 的数据</h5><ul>
<li><p>1.参考: <a href="https://www.jianshu.com/p/235bc6c3ca77">https://www.jianshu.com/p/235bc6c3ca77</a></p>
</li>
<li><p>2.代理:因为原理是通过代理去抓取数据，所以 APP 可以通过判断手机的网络是否启用了代理去禁止 APP 的启动.</p>
<ul>
<li><a href="https://www.jianshu.com/p/798702779d59">1.Android 判断设备 是否使用代理上网</a></li>
</ul>
</li>
</ul>
<h5 id="2-抓取-Mac-上的数据-1"><a href="#2-抓取-Mac-上的数据-1" class="headerlink" title="2.抓取 Mac 上的数据"></a>2.抓取 Mac 上的数据</h5><blockquote>
<p>1.注意不要开通其它的代理，否则会导致抓取不到数据</p>
<p>2.参考: <a href="https://zhuanlan.zhihu.com/p/26182135">Mac上使用Charles抓包</a></p>
</blockquote>
<ul>
<li>1.开通了其它的代理设置时,抓取不到数据的情况截图:</li>
</ul>
<p><img src="/assets/imgs/web/ScreenShot_2018-10-08_11.35.56.png"></p>
<ul>
<li>2.正常抓取的截图:</li>
</ul>
<p><img src="/assets/imgs/web/ScreenShot_2018-10-08_11.36.57.png"></p>
<h5 id="3-Charles-通过-ShadowsocksX-NG-去抓取被墙的网站的数据"><a href="#3-Charles-通过-ShadowsocksX-NG-去抓取被墙的网站的数据" class="headerlink" title="3.Charles 通过 ShadowsocksX-NG 去抓取被墙的网站的数据."></a>3.Charles 通过 ShadowsocksX-NG 去抓取被墙的网站的数据.</h5><ul>
<li><p>1.参考:</p>
<ul>
<li><a href="https://sayue.me/2018/04/04/Charles%E6%94%AF%E6%8C%81%E9%80%9A%E8%BF%87shadowsocks%E4%BB%A3%E7%90%86%E6%8A%93%E5%8C%85/">Charles支持通过Shadowsocks代理抓包</a></li>
</ul>
</li>
<li><p>2.详细的步骤</p>
<ul>
<li><p>1.<code>ShadowsocksX-NG</code> 中配置的信息</p>
<ul>
<li>1.如我这里为 <code>Local Socks5 Listen Address:Port</code> 为 <code>127.0.0.1:1086</code>,<code>HTTP Proxy Listen Address:Port</code> 为 <code>127.0.0.1:1087</code><br>![](<a href="http://pic.pgyjz.cn/blog/Mac/screenshot">http://pic.pgyjz.cn/blog/Mac/screenshot</a> 2019-01-12 at 22.41.28.png)<br>![](<a href="http://pic.pgyjz.cn/blog/Mac/screenshot">http://pic.pgyjz.cn/blog/Mac/screenshot</a> 2019-01-12 at 22.36.35.png)<br>![](<a href="http://pic.pgyjz.cn/blog/Mac/screenshot">http://pic.pgyjz.cn/blog/Mac/screenshot</a> 2019-01-12 at 22.43.04.png)</li>
</ul>
</li>
<li><p>2.系统中 <code>Preferences/Network/Advanced/Proxies</code> 中 <code>Web Proxy(HTTP)</code>,<code>Secure Web Proxy(HTTPS)</code> <code>SOCKS Proxy</code> 都为 <code>127.0.0.1:1086</code>.<br>![](<a href="http://pic.pgyjz.cn/blog/Mac/screenshot">http://pic.pgyjz.cn/blog/Mac/screenshot</a> 2019-01-12 at 22.36.54.png)</p>
</li>
<li><p>3.修改 <code>Charles/Proxy</code> 中的 <code>SSL Proxying Setting</code>(监听 HTTPS) 和 <code>External Proxy Settings</code>(配置 Charles 通过 SS 代理,配置为 <code>127.0.0.1:1087</code>),分别为下图:<br>![](<a href="http://pic.pgyjz.cn/blog/Mac/screenshot">http://pic.pgyjz.cn/blog/Mac/screenshot</a> 2019-01-12 at 22.50.45.png)<br>![](<a href="http://pic.pgyjz.cn/blog/Mac/screenshot">http://pic.pgyjz.cn/blog/Mac/screenshot</a> 2019-01-12 at 22.50.57.png)<br>![](<a href="http://pic.pgyjz.cn/blog/Mac/screenshot">http://pic.pgyjz.cn/blog/Mac/screenshot</a> 2019-01-12 at 22.51.10.png)</p>
</li>
<li><p>4.手机访问 google 的效果<br>![](<a href="http://pic.pgyjz.cn/blog/Mac/screenshot">http://pic.pgyjz.cn/blog/Mac/screenshot</a> 2019-01-12 at 22.38.09.png)</p>
</li>
</ul>
</li>
</ul>
<hr>
<h3 id="2-Wireshark-1"><a href="#2-Wireshark-1" class="headerlink" title="2. Wireshark"></a>2. Wireshark<a name="wireshark"/></h3><blockquote>
<p>参考1：<a href="https://www.jianshu.com/p/62f00db7be68">https://www.jianshu.com/p/62f00db7be68</a><br>参考2：<a href="https://www.bo56.com/mac%E5%AE%89%E8%A3%85wireshark/">https://www.bo56.com/mac%E5%AE%89%E8%A3%85wireshark/</a></p>
</blockquote>
<h4 id="2-1-用-wireshark-抓到的-TCP-包-的数据截图"><a href="#2-1-用-wireshark-抓到的-TCP-包-的数据截图" class="headerlink" title="2.1.用 wireshark 抓到的 TCP 包 的数据截图"></a>2.1.用 wireshark 抓到的 TCP 包 的数据截图</h4><blockquote>
<p>该程序为 Android 手机与 Mac 建立的 TCP 链接，所截取的图.<br>ip.src == 10.100.1.251 or ip.dst == 10.100.1.251<br>ip.src == 183.232.231.173 or ip.dst == 183.232.231.173<br>ip.src == 14.215.177.39 or ip.dst == 14.215.177.39<br>ip.src == 42.121.17.113 or ip.dst == 42.121.17.113<br>ip.src == 120.26.196.41 or ip.dst == 120.26.196.41</p>
</blockquote>
<blockquote>
<p>Server:<a href="https://github.com/ghzjtian/TCP_Server">https://github.com/ghzjtian/TCP_Server</a><br>Android:<a href="https://github.com/ghzjtian/TCP_Android">https://github.com/ghzjtian/TCP_Android</a></p>
</blockquote>
<p><img src="/assets/imgs/web/Screenshot_20180302-180708.png"><br><img src="/assets/imgs/web/ScreenShot2018-03-02_18.06.57.png"><br><img src="/assets/imgs/web/ScreenShot2018-03-02_18.07.02.png"><br><img src="/assets/imgs/web/ScreenShot2018-03-02_18.06.53.png"></p>
<h4 id="2-2截取其它-APP-的-TCP-链接数据"><a href="#2-2截取其它-APP-的-TCP-链接数据" class="headerlink" title="2.2截取其它 APP 的 TCP 链接数据."></a>2.2截取其它 APP 的 TCP 链接数据.</h4>]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac 下 PATH 变量的添加</title>
    <url>/2018/06/01/Mac%E4%B8%8BPATH%E5%8F%98%E9%87%8F%E7%9A%84%E6%B7%BB%E5%8A%A0/</url>
    <content><![CDATA[<h3 id="Mac-下-PATH-变量的添加"><a href="#Mac-下-PATH-变量的添加" class="headerlink" title="Mac 下 PATH 变量的添加"></a>Mac 下 PATH 变量的添加</h3><ul>
<li><p>记录下在终端环境下，添加 其它程序的 命令到 terminal 中，实现在任何地方都可以立刻执行程序的命令.</p>
</li>
<li><p>参考1: <a href="https://stackoverflow.com/questions/25373188/laravel-installation-how-to-place-the-composer-vendor-bin-directory-in-your">https://stackoverflow.com/questions/25373188/laravel-installation-how-to-place-the-composer-vendor-bin-directory-in-your</a></p>
</li>
<li><p>参考2: <a href="https://stackoverflow.com/questions/25373188/laravel-installation-how-to-place-the-composer-vendor-bin-directory-in-your">https://stackoverflow.com/questions/25373188/laravel-installation-how-to-place-the-composer-vendor-bin-directory-in-your</a></p>
</li>
</ul>
<a id="more"></a>

<h4 id="1-没添加环境变量前后对比"><a href="#1-没添加环境变量前后对比" class="headerlink" title="1.没添加环境变量前后对比:"></a>1.没添加环境变量前后对比:</h4><ul>
<li>1.添加前<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tianzeng$ laravel</span><br><span class="line">-bash: laravel: command not found</span><br></pre></td></tr></table></figure></li>
<li>2.添加后:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ laravel</span><br><span class="line">Laravel Installer 2.0.1</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  command [options] [arguments]</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -h, --help            Display this help message</span><br><span class="line">  -q, --quiet           Do not output any message</span><br><span class="line">  -V, --version         Display this application version</span><br><span class="line">      --ansi            Force ANSI output</span><br><span class="line">      --no-ansi         Disable ANSI output</span><br><span class="line">  -n, --no-interaction  Do not ask any interactive question</span><br><span class="line">  -v|vv|vvv, --verbose  Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</span><br><span class="line"></span><br><span class="line">Available commands:</span><br><span class="line">  help  Displays help for a command</span><br><span class="line">  list  Lists commands</span><br><span class="line">  new   Create a new Laravel application.</span><br><span class="line">tianzeng$ </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-添加的方式"><a href="#2-添加的方式" class="headerlink" title="2.添加的方式"></a>2.添加的方式</h3><ul>
<li>1.如添加 laravel:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &#39;export PATH&#x3D;&quot;$PATH:$HOME&#x2F;.composer&#x2F;vendor&#x2F;bin&quot;&#39; &gt;&gt; ~&#x2F;.bashrc</span><br><span class="line">source ~&#x2F;.bashrc</span><br></pre></td></tr></table></figure>
<ul>
<li>2.如果是以 ~/.bash_profile 去执行环境变量的话</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &#39;export PATH&#x3D;&quot;$PATH:$HOME&#x2F;.composer&#x2F;vendor&#x2F;bin&quot;&#39; &gt;&gt; ~&#x2F;.bash_profile</span><br></pre></td></tr></table></figure>

<h3 id="3-查看效果"><a href="#3-查看效果" class="headerlink" title="3.查看效果"></a>3.查看效果</h3><blockquote>
<p>从新打开一个 terminal 即可.</p>
</blockquote>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac下apache的SSL</title>
    <url>/2018/04/11/Mac%E4%B8%8Bapache%E7%9A%84SSL/</url>
    <content><![CDATA[<h3 id="Mac下apache的SSL"><a href="#Mac下apache的SSL" class="headerlink" title="Mac下apache的SSL"></a>Mac下apache的SSL</h3><a id="more"></a>

<h4 id="1-相关参考"><a href="#1-相关参考" class="headerlink" title="1.相关参考:"></a>1.相关参考:</h4><ul>
<li>参考1: <a href="https://www.jianshu.com/p/b2a9655fe687">https://www.jianshu.com/p/b2a9655fe687</a></li>
<li>参考2: <a href="https://getgrav.org/blog/macos-sierra-apache-ssl">https://getgrav.org/blog/macos-sierra-apache-ssl</a></li>
<li>参考3: <a href="https://gist.github.com/jonathantneal/774e4b0b3d4d739cbc53">https://gist.github.com/jonathantneal/774e4b0b3d4d739cbc53</a></li>
<li>参考4: <a href="https://discussions.apple.com/thread/3184919">https://discussions.apple.com/thread/3184919</a></li>
</ul>
<h4 id="2-过程"><a href="#2-过程" class="headerlink" title="2.过程"></a>2.过程</h4><ul>
<li><p>1.在参照 <code>参考1</code> 配置无效的情况下，参照 <code>参考2</code> 才配置好了(Mac 的系统版本为 10.12.6 (16G29),macOS Sierra)!</p>
</li>
<li><p>2.手机，电脑 通过 <code>https</code> 也可以正常地访问.</p>
</li>
<li><p>3.不知道为什么，本地的电脑始终无法被外网访问 443 端口 ，明明已经做了映射.</p>
</li>
<li><p>4.参照了 <code>参考3</code> 后，还是不能正常地访问，而且发现了新的问题:</p>
<ul>
<li>1.SSL 的 <code>DocumentRoot</code> 的路径不能被修改，已修改就会出现 <code>Forbidden,You don&#39;t have permission to access / on this server.</code></li>
</ul>
</li>
<li><p>5.在关闭 <code>httpd</code> 时，发现一些奇怪的问题:</p>
<ul>
<li>1.运行命令 <code>sudo apachectl -k stop</code> , http 没反应，但 https 已经关闭了.</li>
<li>2.在参照了 <code>参考4</code>后，运行命令 <code> sudo killall httpd</code>,才把 http 关闭了.  </li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac修改截图的默认文件名</title>
    <url>/2018/06/01/Mac%E4%BF%AE%E6%94%B9%E6%88%AA%E5%9B%BE%E7%9A%84%E9%BB%98%E8%AE%A4%E6%96%87%E4%BB%B6%E5%90%8D/</url>
    <content><![CDATA[<h3 id="Mac修改截图的默认文件名"><a href="#Mac修改截图的默认文件名" class="headerlink" title="Mac修改截图的默认文件名"></a>Mac修改截图的默认文件名</h3><ul>
<li>1.转载自: <a href="http://www.mycode.net.cn/platform/linux-unix/1398.html">Mac OS X EI Capitan 修改截图的默认文件名</a></li>
</ul>
<a id="more"></a>

<h4 id="1-方法"><a href="#1-方法" class="headerlink" title="1.方法"></a>1.方法</h4><ul>
<li>1.方法就是在重启系统，在启动过程中，按住 ⌘R，在进入恢复界面后，选择上面菜单的 实用工具-&gt;终端，打开终端后输入 csrutil disable 关闭掉系统的 SIP 保护机制，然后重启再次进入系统，此时就可以修改系统文件了。接下来按如下步骤修改你需要的效果。</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 打开要修改的文件目录</span><br><span class="line">cd &#x2F;System&#x2F;Library&#x2F;CoreServices&#x2F;SystemUIServer.app&#x2F;Contents&#x2F;Resources&#x2F;zh_CN.lproj</span><br><span class="line">&#x2F;&#x2F; 转换文件为 xml 格式</span><br><span class="line">sudo plutil -convert xml1 ScreenCapture.strings</span><br><span class="line">&#x2F;&#x2F; 用 vi 修改转换后的文件</span><br><span class="line">sudo vi ScreenCapture.strings</span><br></pre></td></tr></table></figure>

<p>修改为下面的样子:<br><img src="http://p3v7okj0k.bkt.clouddn.com/wp-content/uploads/2016/01/2016-01-02_21.06.20.png"></p>
<ul>
<li>2.按上面的修改保存后，再转换文件为纯二进制的，并重启 SystemUIServer：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo plutil -convert binary1 ScreenCapture.strings</span><br><span class="line">killall SystemUIServer</span><br></pre></td></tr></table></figure>

<ul>
<li>3.如上修改完成后，我截图后文件保存的格式就是 2016-01-02_21.06.20.png 了，根据你自己的需求，你可以修改为任意其他的格式。最后别忘记，再次进入恢复模式，将 SIP 重新开起来。命令是 csrutil enable。</li>
</ul>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac的PHP升级</title>
    <url>/2018/11/13/Mac%E7%9A%84PHP%E5%8D%87%E7%BA%A7/</url>
    <content><![CDATA[<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a><a href="#references">1.参考</a></h2><a id="more"></a>
<h2 id="2-具体的过程"><a href="#2-具体的过程" class="headerlink" title="2.具体的过程"></a><a href="#detail">2.具体的过程</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考<a name="references"/></h2><ul>
<li><a href="https://medium.com/zenchef-tech-and-product/how-to-upgrade-your-version-of-php-to-7-0-on-macos-sierra-e1bfdea55a63">1.How to upgrade your version of PHP to 7.0 on macOS Sierra</a></li>
<li><a href="https://coolestguidesontheplanet.com/upgrade-php-on-osx/">2.Upgrade to PHP 7.3 or 7.2 on macOS Mojave, Sierra or on OSX 10.6 – 10.11</a></li>
</ul>
<hr>
<h2 id="2-具体的过程-1"><a href="#2-具体的过程-1" class="headerlink" title="2.具体的过程"></a>2.具体的过程<a name="detail"/></h2><h4 id="1-升级前"><a href="#1-升级前" class="headerlink" title="1.升级前"></a>1.升级前</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ php -v</span><br><span class="line">PHP 5.6.30 (cli) (built: Oct 29 2017 20:30:32) </span><br><span class="line">Copyright (c) 1997-2016 The PHP Group</span><br><span class="line">Zend Engine v2.6.0, Copyright (c) 1998-2016 Zend Technologies</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<ul>
<li><p>1.然后输入 <code>curl -s https://php-osx.liip.ch/install.sh | bash -s 7.2</code> 进行升级</p>
</li>
<li><p>2.提示升级完毕后，重启 <code>terminal</code>,输入 <code>php -v</code> ,即可看到新版本:</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> php -v</span><br><span class="line">PHP 7.2.12 (cli) (built: Nov  9 2018 11:03:05) ( NTS )</span><br><span class="line">Copyright (c) 1997-2018 The PHP Group</span><br><span class="line">Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies</span><br><span class="line">    with Zend OPcache v7.2.12, Copyright (c) 1999-2018, by Zend Technologies</span><br></pre></td></tr></table></figure>

<h2 id="3-简单的-php-服务器"><a href="#3-简单的-php-服务器" class="headerlink" title="3.简单的 php 服务器"></a>3.简单的 php 服务器</h2><ul>
<li>1.在 terminal 运行以下命令<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">php -S 10.100.1.172:8080 -t .</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac相关的信息</title>
    <url>/2017/12/19/Mac%E7%9B%B8%E5%85%B3%E7%9A%84%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<h1 id="Mac相关的信息"><a href="#Mac相关的信息" class="headerlink" title="Mac相关的信息"></a>Mac相关的信息</h1><ul>
<li>主要记录在 Mac 相关的命令及配置的信息 .</li>
</ul>
<a id="more"></a>

<h2 id="1-修改-DNS-信息"><a href="#1-修改-DNS-信息" class="headerlink" title="1.修改 DNS 信息."></a><a href="#modify_DNS">1.修改 DNS 信息.</a></h2><h2 id="2-Web-服务器"><a href="#2-Web-服务器" class="headerlink" title="2.Web 服务器"></a><a href="#Web_server">2.Web 服务器</a></h2><h2 id="3-Mysql-相关"><a href="#3-Mysql-相关" class="headerlink" title="3.Mysql 相关"></a><a href="#mysql_server">3.Mysql 相关</a></h2><h2 id="4-MAMP搭建"><a href="#4-MAMP搭建" class="headerlink" title="4.MAMP搭建"></a><a href="#mamp_install">4.MAMP搭建</a></h2><h2 id="5-Web-Nginx-服务器"><a href="#5-Web-Nginx-服务器" class="headerlink" title="5.Web(Nginx) 服务器"></a><a href="#web_server_nginx">5.Web(Nginx) 服务器</a></h2><h2 id="6-解压文件"><a href="#6-解压文件" class="headerlink" title="6.解压文件"></a><a href="#unrar_folder">6.解压文件</a></h2><hr>
<hr>
<hr>
<h2 id="1-修改-DNS-信息-1"><a href="#1-修改-DNS-信息-1" class="headerlink" title="1.修改 DNS 信息."></a>1.修改 DNS 信息.<a name="modify_DNS"/></h2><blockquote>
<p>修改本地的 DNS 信息,直接用 域名访问指定的 IP 地址的信息.</p>
</blockquote>
<blockquote>
<p>如访问 127.0.0.1<br>访问局域网内的其它机器.</p>
</blockquote>
<ul>
<li>修改 /etc/hosts 文件.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">##</span><br><span class="line"># Host Database</span><br><span class="line">#</span><br><span class="line"># localhost is used to configure the loopback interface</span><br><span class="line"># when the system is booting.  Do not change this entry.</span><br><span class="line">##</span><br><span class="line">127.0.0.1	localhost</span><br><span class="line">255.255.255.255	broadcasthost</span><br><span class="line">::1             localhost</span><br><span class="line">127.0.0.1	www.glbmac.com</span><br><span class="line">10.100.1.217	www.glbgz.com</span><br></pre></td></tr></table></figure>

<h2 id="2-Web-服务器-1"><a href="#2-Web-服务器-1" class="headerlink" title="2.Web 服务器"></a>2.Web 服务器<a name="Web_server"/></h2><blockquote>
<p>Mac(macOS Sierra,Ver 10.12.6) 自带 apache2 服务器.</p>
</blockquote>
<h5 id="1-修改-httpd-conf-目录"><a href="#1-修改-httpd-conf-目录" class="headerlink" title="1.修改 httpd.conf 目录."></a>1.修改 httpd.conf 目录.</h5><blockquote>
<p>/private/etc/apache2/httpd.conf</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#去除前面的#号,使得 apache2 支持 php</span><br><span class="line">LoadModule php5_module libexec&#x2F;apache2&#x2F;libphp5.so</span><br><span class="line"></span><br><span class="line">#修改Directory</span><br><span class="line">&lt;Directory &#x2F;&gt;</span><br><span class="line">AllowOverride none</span><br><span class="line">Require all granted</span><br><span class="line">&lt;&#x2F;Directory&gt;</span><br><span class="line"></span><br><span class="line">#把目录改为自己的目录(Mac 限制了只能在 user 中的 Sites 下建立主目录)</span><br><span class="line">DocumentRoot &quot;&#x2F;Users&#x2F;tianzeng&#x2F;Sites&quot;</span><br><span class="line">&lt;Directory &quot;&#x2F;Users&#x2F;tianzeng&#x2F;Sites&quot;&gt;</span><br><span class="line">#发现也可以在 &#x2F;private&#x2F;etc&#x2F;apache2&#x2F;extra&#x2F;httpd-userdir.conf 下修改主目录，但没验证</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h5 id="2-修改-httpd-vhosts-conf"><a href="#2-修改-httpd-vhosts-conf" class="headerlink" title="2.修改 httpd-vhosts.conf"></a>2.修改 httpd-vhosts.conf</h5><blockquote>
<p>/private/etc/apache2/extra/httpd-vhosts.conf</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#可以用域名代替 localhost</span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">DocumentRoot &quot;&#x2F;Users&#x2F;tianzeng&#x2F;Sites&quot;</span><br><span class="line">ServerName www.mysites.com</span><br><span class="line">ErrorLog &quot;&#x2F;private&#x2F;var&#x2F;log&#x2F;apache2&#x2F;sites-error_log&quot;</span><br><span class="line">CustomLog &quot;&#x2F;private&#x2F;var&#x2F;log&#x2F;apache2&#x2F;sites-access_log&quot; common</span><br><span class="line">&lt;Directory &#x2F;&gt;</span><br><span class="line">Options Indexes FollowSymLinks MultiViews</span><br><span class="line">AllowOverride None</span><br><span class="line">Order deny,allow</span><br><span class="line">Allow from all</span><br><span class="line">&lt;&#x2F;Directory&gt;</span><br><span class="line">&lt;&#x2F;VirtualHost&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="3-控制的命令"><a href="#3-控制的命令" class="headerlink" title="3.控制的命令"></a>3.控制的命令</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apachectl start</span><br><span class="line">sudo apachectl stop</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="3-Mysql-相关-1"><a href="#3-Mysql-相关-1" class="headerlink" title="3.Mysql 相关"></a>3.Mysql 相关<a name="mysql_server"/></h2><h4 id="1-相关控制命令"><a href="#1-相关控制命令" class="headerlink" title="1.相关控制命令"></a>1.相关控制命令</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#启动／停止命令</span><br><span class="line"></span><br><span class="line">On macOS Sierra &amp; OS to start&#x2F;stop&#x2F;restart MySQL post 5.7  from the command line:</span><br><span class="line">start: sudo launchctl load -F &#x2F;Library&#x2F;LaunchDaemons&#x2F;com.oracle.oss.mysql.mysqld.plist</span><br><span class="line">stop: sudo launchctl unload -F &#x2F;Library&#x2F;LaunchDaemons&#x2F;com.oracle.oss.mysql.mysqld.plist</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="4-MAMP搭建-1"><a href="#4-MAMP搭建-1" class="headerlink" title="4.MAMP搭建"></a>4.MAMP搭建<a name="mamp_install"/></h2><blockquote>
<p>详细教程: <a href="http://www.jianshu.com/p/d560ce2318c5">http://www.jianshu.com/p/d560ce2318c5</a></p>
<p><a href="http://www.jianshu.com/p/a665a6372e42">http://www.jianshu.com/p/a665a6372e42</a></p>
<p>Macintosh、Apache、MySQL和PHP</p>
</blockquote>
<h4 id="1-下载-MAMP"><a href="#1-下载-MAMP" class="headerlink" title="1.下载 MAMP"></a>1.下载 MAMP</h4><ul>
<li>到 百度云 下载破解版(有钱请支持正版),然后<ul>
<li>1.需要先打开 mamp</li>
<li>2.再运行 mamp pro </li>
</ul>
</li>
</ul>
<h4 id="2-关闭原先系统的开发环境"><a href="#2-关闭原先系统的开发环境" class="headerlink" title="2.关闭原先系统的开发环境"></a>2.关闭原先系统的开发环境</h4><ul>
<li>1.Mysql<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo launchctl unload -F &#x2F;Library&#x2F;LaunchDaemons&#x2F;com.oracle.oss.mysql.mysqld.plist</span><br></pre></td></tr></table></figure></li>
<li>2.Apache2<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo apachectl stop</span><br></pre></td></tr></table></figure>

</li>
</ul>
<h4 id="3-MAMP-各种文件路径"><a href="#3-MAMP-各种文件路径" class="headerlink" title="3.MAMP 各种文件路径"></a>3.MAMP 各种文件路径</h4><p>1.配置文件:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;Library&#x2F;Application Support&#x2F;appsolute&#x2F;MAMP PRO&#x2F;conf</span><br></pre></td></tr></table></figure>


<h4 id="4-Mac-连接-MAMP-的内置-mysql"><a href="#4-Mac-连接-MAMP-的内置-mysql" class="headerlink" title="4.Mac 连接 MAMP 的内置 mysql"></a>4.Mac 连接 MAMP 的内置 mysql</h4><blockquote>
<p>1.修改 mamp 的 mysql 的默认端口为 3307.</p>
<p>2.连接教程: <a href="https://stackoverflow.com/questions/43157632/mysql-command-line-with-mamp">https://stackoverflow.com/questions/43157632/mysql-command-line-with-mamp</a></p>
</blockquote>
<ul>
<li>1.相关的步骤:<ul>
<li>1.Command Line 进入 <code>/Applications/MAMP/Library/bin </code></li>
<li>2.连接 mysql : <code> ./mysql -u root -p</code></li>
</ul>
</li>
</ul>
<hr>
<h2 id="5-Web-Nginx-服务器-1"><a href="#5-Web-Nginx-服务器-1" class="headerlink" title="5.Web(Nginx) 服务器"></a>5.Web(Nginx) 服务器<a name="web_server_nginx"/></h2><h3 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考:"></a>1.参考:</h3><ul>
<li>1.<a href="https://xu3352.github.io/mac/2018/09/06/mac-homebrew-update-slowly">更换 brew 镜像</a></li>
<li>2.<a href="https://www.jianshu.com/p/6c7cb820a020">Mac下用brew安装nginx</a></li>
<li>3.<a href="https://medium.com/@ThomasTan/installing-nginx-in-mac-os-x-maverick-with-homebrew-d8867b7e8a5a">Installing Nginx in Mac OS X Maverick With Homebrew</a></li>
</ul>
<h3 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤"></a>2.步骤</h3><ul>
<li>1.安装 nginx <code>brew install nginx</code>,安装完成后会出现:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Docroot is: &#x2F;usr&#x2F;local&#x2F;var&#x2F;www</span><br><span class="line"></span><br><span class="line">The default port has been set in &#x2F;usr&#x2F;local&#x2F;etc&#x2F;nginx&#x2F;nginx.conf to 8080 so that</span><br><span class="line">nginx can run without sudo.</span><br><span class="line"></span><br><span class="line">nginx will load all files in &#x2F;usr&#x2F;local&#x2F;etc&#x2F;nginx&#x2F;servers&#x2F;.</span><br><span class="line"></span><br><span class="line">To have launchd start nginx now and restart at login:</span><br><span class="line">  brew services start nginx</span><br><span class="line">Or, if you don&#39;t want&#x2F;need a background service you can just run:</span><br><span class="line">  nginx</span><br></pre></td></tr></table></figure>

<blockquote>
<p>我们从上面的返回可以看出， nginx 的配置文件在 <code>/usr/local/etc/nginx/nginx.conf</code> 中, 网站目录在 <code>/usr/local/var/www</code> 中.</p>
</blockquote>
<ul>
<li>2.控制的命令:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew services start nginx</span><br><span class="line">brew services stop nginx</span><br><span class="line">brew services restart nginx</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>以上命令可能会出现 <code>Error: Unknown command: services</code>, 可以以一下命令去控制:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo nginx</span><br><span class="line">sudo nginx -s stop</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="6-命令行解压"><a href="#6-命令行解压" class="headerlink" title="6.命令行解压"></a>6.命令行解压</h2><h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考</h2><ul>
<li>1.<a href="https://superuser.com/questions/52124/how-can-i-extract-rar-files-on-the-mac#comment2010675_52126">How can I extract .rar files on the Mac?</a></li>
<li>2.<a href="https://github.com/CocoaPods/CocoaPods/issues/7711">Unzip fail when zip contains chinese char on macOS 10.13</a></li>
</ul>
<h2 id="2-解压"><a href="#2-解压" class="headerlink" title="2.解压"></a>2.解压</h2><ul>
<li>1.unrar <code>.rar</code>文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Using Homebrew, in a terminal type:</span><br><span class="line"></span><br><span class="line">brew install unrar</span><br><span class="line"></span><br><span class="line">to use it just navigate to your file and type</span><br><span class="line"></span><br><span class="line">unrar x &lt;filename&gt;</span><br><span class="line"></span><br><span class="line">Or list files via unrar l archive.rar and extract single file: unrar e archive.rar folder&#x2F;file.exe desired_location&#x2F;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.unzip <code>zip</code> 文件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">unzip xxx.zip</span><br><span class="line"></span><br><span class="line">or </span><br><span class="line"></span><br><span class="line">ditto -V -x -k --sequesterRsrc --rsrc FILENAME.ZIP DESTINATIONDIRECTORY</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>MarkDown 相关</title>
    <url>/2018/10/23/MarkDown%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<blockquote>
<p>记录 MarkDown 使用的心得.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-MarkDown-下载"><a href="#1-MarkDown-下载" class="headerlink" title="1.MarkDown 下载"></a><a href="#download">1.MarkDown 下载</a></h2><h2 id="2-MarkDown-在-Mac-上面预览"><a href="#2-MarkDown-在-Mac-上面预览" class="headerlink" title="2.MarkDown 在 Mac 上面预览"></a><a href="#preview">2.MarkDown 在 Mac 上面预览</a></h2><h2 id="3-MarkDwon-的-语法"><a href="#3-MarkDwon-的-语法" class="headerlink" title="3.MarkDwon 的 语法"></a><a href="#syntax">3.MarkDwon 的 语法</a></h2><hr>
<hr>
<hr>
<h2 id="1-MarkDown-下载-1"><a href="#1-MarkDown-下载-1" class="headerlink" title="1.MarkDown 下载"></a>1.MarkDown 下载<a name="download"/></h2><ul>
<li>1.Mac 上推荐使用 <a href="https://macdown.uranusjr.com/"><code>MacDown</code></a>,觉得挺好用的.</li>
</ul>
<hr>
<h2 id="2-MarkDown-在-Mac-上面预览-1"><a href="#2-MarkDown-在-Mac-上面预览-1" class="headerlink" title="2.MarkDown 在 Mac 上面预览"></a>2.MarkDown 在 Mac 上面预览<a name="preview"/></h2><ul>
<li>1.默认 Mac 上面的 <code>*.md</code> 文件是没有预览功能的，所以就需要安装一个预览的插件: [qlmarkdown](QuickLook generator for Markdown files)</li>
<li>2.相关的命令:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#To install</span><br><span class="line">$ brew update</span><br><span class="line"></span><br><span class="line">$ brew cask install qlmarkdown</span><br><span class="line"></span><br><span class="line">#To uninstall:</span><br><span class="line"></span><br><span class="line">$ brew cask uninstall qlmarkdown</span><br></pre></td></tr></table></figure>

<h2 id="3-MarkDwon-的-语法-1"><a href="#3-MarkDwon-的-语法-1" class="headerlink" title="3.MarkDwon 的 语法"></a>3.MarkDwon 的 语法<a name="syntax"/></h2><ul>
<li>1.<a href="https://daringfireball.net/projects/markdown/syntax">MarkDown</a> 语法介绍</li>
<li>2.如果安装了 <code>MacDown</code> 后，也可以在这里 <code>/Applications/MacDown.app/Contents/Resources/help.md</code> 看到相关的语法介绍:<img src="/assets/imgs/Mac/Snip20181023_2.png" width="85%" height="85%">
<img src="/assets/imgs/Mac/ScreenShot_2018-10-23_12.37.40.png" width="80%" height="80%">

</li>
</ul>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>MongoDB</title>
    <url>/2020/06/08/Mongo-DB/</url>
    <content><![CDATA[<blockquote>
<p>MongoDB 基本操作</p>
</blockquote>
<a id="more"></a>

<h2 id="1-MongoDB"><a href="#1-MongoDB" class="headerlink" title="1.MongoDB"></a>1.MongoDB</h2><h2 id="2-C-中使用-MongoDB"><a href="#2-C-中使用-MongoDB" class="headerlink" title="2.C# 中使用 MongoDB"></a>2.C# 中使用 MongoDB</h2><hr>
<hr>
<hr>
<h2 id="1-MongoDB-1"><a href="#1-MongoDB-1" class="headerlink" title="1.MongoDB"></a>1.MongoDB</h2><ul>
<li>1.<a href="https://docs.mongodb.com/manual/#the-mongodb-version-manual">The MongoDB 4.2 Manual</a></li>
<li>2.<a href="https://www.jianshu.com/p/62736bff7e2e">mongodb用户创建以及权限控制</a></li>
</ul>
<h4 id="1-常用命令"><a href="#1-常用命令" class="headerlink" title="1.常用命令"></a>1.常用命令</h4><ul>
<li>1.开启/关闭 MongoDB 服务</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew services start mongodb-community@4.2</span><br><span class="line">brew services stop mongodb-community@4.2</span><br><span class="line"></span><br><span class="line">brew services restart mongodb-community@4.2</span><br></pre></td></tr></table></figure>

<ul>
<li>2.登录命令</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mongo --username userName --password --host 127.0.0.1 --port 27017</span><br></pre></td></tr></table></figure>

<ul>
<li>3.数据库操作</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 取得数据库的名字</span><br><span class="line">db.adminCommand(&#39;listDatabases&#39;)</span><br><span class="line">show databases</span><br><span class="line">db.getMongo().getDBNames()</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 显示表</span><br><span class="line">show collections</span><br><span class="line">show tables</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 创建 DB , 表 及 数据</span><br><span class="line">use myNewDB</span><br><span class="line">db.myNewCollection1.insertOne( &#123; x: 1 &#125; )</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 显示表的数据</span><br><span class="line">db.myNewCollection1.find( &#123;&#125; )</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 删除数据库</span><br><span class="line">use myNewDB</span><br><span class="line">db.dropDatabase()</span><br></pre></td></tr></table></figure>

<ul>
<li>4.备份/恢复 数据库</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">mongodump --db&#x3D;myNewDB --out&#x3D;&#x2F;Users&#x2F;glb_gz&#x2F;Downloads</span><br><span class="line">mongorestore -d myNewDB &#x2F;Users&#x2F;glb_gz&#x2F;Downloads&#x2F;myNewDB</span><br></pre></td></tr></table></figure>

<ul>
<li>5.新增用户</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 新增管理员账号.</span><br><span class="line"></span><br><span class="line">&gt; use admin</span><br><span class="line">switched to db admin</span><br><span class="line">&gt; db.createUser(</span><br><span class="line"> &#123;</span><br><span class="line">  user: &quot;admin&quot;,</span><br><span class="line">   pwd: passwordPrompt(),</span><br><span class="line">   roles: [ &#123; role: &quot;userAdminAnyDatabase&quot;, db: &quot;admin&quot;&#125; ]</span><br><span class="line"> &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 新增普通用户</span><br><span class="line"></span><br><span class="line">&gt; use dashboard_admin</span><br><span class="line"></span><br><span class="line">&gt; db.createUser(</span><br><span class="line"> &#123;</span><br><span class="line">  user : &quot;user1&quot;,</span><br><span class="line">  pwd : &quot;password&quot;,</span><br><span class="line">  roles: [ &#123; role : &quot;readWrite&quot;, db : &quot;db1&quot; &#125; ,</span><br><span class="line">           &#123; role : &quot;readWrite&quot;, db : &quot;db2&quot; &#125; ]</span><br><span class="line"> &#125;</span><br><span class="line">)</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 更新用户的 roles, 更新完后用户只有访问 db1 和 db3 的权限</span><br><span class="line"></span><br><span class="line">db.updateUser(</span><br><span class="line">   &quot;user1&quot;,</span><br><span class="line">   &#123;</span><br><span class="line">     roles: [ 	&#123; role : &quot;readWrite&quot;, db : &quot;db1&quot; &#125;,</span><br><span class="line">					&#123; role : &quot;readWrite&quot;, db : &quot;db3&quot; &#125;,</span><br><span class="line">	     ]</span><br><span class="line">   &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure>


<h4 id="2-开启权限认证登录"><a href="#2-开启权限认证登录" class="headerlink" title="2.开启权限认证登录"></a>2.开启权限认证登录</h4><blockquote>
<p>默认 匿名用户可以登录.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; vim &#x2F;usr&#x2F;local&#x2F;etc&#x2F;mongod.conf</span><br><span class="line"></span><br><span class="line">security:</span><br><span class="line">    authorization: enabled</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="2-C-中使用-MongoDB-1"><a href="#2-C-中使用-MongoDB-1" class="headerlink" title="2.C# 中使用 MongoDB"></a>2.C# 中使用 MongoDB</h2><ul>
<li>1.<a href="https://mongodb.github.io/mongo-csharp-driver/2.10/getting_started/quick_tour/">MongoDB Driver Quick Tour</a></li>
<li>2.<a href="https://docs.microsoft.com/zh-cn/aspnet/core/tutorials/first-mongo-app?view=aspnetcore-3.1&tabs=visual-studio-mac#create-the-aspnet-core-web-api-project">使用 ASP.NET Core 和 MongoDB 创建 Web API</a></li>
</ul>
<h2 id="3-全文索引"><a href="#3-全文索引" class="headerlink" title="3.全文索引"></a>3.全文索引</h2><ul>
<li>1.<a href="https://www.jianshu.com/p/f30a8088b73f">MongoDB全文索引</a></li>
<li>2.<a href="https://docs.mongodb.com/manual/indexes/#create-an-index">MongoDB Indexes</a></li>
</ul>
]]></content>
      <categories>
        <category>DB</category>
      </categories>
      <tags>
        <tag>DB</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑与 手机 通过 USB 进行数据传输</title>
    <url>/2019/11/27/PC-Phone-data-transfer/</url>
    <content><![CDATA[<blockquote>
<p>电脑 与 手机 通过 USB 进行数据传输</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a><a href="#references">1.参考</a></h2><h2 id="2-过程-电脑Windows-手机iOS"><a href="#2-过程-电脑Windows-手机iOS" class="headerlink" title="2.过程(电脑Windows/手机iOS)"></a><a href="#steps">2.过程(电脑Windows/手机iOS)</a></h2><h2 id="3-过程-手机-iOS-Xamarin语言-版本"><a href="#3-过程-手机-iOS-Xamarin语言-版本" class="headerlink" title="3.过程(手机 iOS Xamarin语言 版本)"></a><a href="#steps_iOS_xamarin">3.过程(手机 iOS Xamarin语言 版本)</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考<a name="references"/></h2><ul>
<li>1.<a href="https://github.com/ghzjtian/peertalk">iOS and MAC(经过验证可以用)</a><ul>
<li>1.<a href="https://github.com/kirankunigiri/peertalk-simple">kirankunigiri/peertalk-simple (Mac &lt;-&gt; iOS 传输其它的数据</a></li>
</ul>
</li>
<li>2.<a href="http://thecodewash.blogspot.com/2017/05/communicating-with-your-ios-app-over.html">Windows/iOS(Xamarin) 客户端(Communicating with your iOS app over USB (C# and/or Xamarin))</a></li>
<li>3.<a href="https://www.jianshu.com/p/eba133891ec6">使用usbmuxd服务，通过USB连接与PC端、Mac端实现通信，Peertalk的使用</a></li>
<li>4.<a href="https://www.jianshu.com/p/087fd3ccdd9f">探讨使用USB线缆与iOS App通信的小笔记</a></li>
<li>5.<a href="http://docs.quamotion.mobi/docs/">iOS 与 Windows 的连接</a></li>
<li>6.<a href="https://www.youtube.com/watch?v=34OZp1rrxxg">libimobiledevice(libimobiledevice.1.2.1-r857-win-x64.zip) 的使用视频</a></li>
<li>7.<a href="https://github.com/libimobiledevice-win32/imobiledevice-net/tree/master/iMobileDevice-net.Demo">Windows libimobiledevice-win32/imobiledevice-net 用法示例程序</a></li>
<li>8.<a href="https://libimobiledevice-win32.github.io/imobiledevice-net/api/iMobileDevice.html">iMobileDevice API Documentation</a></li>
<li>9.<a href="https://www.jianshu.com/p/08da95add4da">iOS App连接外设的几种方式</a></li>
</ul>
<hr>
<h2 id="2-过程-电脑Windows-版本"><a href="#2-过程-电脑Windows-版本" class="headerlink" title="2.过程(电脑Windows 版本)"></a>2.过程(电脑Windows 版本)<a name="steps"/></h2><h4 id="1-Windows-安装并启动-usbmuxd-service-服务"><a href="#1-Windows-安装并启动-usbmuxd-service-服务" class="headerlink" title="1.Windows 安装并启动 usbmuxd service 服务"></a>1.Windows 安装并启动 <code>usbmuxd service</code> 服务</h4><ul>
<li>1.方法1.安装 iTunes 即会自动带有</li>
<li>2.方法2. <a href="https://apple-mobile-device-support.updatestar.com/">直接下载 iTunes.exe</a>, 然后解压，得到 <code>AppleMobileDeviceSupport64.msi</code> 文件，双击安装即会安装 <code>usbmuxd service</code>.</li>
</ul>
<h4 id="2-Windows-项目-导入-imobiledevice-net-nuget-库"><a href="#2-Windows-项目-导入-imobiledevice-net-nuget-库" class="headerlink" title="2.Windows 项目 导入 imobiledevice-net nuget 库"></a>2.Windows 项目 <a href="https://www.nuget.org/packages/imobiledevice-net/">导入 <code>imobiledevice-net</code> nuget 库</a></h4><h4 id="3-数据交互"><a href="#3-数据交互" class="headerlink" title="3.数据交互"></a>3.数据交互</h4><ul>
<li>1.监听变化</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NativeLibraries.Load();</span><br><span class="line">var _iDeviceApi &#x3D; LibiMobileDevice.Instance.iDevice;</span><br><span class="line">var ret &#x3D; _iDeviceApi.idevice_event_subscribe(EventCallback(), new IntPtr());</span><br><span class="line"></span><br><span class="line">private iDeviceEventCallBack EventCallback()</span><br><span class="line">&#123;</span><br><span class="line">    return (ref iDeviceEvent devEvent, IntPtr data) &#x3D;&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        Debug.WriteLine(&quot;EventCallback() iDeviceEvent&quot;);</span><br><span class="line">        switch (devEvent.@event)</span><br><span class="line">        &#123;</span><br><span class="line">            case iDeviceEventType.DeviceAdd:</span><br><span class="line">                Connect(devEvent.udidString);</span><br><span class="line">                break;</span><br><span class="line">            case iDeviceEventType.DeviceRemove:</span><br><span class="line">                break;</span><br><span class="line">            default:</span><br><span class="line">                return;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.连接</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">private void Connect(string newUdid)</span><br><span class="line">&#123;</span><br><span class="line">    _iDeviceApi.idevice_new(out iDeviceHandle deviceHandle, newUdid).ThrowOnError();</span><br><span class="line">    var error &#x3D;_iDeviceApi.idevice_connect(deviceHandle, 5050, out iDeviceConnectionHandle connection);</span><br><span class="line">    if (error !&#x3D; iDeviceError.Success) return;</span><br><span class="line">    ReceiveDataFromDevice(connection);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>3.接收数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">private void ReceiveDataFromDevice(iDeviceConnectionHandle connection)</span><br><span class="line">&#123;</span><br><span class="line">    Task.Run(() &#x3D;&gt;</span><br><span class="line">    &#123;</span><br><span class="line">        while (true)</span><br><span class="line">        &#123;</span><br><span class="line">            uint receivedBytes &#x3D; 0;</span><br><span class="line">            _iDeviceApi.idevice_connection_receive(connection, _inboxBuffer, (uint)_inboxBuffer.Length,</span><br><span class="line">                ref receivedBytes);</span><br><span class="line">            if (receivedBytes &lt;&#x3D; 0) continue;</span><br><span class="line">            &#x2F;&#x2F; Do something with your received bytes</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>4.发送数据</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">_iDeviceApi.idevice_connection_send(connection, bytesPending, (uint)bytesPending.Length, ref sentBytes)</span><br></pre></td></tr></table></figure>

<h2 id="3-过程-手机-iOS-Xamarin语言-版本-1"><a href="#3-过程-手机-iOS-Xamarin语言-版本-1" class="headerlink" title="3.过程(手机 iOS Xamarin语言 版本)"></a>3.过程(手机 iOS Xamarin语言 版本)<a name="steps_iOS_xamarin"/></h2><h4 id="1-参考-2"><a href="#1-参考-2" class="headerlink" title="1.参考:"></a>1.参考:</h4><ul>
<li>1.<a href="https://docs.microsoft.com/en-us/xamarin/ios/platform/binding-objective-c/walkthrough?tabs=macos">Walkthrough: Binding an iOS Objective-C Library</a></li>
<li>2.<a href="https://www.jianshu.com/p/486e3b737707">Create a Static Library in Xcode</a></li>
<li>3.<a href="https://www.jianshu.com/p/8e3e6175c5f5">iOS 静态库Framework、static Library(.a )、Bundle的浅析与制作</a></li>
<li>4.<a href="https://forums.xamarin.com/discussion/58933/possible-to-use-xamarin-with-ios-osx-communication-over-usb-works-in-native">Possible to use Xamarin with iOS - OSX communication over USB? Works in native…</a></li>
</ul>
<h4 id="2-有两种方法"><a href="#2-有两种方法" class="headerlink" title="2.有两种方法"></a>2.有两种方法</h4><h5 id="1-用-Peertalk-的-Object-C-库，生成-a-静态库-然后再用-Xamarin-的-Creating-Bindings-with-Objective-Sharpie"><a href="#1-用-Peertalk-的-Object-C-库，生成-a-静态库-然后再用-Xamarin-的-Creating-Bindings-with-Objective-Sharpie" class="headerlink" title="1.用 Peertalk 的 Object-C 库，生成 .a 静态库, 然后再用 Xamarin 的 Creating Bindings with Objective Sharpie."></a>1.用 Peertalk 的 Object-C 库，生成 .a 静态库, 然后再用 Xamarin 的 <code>Creating Bindings with Objective Sharpie</code>.</h5><ul>
<li>1.把 Peertalk Object-C 代码生成 .a 库</li>
<li>2.建立 <code>Bindings with Objective Sharpie</code> Project, 导入相关的 <code>.h</code> 文件 和 <code>.a</code> 库.</li>
<li>3.在 Xamarin 项目中调用 <code>.a</code> 库的接口，完成 USB 数据交流的功能.</li>
</ul>
<h5 id="2-直接了解-Peertalk-的-USB-通讯原理，然后用-Xamarin-实现"><a href="#2-直接了解-Peertalk-的-USB-通讯原理，然后用-Xamarin-实现" class="headerlink" title="2.直接了解 Peertalk 的 USB 通讯原理，然后用 Xamarin 实现."></a>2.直接了解 Peertalk 的 USB 通讯原理，然后用 Xamarin 实现.</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var socket &#x3D; new Socket(AddressFamily.InterNetwork,</span><br><span class="line">                      SocketType.Stream,</span><br><span class="line">                      ProtocolType.Tcp);</span><br><span class="line"></span><br><span class="line">                  socket.Bind(new IPEndPoint(IPAddress.Loopback, 5050));</span><br><span class="line">                  socket.Listen(100);</span><br><span class="line">                  socket.BeginAccept((ar) &#x3D;&gt;</span><br><span class="line">                  &#123;</span><br><span class="line">                      var connectionAttempt &#x3D; (Socket) ar.AsyncState;</span><br><span class="line">                      var connectedSocket &#x3D; connectionAttempt.EndAccept(ar);</span><br><span class="line">                      &#x2F;&#x2F; Do something with &quot;connectedSocket&quot;</span><br><span class="line">                      </span><br><span class="line">                      &#x2F;&#x2F; Data send </span><br><span class="line">                      connectedSocket.Send(bytesSent, bytesSent.Length, 0);</span><br><span class="line">                      &#x2F;&#x2F; Data Received</span><br><span class="line">                      </span><br><span class="line">                       do</span><br><span class="line">	                &#123;</span><br><span class="line">	                    bytes &#x3D; connectedSocket.Receive(bytesReceived, bytesReceived.Length, 0);</span><br><span class="line">	                    if (bytes &lt;&#x3D; 0  ) continue;</span><br><span class="line">	                &#125;</span><br><span class="line">	                while (true);</span><br><span class="line">                      </span><br><span class="line">                      </span><br><span class="line">             &#125;, socket);</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>Powershell 的用法</title>
    <url>/2019/12/29/Power-shell-usage/</url>
    <content><![CDATA[<blockquote>
<p>记录 Mac 上 Powershell 的安装及使用</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h2><h2 id="2-Mac-安装-Powershell"><a href="#2-Mac-安装-Powershell" class="headerlink" title="2.Mac 安装 Powershell"></a>2.Mac 安装 Powershell</h2><h2 id="3-Powershell-使用"><a href="#3-Powershell-使用" class="headerlink" title="3.Powershell 使用"></a>3.Powershell 使用</h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考</h2><ul>
<li>1.<a href="https://docs.microsoft.com/en-us/powershell/scripting/install/installing-powershell-core-on-macos?view=powershell-6">Installing PowerShell Core on macOS</a></li>
<li>2.<a href="https://stackoverflow.com/questions/2688547/multiple-foreground-colors-in-powershell-in-one-command">Multiple foreground colors in PowerShell in one command</a></li>
<li>3.<a href="https://yanxyz.github.io/powershell/scripts/">Run PowerShell 脚本</a></li>
<li>4.<a href="https://docs.microsoft.com/en-us/powershell/scripting/learn/ps101/00-introduction?view=powershell-7.1">Learn PowerShell</a></li>
</ul>
<h2 id="2-Mac-安装-Powershell-1"><a href="#2-Mac-安装-Powershell-1" class="headerlink" title="2.Mac 安装 Powershell"></a>2.Mac 安装 Powershell</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;  install PowerShell from brew.</span><br><span class="line">brew cask install powershell</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 进入 Powershell</span><br><span class="line">$: pwsh</span><br><span class="line"></span><br><span class="line">PowerShell 7.1.0</span><br><span class="line">Copyright (c) Microsoft Corporation.</span><br><span class="line"></span><br><span class="line">https:&#x2F;&#x2F;aka.ms&#x2F;powershell</span><br><span class="line">Type &#39;help&#39; to get help.</span><br><span class="line"></span><br><span class="line">PS &#x2F;Users&#x2F;glb_gz&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 退出 Powershell</span><br><span class="line">exit</span><br></pre></td></tr></table></figure>

<h2 id="3-Powershell-使用-1"><a href="#3-Powershell-使用-1" class="headerlink" title="3.Powershell 使用"></a>3.Powershell 使用</h2><h3 id="1-常用命令"><a href="#1-常用命令" class="headerlink" title="1.常用命令"></a>1.常用命令</h3><ul>
<li>1.输出</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Write-Host &quot;Blue&quot; -ForegroundColor Blue</span><br></pre></td></tr></table></figure>

<ul>
<li>2.退出</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">exit 0</span><br></pre></td></tr></table></figure>

<ul>
<li>3.方法</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 无参</span><br><span class="line">function listAllExchange &#123;</span><br><span class="line">&#125;</span><br><span class="line">listAllExchange</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 一个参数</span><br><span class="line">function customEchoRed($message) &#123;</span><br><span class="line">    Write-Host $message -ForegroundColor Red</span><br><span class="line">&#125;</span><br><span class="line">customEchoRed(&quot;abc&quot;)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 多个参数</span><br><span class="line">function executeCommand($message, $rabbit_mq_command)&#123;</span><br><span class="line">&#125;</span><br><span class="line">executeCommand &quot;List all exchanges&quot;  &quot;rabbitmqadmin list exchanges&quot;</span><br></pre></td></tr></table></figure>


<h3 id="2-IDE"><a href="#2-IDE" class="headerlink" title="2.IDE"></a>2.IDE</h3><h4 id="1-VS-code"><a href="#1-VS-code" class="headerlink" title="1.VS code"></a>1.VS code</h4><ul>
<li>1.安装插件 <a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode.PowerShell">PowerShell</a></li>
</ul>
<h3 id="3-运行-PowerShell-文件"><a href="#3-运行-PowerShell-文件" class="headerlink" title="3.运行 PowerShell 文件"></a>3.运行 PowerShell 文件</h3><ul>
<li>1.Mac 在 Terminal 运行 <code>pwsh</code> 命令.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ pwsh</span><br></pre></td></tr></table></figure>

<ul>
<li>2.如要执行的文件为 <code>test.ps1</code>, 则输入 <code>./test.ps1</code> 即可.</li>
</ul>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>Protocol Buffer 的学习过程</title>
    <url>/2019/12/23/ProtocolBuffer_Learn/</url>
    <content><![CDATA[<blockquote>
<p>记录 protocol 的用法.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a><a href="#references">1.参考</a></h2><h2 id="2-protocol-buffer-定义及数据的保存形式"><a href="#2-protocol-buffer-定义及数据的保存形式" class="headerlink" title="2.protocol buffer 定义及数据的保存形式"></a><a href="#data_type">2.protocol buffer 定义及数据的保存形式</a></h2><h2 id="3-C-例子"><a href="#3-C-例子" class="headerlink" title="3.C#例子"></a><a href="#c_sharp_demo">3.C#例子</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考<a name="references"/></h2><ul>
<li><a href="https://developers.google.com/protocol-buffers">0.Protocol buffers are a language-neutral, platform-neutral extensible mechanism for serializing structured data.</a></li>
<li><a href="https://www.jianshu.com/p/93aeae0d78e5">1.Mac下ProtocolBuffer的安装和编译</a></li>
<li><a href="https://developers.google.com/protocol-buffers/docs/csharptutorial">2.Protocol Buffer Basics: C#</a></li>
<li><a href="https://developers.google.com/protocol-buffers/docs/javatutorial">3.Protocol Buffer Basics: Java</a></li>
<li><a href="https://medium.com/@elye.project/simple-android-protobuf-tutorial-with-actual-code-bfb581299f47">4.Android Protobuf Tutorial with example app</a></li>
</ul>
<h2 id="2-protocol-buffer-定义及数据的保存形式-1"><a href="#2-protocol-buffer-定义及数据的保存形式-1" class="headerlink" title="2.protocol buffer 定义及数据的保存形式"></a>2.protocol buffer 定义及数据的保存形式<a name="data_type"/></h2><ul>
<li>1.proto 文件的定义</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">syntax &#x3D; &quot;proto3&quot;;</span><br><span class="line">package tutorial;</span><br><span class="line"></span><br><span class="line">message Person &#123;</span><br><span class="line">    string name &#x3D; 1;</span><br><span class="line">    int32 id &#x3D; 2;</span><br><span class="line">    string email &#x3D; 3;</span><br><span class="line">    string phone &#x3D; 4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.数据的显示</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Person.Builder person &#x3D; Person.newBuilder();</span><br><span class="line">       person.setEmail(&quot;wyzjtian@163.com&quot;);</span><br><span class="line">       person.setId(11);</span><br><span class="line">       person.setName(&quot;Tian&quot;);</span><br><span class="line">       person.setPhone(&quot;12345678&quot;);</span><br><span class="line"></span><br><span class="line">       &#x2F;&#x2F; 真实的数据为:  10,4,84,105,97,110,16,11,26,16,119,121,122,106,116,105,97,110,64,49,54,51,46,99,111,109,34,8,49,50,51,52,53,54,55,56,</span><br><span class="line">       byte[] data &#x3D; person.build().toByteArray();</span><br></pre></td></tr></table></figure>

<h2 id="3-C-例子-1"><a href="#3-C-例子-1" class="headerlink" title="3.C#例子"></a>3.C#例子<a name="c_sharp_demo"/></h2><ul>
<li>1.新建一个 proto 文件, 并且写入所需要的协议.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; See README.txt for information and build instructions.</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F; Note: START and END tags are used in comments to define sections used in</span><br><span class="line">&#x2F;&#x2F; tutorials.  They are not part of the syntax for Protocol Buffers.</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F; To get an in-depth walkthrough of this file and the related examples, see:</span><br><span class="line">&#x2F;&#x2F; https:&#x2F;&#x2F;developers.google.com&#x2F;protocol-buffers&#x2F;docs&#x2F;tutorials</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; [START declaration]</span><br><span class="line">syntax &#x3D; &quot;proto3&quot;;</span><br><span class="line">package tutorial;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;import &quot;google&#x2F;protobuf&#x2F;timestamp.proto&quot;;</span><br><span class="line">&#x2F;&#x2F; [END declaration]</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; [START java_declaration]</span><br><span class="line">option java_package &#x3D; &quot;com.example.tutorial&quot;;</span><br><span class="line">option java_outer_classname &#x3D; &quot;AddressBookProtos&quot;;</span><br><span class="line">&#x2F;&#x2F; [END java_declaration]</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; [START csharp_declaration]</span><br><span class="line">option csharp_namespace &#x3D; &quot;Google.Protobuf.Examples.AddressBook&quot;;</span><br><span class="line">&#x2F;&#x2F; [END csharp_declaration]</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; [START messages]</span><br><span class="line">message Person &#123;</span><br><span class="line">  string name &#x3D; 1;</span><br><span class="line">  int32 id &#x3D; 2;  &#x2F;&#x2F; Unique ID number for this person.</span><br><span class="line">  string email &#x3D; 3;</span><br><span class="line"></span><br><span class="line">  enum PhoneType &#123;</span><br><span class="line">    MOBILE &#x3D; 0;</span><br><span class="line">    HOME &#x3D; 1;</span><br><span class="line">    WORK &#x3D; 2;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  message PhoneNumber &#123;</span><br><span class="line">    string number &#x3D; 1;</span><br><span class="line">    PhoneType type &#x3D; 2;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  repeated PhoneNumber phones &#x3D; 4;</span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F;google.protobuf.Timestamp last_updated &#x3D; 5;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Our address book file is just one of these.</span><br><span class="line">message AddressBook &#123;</span><br><span class="line">  repeated Person people &#x3D; 1;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F; [END messages]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.编译 proto 文件，得出一个 cs 文件(需要先安装一个 protoc 编译器).</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protoc --csharp_out&#x3D;. .&#x2F;addressbook.proto</span><br></pre></td></tr></table></figure>

<ul>
<li><p>3.在项目中导入 <code>Google.Protobuf</code> nuget 包, 这个包是对 proto 生成文件的解析.</p>
</li>
<li><p>4.在项目中应用</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.IO;</span><br><span class="line">using Google.Protobuf;</span><br><span class="line">using Google.Protobuf.Examples.AddressBook;</span><br><span class="line"></span><br><span class="line">namespace ProtocolBufferTest</span><br><span class="line">&#123;</span><br><span class="line">    class Program</span><br><span class="line">    &#123;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            Console.WriteLine(&quot;Start!&quot;);</span><br><span class="line"></span><br><span class="line">            AddressBook addressBook;</span><br><span class="line"></span><br><span class="line">            string addressBookFile &#x3D; &quot;addressbook.data&quot;;</span><br><span class="line">            &#x2F;&#x2F; Get the Address book</span><br><span class="line">            if (File.Exists(addressBookFile))</span><br><span class="line">            &#123;</span><br><span class="line">                using (Stream file &#x3D; File.OpenRead(addressBookFile))</span><br><span class="line">                &#123;</span><br><span class="line">                    addressBook &#x3D; AddressBook.Parser.ParseFrom(file);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(&quot;&#123;0&#125;: File not found. Creating a new file.&quot;, addressBookFile);</span><br><span class="line">                addressBook &#x3D; new AddressBook();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            Person person &#x3D; new Person();</span><br><span class="line">            person.Name &#x3D; &quot;Tian&quot;;</span><br><span class="line">            person.Id &#x3D; 1;</span><br><span class="line">            person.Email &#x3D; &quot;Abc@123.com&quot;;</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F; Add an address</span><br><span class="line">            addressBook.People.Add(person);</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F; Write the new address book back to disk.</span><br><span class="line">            using (Stream output &#x3D; File.OpenWrite(addressBookFile))</span><br><span class="line">            &#123;</span><br><span class="line">                addressBook.WriteTo(output);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            &#x2F;&#x2F; Read the existing address book.</span><br><span class="line">            using (Stream stream &#x3D; File.OpenRead(addressBookFile))</span><br><span class="line">            &#123;</span><br><span class="line">                AddressBook addressBookRead &#x3D; AddressBook.Parser.ParseFrom(stream);</span><br><span class="line">                Print(addressBookRead);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private static void Print(AddressBook addressBook) &#123;</span><br><span class="line">            foreach (Person person in addressBook.People) &#123;</span><br><span class="line">                Console.WriteLine(person.Id);</span><br><span class="line">                Console.WriteLine(person.Name);</span><br><span class="line">                Console.WriteLine(person.Email);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>data</category>
      </categories>
      <tags>
        <tag>data</tag>
      </tags>
  </entry>
  <entry>
    <title>RabbitMQ 安装及使用</title>
    <url>/2019/12/26/Rabbitmq_install_usage/</url>
    <content><![CDATA[<blockquote>
<p>RabbitMQ 的使用方法</p>
</blockquote>
<a id="more"></a>



<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a><a href="#references">1.参考</a></h2><h2 id="2-Mac-安装过程"><a href="#2-Mac-安装过程" class="headerlink" title="2.Mac 安装过程"></a><a href="#install_guide">2.Mac 安装过程</a></h2><h2 id="3-使用"><a href="#3-使用" class="headerlink" title="3.使用"></a><a href="#usage">3.使用</a></h2><h2 id="4-命令行创建-exchange-queue-binding"><a href="#4-命令行创建-exchange-queue-binding" class="headerlink" title="4.命令行创建 exchange, queue, binding"></a><a href="#declare_exchange">4.命令行创建 exchange, queue, binding</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考<a name="references"/></h2><ul>
<li>0.<a href="https://www.rabbitmq.com/">RabbitMQ</a></li>
<li>1.<a href="https://github.com/rabbitmq/rabbitmq-tutorials">Github rabbitmq/rabbitmq-tutorials</a></li>
<li>2.<a href="https://www.rabbitmq.com/rabbitmqctl.8.html#set_user_tags">rabbitmqctl(8)</a></li>
<li>3.<a href="https://stackoverflow.com/a/40436752/5237440">How do I create or add a user to rabbitmq?</a></li>
</ul>
<h2 id="2-Mac-安装过程-1"><a href="#2-Mac-安装过程-1" class="headerlink" title="2.Mac 安装过程"></a>2.Mac 安装过程<a name="install_guide"/></h2><ul>
<li>1.更新 brew</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew update</span><br></pre></td></tr></table></figure>

<ul>
<li>2.安装 RabbitMQ server</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">brew install rabbitmq</span><br><span class="line">&#x2F;&#x2F; 可能要等待很久，建议 brew 换成国内的源.</span><br><span class="line">&#x2F;&#x2F; 如果 vpn 不稳定，建议不要使用 vpn.</span><br></pre></td></tr></table></figure>

<ul>
<li>3.添加 <code>rabbitmq/sbin</code> 路径到 PATH 中</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$cd ~</span><br><span class="line">$vi .bash_profile</span><br><span class="line">&#x2F;&#x2F; 添加下面的一行到 .bash_profile 中.</span><br><span class="line">export PATH&#x3D;$PATH:&#x2F;usr&#x2F;local&#x2F;opt&#x2F;rabbitmq&#x2F;sbin</span><br><span class="line">$ echo $PATH</span><br><span class="line">&#x2F;usr&#x2F;local&#x2F;opt&#x2F;rabbitmq&#x2F;sbin</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>4.安装完成后，如果需要查看管理台，需要下面命令去开启</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure>

<ul>
<li>5.因为 RabbitMQ 用 <code>erlang</code> 去编写, 查看 <code>erlang</code> 版本的方法(这里的版本号为 <code>22</code>):</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ erl -eval &#39;erlang:display(erlang:system_info(otp_release)), halt().&#39;  -noshell</span><br><span class="line"></span><br><span class="line">&quot;22&quot;</span><br></pre></td></tr></table></figure>

<p>或 </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$erl </span><br><span class="line">Erlang&#x2F;OTP 22 [erts-10.6.1] [source] [64-bit] [smp:4:4] [ds:4:4:10] [async-threads:1] [hipe] [dtrace]</span><br><span class="line"></span><br><span class="line">Eshell V10.6.1  (abort with ^G)</span><br><span class="line">1&gt; erlang:system_info(otp_release).</span><br><span class="line">&quot;22&quot;</span><br></pre></td></tr></table></figure>


<h2 id="3-使用-1"><a href="#3-使用-1" class="headerlink" title="3.使用"></a>3.使用<a name="usage"/></h2><h3 id="1-Server-端"><a href="#1-Server-端" class="headerlink" title="1.Server 端"></a>1.Server 端</h3><ul>
<li>1.Server 端开启， terminal 输入 : <code>rabbitmq-server</code></li>
<li>2.现在你可以访问默认路径 <code>http://localhost:15672/</code> 去管理 <code>RabbitMQ</code>.</li>
</ul>
<h3 id="2-Client-端"><a href="#2-Client-端" class="headerlink" title="2.Client 端"></a>2.Client 端</h3><h4 id="1-程序代码连接-RabbitMQ-Server"><a href="#1-程序代码连接-RabbitMQ-Server" class="headerlink" title="1.程序代码连接 RabbitMQ Server"></a>1.程序代码连接 RabbitMQ Server</h4><ul>
<li>1.客户端开启: 运行程序.</li>
</ul>
<h4 id="2-rabbitmqadmin-连接管理-Server"><a href="#2-rabbitmqadmin-连接管理-Server" class="headerlink" title="2.rabbitmqadmin 连接管理 Server."></a>2.rabbitmqadmin 连接管理 Server.</h4><blockquote>
<p><code>rabbitqadmin</code> is a standalone tool (no dependencies other than Python 3) that can be downloaded from a running node or directly from GitHub. More detail in <a href="https://www.rabbitmq.com/management-cli.html">https://www.rabbitmq.com/management-cli.html</a></p>
</blockquote>
<ul>
<li>1.先启动 <code>RabbitMQ Server</code></li>
<li>2.浏览器访问 <code>http://&#123;hostname&#125;:15672/cli/rabbitmqadmin</code> 去得到 <code>rabbitmqadmin</code> 工具</li>
<li>3.</li>
</ul>
<h2 id="4-命令行创建-exchange-queue-binding-1"><a href="#4-命令行创建-exchange-queue-binding-1" class="headerlink" title="4.命令行创建 exchange, queue, binding"></a>4.命令行创建 exchange, queue, binding<a name="declare_exchange"/></h2><blockquote>
<p>1.有 命令行 和 rest api 两种方法.我们这里讲解 命令行的用法.</p>
<p>2.如果是 Windows 系统的话，需要安装 python , 而且要在命令的前面添加 <code>python rabbitmqadmin ...</code> 这样， rabbitmqadmin 从 <code>localhost:15672</code> 上下载，然后放置到当前运行的目录下面.</p>
</blockquote>
<h4 id="1-参考-2"><a href="#1-参考-2" class="headerlink" title="1.参考"></a>1.参考</h4><ul>
<li>1.<a href="https://stackoverflow.com/questions/45952026/how-to-create-an-exchange-using-rabbitmqctl">How to create an exchange using rabbitmqctl</a></li>
<li>2.<a href="https://www.rabbitmq.com/management-cli.html">Management Command Line Tool</a></li>
</ul>
<h4 id="2-主要的命令有"><a href="#2-主要的命令有" class="headerlink" title="2.主要的命令有"></a>2.主要的命令有</h4><ul>
<li>0.帮助</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$:RPCClient glb_gz$ rabbitmqadmin --help</span><br><span class="line">$$:RPCClient glb_gz$ rabbitmqadmin help subcommands</span><br></pre></td></tr></table></figure>

<ul>
<li>1.定义及列出所有的 exchanges</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$:RPCClient glb_gz$ rabbitmqadmin declare exchange name&#x3D;custom-exchange type&#x3D;fanout</span><br><span class="line">exchange declared</span><br><span class="line">$$:RPCClient glb_gz$ rabbitmqadmin list exchanges</span><br><span class="line">+--------------------+---------+</span><br><span class="line">|        name        |  type   |</span><br><span class="line">+--------------------+---------+</span><br><span class="line">|                    | direct  |</span><br><span class="line">| amq.direct         | direct  |</span><br><span class="line">| amq.fanout         | fanout  |</span><br><span class="line">| amq.headers        | headers |</span><br><span class="line">| amq.match          | headers |</span><br><span class="line">| amq.rabbitmq.trace | topic   |</span><br><span class="line">| amq.topic          | topic   |</span><br><span class="line">| custom-exchange    | fanout  |</span><br><span class="line">| my-new-exchange    | fanout  |</span><br><span class="line">| test               | fanout  |</span><br><span class="line">+--------------------+---------+</span><br></pre></td></tr></table></figure>

<ul>
<li>2.定义及列出所有的 queues</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$:RPCClient glb_gz$ rabbitmqadmin declare queue name&#x3D;custom-queue durable&#x3D;false</span><br><span class="line">queue declared</span><br><span class="line">$$:RPCClient glb_gz$ rabbitmqadmin list queues</span><br><span class="line">+--------------+----------+</span><br><span class="line">|     name     | messages |</span><br><span class="line">+--------------+----------+</span><br><span class="line">| custom-queue | 0        |</span><br><span class="line">| my-new-queue | 0        |</span><br><span class="line">| task_queue   | 0        |</span><br><span class="line">| test         | 0        |</span><br><span class="line">+--------------+----------+</span><br></pre></td></tr></table></figure>

<ul>
<li>3.绑定 exchange 与 binding ,并且显示</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$:~ glb_gz$ rabbitmqadmin declare binding source&#x3D;custom-exchange destination&#x3D;custom-queue</span><br><span class="line">binding declared</span><br><span class="line">$$:~ glb_gz$ rabbitmqadmin list bindings</span><br><span class="line">+-----------------+--------------+--------------+</span><br><span class="line">|     source      | destination  | routing_key  |</span><br><span class="line">+-----------------+--------------+--------------+</span><br><span class="line">|                 | custom-queue | custom-queue |</span><br><span class="line">|                 | my-new-queue | my-new-queue |</span><br><span class="line">|                 | task_queue   | task_queue   |</span><br><span class="line">|                 | test         | test         |</span><br><span class="line">| custom-exchange | custom-queue |              |</span><br><span class="line">+-----------------+--------------+--------------+</span><br></pre></td></tr></table></figure>


<ul>
<li>4.发布与接收 message</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$:~ glb_gz$ rabbitmqadmin publish exchange&#x3D;custom-exchange routing_key&#x3D;&quot;&quot; payload&#x3D;&quot;test 123&quot;</span><br><span class="line">Message published</span><br><span class="line">$$:~ glb_gz$ rabbitmqadmin get queue&#x3D;custom-queue ackmode&#x3D;ack_requeue_false</span><br><span class="line">+--------------+----------+---------------+----------+---------------+------------------+------------+-------------+</span><br><span class="line">| routing_key  | exchange | message_count | payload  | payload_bytes | payload_encoding | properties | redelivered |</span><br><span class="line">+--------------+----------+---------------+----------+---------------+------------------+------------+-------------+</span><br><span class="line">| custom-queue |          | 2             | test 123 | 8             | string           |            | False       |</span><br><span class="line">+--------------+----------+---------------+----------+---------------+------------------+------------+-------------+</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>5.显示概况</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$:~ glb_gz$ rabbitmqadmin show overview</span><br><span class="line">+------------------+----------------------------+-----------------------+----------------------+</span><br><span class="line">| rabbitmq_version |        cluster_name        | queue_totals.messages | object_totals.queues |</span><br><span class="line">+------------------+----------------------------+-----------------------+----------------------+</span><br><span class="line">| 3.8.2            | rabbit@$$ | 2                     | 4                    |</span><br><span class="line">+------------------+----------------------------+-----------------------+----------------------+</span><br></pre></td></tr></table></figure>

<h4 id="3-连接远程-rabbitmq-server-去完成上面的命令"><a href="#3-连接远程-rabbitmq-server-去完成上面的命令" class="headerlink" title="3.连接远程 rabbitmq server 去完成上面的命令"></a>3.连接远程 rabbitmq server 去完成上面的命令</h4><blockquote>
<p>因为默认的 guest 用户不能远程访问，所以需要创建一个新的用户去完成这个操作</p>
</blockquote>
<ul>
<li><p>1.<a href="https://www.rabbitmq.com/rabbitmqctl.8.html">rabbitmqctl(8):  tool for managing RabbitMQ nodes</a></p>
</li>
<li><p>0.创建用户</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 添加用户</span><br><span class="line">rabbitmqctl add_user glb_user xxx</span><br><span class="line">&#x2F;&#x2F; 设置权限</span><br><span class="line">rabbitmqctl set_permissions -p &#x2F; glb_user &quot;.*&quot; &quot;.*&quot; &quot;.*&quot;</span><br><span class="line">&#x2F;&#x2F; 设置标签</span><br><span class="line">rabbitmqctl set_user_tags tian administrator</span><br><span class="line">&#x2F;&#x2F; 查看</span><br><span class="line">rabbitmqctl list_users</span><br></pre></td></tr></table></figure>

<ul>
<li>1.运行 <code>rabbitmqadmin --help</code> 可以看到远程连接的命令</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$$ rabbitmqadmin --help</span><br><span class="line">Usage</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">  rabbitmqadmin [options] subcommand</span><br><span class="line"></span><br><span class="line">Options</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line">--help, -h              show this help message and exit</span><br><span class="line">--config&#x3D;CONFIG, -c CONFIG</span><br><span class="line">                        configuration file [default: ~&#x2F;.rabbitmqadmin.conf]</span><br><span class="line">--node&#x3D;NODE, -N NODE    node described in the configuration file [default:</span><br><span class="line">                        &#39;default&#39; only if configuration file is specified]</span><br><span class="line">--host&#x3D;HOST, -H HOST    connect to host HOST [default: localhost]</span><br><span class="line">--port&#x3D;PORT, -P PORT    connect to port PORT [default: 15672]</span><br><span class="line">--path-prefix&#x3D;PATH_PREFIX</span><br><span class="line">                        use specific URI path prefix for the RabbitMQ HTTP</span><br><span class="line">                        API. &#x2F;api and operation path will be appended to it.</span><br><span class="line">                        (default: blank string) [default: ]</span><br><span class="line">--vhost&#x3D;VHOST, -V VHOST</span><br><span class="line">                        connect to vhost VHOST [default: all vhosts for list,</span><br><span class="line">                        &#39;&#x2F;&#39; for declare]</span><br><span class="line">--username&#x3D;USERNAME, -u USERNAME</span><br><span class="line">                        connect using username USERNAME [default: guest]</span><br><span class="line">--password&#x3D;PASSWORD, -p PASSWORD</span><br></pre></td></tr></table></figure>

<ul>
<li>2.例子 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 需要远程计算机 192.168.1.2 先关闭防火墙 !!!</span><br><span class="line">rabbitmqadmin -H 192.168.1.2 -u glb_user -p xxx list vhosts</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 发布消息</span><br><span class="line">rabbitmqadmin -H 192.168.1.2 -u glb_user -p xxx publish exchange&#x3D;log_direct routing_key&#x3D;&quot;rule_engine&quot; payload&#x3D;&quot;log rule engine, from mac 1&quot;</span><br><span class="line">&#x2F;&#x2F; 取得消息</span><br><span class="line">rabbitmqadmin -H 192.168.1.2 -u glb_user -p xxx get queue&#x3D;log_rule_engine_queue ackmode&#x3D;ack_requeue_false</span><br><span class="line">&#x2F;&#x2F; No message</span><br><span class="line">rabbitmqadmin -H 192.168.1.2 -u glb_user -p xxx get queue&#x3D;log_message_parser_queue ackmode&#x3D;ack_requeue_false</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>data</category>
      </categories>
      <tags>
        <tag>data</tag>
      </tags>
  </entry>
  <entry>
    <title>Selenium 自动化测试(python3)</title>
    <url>/2020/05/10/Selenium-Learn/</url>
    <content><![CDATA[<blockquote>
<p>Selenium 环境的搭建及简单的例子</p>
</blockquote>
<a id="more"></a>

<h2 id="0-参考"><a href="#0-参考" class="headerlink" title="0.参考"></a>0.参考</h2><h2 id="1-Install-Python3"><a href="#1-Install-Python3" class="headerlink" title="1. Install Python3"></a>1. Install Python3</h2><h2 id="2-Install-PyCharm-Python-IDE-Editor"><a href="#2-Install-PyCharm-Python-IDE-Editor" class="headerlink" title="2. Install PyCharm (Python IDE/Editor)"></a>2. Install PyCharm (Python IDE/Editor)</h2><h2 id="3-First-WebDriver-program-in-Python"><a href="#3-First-WebDriver-program-in-Python" class="headerlink" title="3. First WebDriver program in Python"></a>3. First WebDriver program in Python</h2><h2 id="4-Run-it-on-Chrome-and-Firefox-Browsers"><a href="#4-Run-it-on-Chrome-and-Firefox-Browsers" class="headerlink" title="4. Run it on Chrome and Firefox Browsers"></a>4. Run it on Chrome and Firefox Browsers</h2><h2 id="5-输出测试报告"><a href="#5-输出测试报告" class="headerlink" title="5.输出测试报告"></a>5.输出测试报告</h2><h2 id="6-示例代码"><a href="#6-示例代码" class="headerlink" title="6.示例代码"></a>6.示例代码</h2><h2 id="7-其它插件"><a href="#7-其它插件" class="headerlink" title="7.其它插件"></a>7.其它插件</h2><hr>
<h2 id="0-参考-1"><a href="#0-参考-1" class="headerlink" title="0.参考"></a>0.参考</h2><ul>
<li>1.<a href="https://www.selenium.dev/">https://www.selenium.dev/</a></li>
<li>2.<a href="https://selenium-python.readthedocs.io/getting-started.html">https://selenium-python.readthedocs.io/getting-started.html</a></li>
</ul>
<h2 id="1-Install-Python3-1"><a href="#1-Install-Python3-1" class="headerlink" title="1.Install Python3"></a>1.Install Python3</h2><ul>
<li><p>1.Mac 自带了 Python2, 我们安装 Python3 即可(Python3 与 Python2 可以共存，现在我们用 Python3 去开发). <a href="https://www.python.org/downloads/">下载地址</a></p>
</li>
<li><p>2.设置 python3 的 PATH 到环境变量(<code>sudo vi ~/.bash_profile</code>)中.</p>
</li>
<li><p>3.打开 Mac terminal, 输入 <code>python3 --version</code> ，如果正确显示了版本号(如下所示)，证明 Python3 已安装成功.(如想查看默认的 Python 版本号, 输入 <code>python --version</code> 即可)</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ python3 --version</span><br><span class="line">Python 3.7.3</span><br></pre></td></tr></table></figure>

<ul>
<li>4.在 terminal 中输入 <code>pip3 --version</code>, 可以看到 pip3 的版本号.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ pip3 --version</span><br><span class="line">pip 19.0.3 from &#x2F;usr&#x2F;local&#x2F;lib&#x2F;python3.7&#x2F;site-packages&#x2F;pip (python 3.7)</span><br></pre></td></tr></table></figure>

<h2 id="2-Install-PyCharm-Python-IDE-Editor-1"><a href="#2-Install-PyCharm-Python-IDE-Editor-1" class="headerlink" title="2. Install PyCharm (Python IDE/Editor)"></a>2. Install PyCharm (Python IDE/Editor)</h2><ul>
<li>1.下载地址: <a href="https://www.jetbrains.com/pycharm/download/#section=mac">https://www.jetbrains.com/pycharm/download/#section=mac</a></li>
</ul>
<h2 id="3-First-WebDriver-program-in-Python-1"><a href="#3-First-WebDriver-program-in-Python-1" class="headerlink" title="3. First WebDriver program in Python"></a>3. First WebDriver program in Python</h2><h3 id="1-用-Pycharm-创建一个新项目"><a href="#1-用-Pycharm-创建一个新项目" class="headerlink" title="1.用 Pycharm 创建一个新项目."></a>1.用 Pycharm 创建一个新项目.</h3><ul>
<li>1.选择 <code>New env using Virtualenv</code>.</li>
<li>2.Base Interpreter: <code>python 3.7</code> </li>
<li>3.Inherit global site-packages.</li>
</ul>
<h3 id="2-安装-selenium"><a href="#2-安装-selenium" class="headerlink" title="2.安装 selenium"></a>2.安装 selenium</h3><ul>
<li>1.在项目根目录运行命令 <code>$ pip3 install selenium</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ pip3 install selenium</span><br><span class="line">Collecting selenium </span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;80&#x2F;d6&#x2F;4294f0b4bce4de0abf13e17190289f9d0613b0a44e5dd6a7f5ca98459853&#x2F;selenium-3.141.0-py2.py3-none-any.whl (904kB)</span><br><span class="line">    100% |████████████████████████████████| 911kB 304kB&#x2F;s </span><br><span class="line">Collecting urllib3 (from selenium)</span><br><span class="line">  Downloading https:&#x2F;&#x2F;files.pythonhosted.org&#x2F;packages&#x2F;e1&#x2F;e5&#x2F;df302e8017440f111c11cc41a6b432838672f5a70aa29227bf58149dc72f&#x2F;urllib3-1.25.9-py2.py3-none-any.whl (126kB)</span><br><span class="line">    100% |████████████████████████████████| 133kB 66kB&#x2F;s </span><br><span class="line">Installing collected packages: urllib3, selenium</span><br><span class="line">Successfully installed selenium-3.141.0 urllib3-1.25.9</span><br></pre></td></tr></table></figure>

<ul>
<li>2.或者可以下载安装 <a href="https://www.selenium.dev/downloads/">https://www.selenium.dev/downloads/</a></li>
</ul>
<h3 id="3-下载及安装-selenium-Third-Party-browser-driver"><a href="#3-下载及安装-selenium-Third-Party-browser-driver" class="headerlink" title="3.下载及安装 selenium Third Party browser driver"></a>3.下载及安装 <code>selenium Third Party browser driver</code></h3><h5 id="1-下载链接-selenium-Third-Party-browser-driver-download"><a href="#1-下载链接-selenium-Third-Party-browser-driver-download" class="headerlink" title="1.下载链接 selenium Third Party browser driver download"></a>1.下载链接 <a href="https://www.selenium.dev/downloads/">selenium Third Party browser driver download</a></h5><ul>
<li>1.<a href="https://sites.google.com/a/chromium.org/chromedriver/">ChromeDriver - WebDriver for Chrome</a></li>
<li>2.<a href="https://firefox-source-docs.mozilla.org/testing/geckodriver/Support.html">Firefox Driver</a></li>
</ul>
<h2 id="4-Run-it-on-Chrome-and-Firefox-Browsers-1"><a href="#4-Run-it-on-Chrome-and-Firefox-Browsers-1" class="headerlink" title="4. Run it on Chrome and Firefox Browsers"></a>4. Run it on Chrome and Firefox Browsers</h2><h4 id="1-PyCharm-运行"><a href="#1-PyCharm-运行" class="headerlink" title="1.PyCharm 运行."></a>1.PyCharm 运行.</h4><ul>
<li>1.右键 <code>Run</code> 指定的文件<h4 id="2-命令行运行"><a href="#2-命令行运行" class="headerlink" title="2.命令行运行."></a>2.命令行运行.</h4></li>
<li>1.terminal 到指定的目录</li>
<li>2.<code>python3 文件名</code></li>
</ul>
<h2 id="5-输出测试报告-1"><a href="#5-输出测试报告-1" class="headerlink" title="5.输出测试报告"></a>5.输出测试报告</h2><ul>
<li>1.安装 <code>html-testRunner</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ pip install html-testRunner</span><br></pre></td></tr></table></figure>

<ul>
<li>2.在文件中导入并使用 testRunner</li>
</ul>
<blockquote>
<p>如下代码要在 terminal 中运行才会有测试报告生成 !!</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">import HtmlTestRunner</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    test_report_path &#x3D; &#39;&#x2F;Users&#x2F;glb_gz&#x2F;Documents&#x2F;python_workplace&#x2F;PythonSeleniumSessions&#x2F;reports&#x2F;&#39;</span><br><span class="line">    unittest.main(testRunner&#x3D;HtmlTestRunner.HTMLTestRunner(output&#x3D;test_report_path))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="6-示例代码-1"><a href="#6-示例代码-1" class="headerlink" title="6.示例代码"></a>6.示例代码</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">from selenium import webdriver</span><br><span class="line">from selenium.webdriver.common.by import By</span><br><span class="line">from selenium.webdriver.common.keys import Keys</span><br><span class="line">import unittest</span><br><span class="line">import HtmlTestRunner</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line"># Selenium Python: Sample Project</span><br><span class="line"># 1.   Create a test for Baidu Search</span><br><span class="line"># 2.   Add implicit wait of 10 sec</span><br><span class="line"># 3.   Maximize window</span><br><span class="line"># 4.   Create Unit Tests</span><br><span class="line"># 5.   Add HTML reporting library</span><br><span class="line"># 6.   Run from command line</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">class GoogleSearch(unittest.TestCase):</span><br><span class="line"></span><br><span class="line">    @classmethod</span><br><span class="line">    def setUpClass(cls):</span><br><span class="line">        chrome_exec_path &#x3D; &quot;&#x2F;Users&#x2F;glb_gz&#x2F;Documents&#x2F;python_workplace&#x2F;PythonSeleniumSessions&#x2F;drivers&#x2F;chromedriver&quot;</span><br><span class="line">        cls.driver &#x3D; webdriver.Chrome(executable_path&#x3D;chrome_exec_path)</span><br><span class="line">        cls.driver.implicitly_wait(10)</span><br><span class="line">        cls.driver.maximize_window()</span><br><span class="line"></span><br><span class="line">    def test_search_automationstepbystep(self):</span><br><span class="line">        self.driver.get(&quot;https:&#x2F;&#x2F;www.baidu.com&#x2F;&quot;)</span><br><span class="line">        self.driver.find_element(By.NAME, &quot;wd&quot;).send_keys(&quot;cheese&quot; + Keys.RETURN)</span><br><span class="line">        time.sleep(5)</span><br><span class="line"></span><br><span class="line">    def test_search_raghav(self):</span><br><span class="line">        self.driver.get(&quot;https:&#x2F;&#x2F;www.baidu.com&#x2F;&quot;)</span><br><span class="line">        self.driver.find_element(By.NAME, &quot;wd&quot;).send_keys(&quot;Raghav Pal&quot; + Keys.RETURN)</span><br><span class="line">        time.sleep(5)</span><br><span class="line"></span><br><span class="line">    @classmethod</span><br><span class="line">    def tearDownClass(cls):</span><br><span class="line">        cls.driver.close()</span><br><span class="line">        cls.driver.quit()</span><br><span class="line">        print(&quot;Test completed.&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ &#x3D;&#x3D; &#39;__main__&#39;:</span><br><span class="line">    test_report_path &#x3D; &#39;&#x2F;Users&#x2F;glb_gz&#x2F;Documents&#x2F;python_workplace&#x2F;PythonSeleniumSessions&#x2F;reports&#x2F;&#39;</span><br><span class="line">    unittest.main(testRunner&#x3D;HtmlTestRunner.HTMLTestRunner(output&#x3D;test_report_path))</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h2 id="7-其它插件-1"><a href="#7-其它插件-1" class="headerlink" title="7.其它插件"></a>7.其它插件</h2><h4 id="1-pytest"><a href="#1-pytest" class="headerlink" title="1.pytest"></a>1.pytest</h4><h4 id="2-Katalon-recorder-Chrome-Extensions"><a href="#2-Katalon-recorder-Chrome-Extensions" class="headerlink" title="2. Katalon recorder(Chrome Extensions)"></a>2. Katalon recorder(Chrome Extensions)</h4><ul>
<li>1.自动记录在浏览器上做的操作，然后生成代码.</li>
</ul>
]]></content>
      <categories>
        <category>auto-test</category>
      </categories>
      <tags>
        <tag>auto-test</tag>
      </tags>
  </entry>
  <entry>
    <title>Shadowsocks 客户端</title>
    <url>/2019/02/22/Shadowsocks_Client/</url>
    <content><![CDATA[<blockquote>
<p>关于 Shadowsocks 的客户端的相关信息</p>
</blockquote>
<a id="more"></a>


<h2 id="1-客户端的下载"><a href="#1-客户端的下载" class="headerlink" title="1.客户端的下载"></a><a href="#client_download">1.客户端的下载</a></h2><h2 id="2-连接的方法"><a href="#2-连接的方法" class="headerlink" title="2.连接的方法"></a><a href="#method_to_connect">2.连接的方法</a></h2><hr>
<hr>
<hr>
<h2 id="1-客户端的下载-1"><a href="#1-客户端的下载-1" class="headerlink" title="1.客户端的下载"></a>1.客户端的下载<a name="client_download"/></h2><h4 id="1-参考-1-科学上网相关知识总结"><a href="#1-参考-1-科学上网相关知识总结" class="headerlink" title="1.参考:1.科学上网相关知识总结"></a>1.参考:<a href="https://crifan.github.io/scientific_network_summary/website/server_client_mode/ss_client/client_ios.html">1.科学上网相关知识总结</a></h4><h4 id="2-Windows-平台"><a href="#2-Windows-平台" class="headerlink" title="2.Windows 平台"></a>2.Windows 平台</h4><ul>
<li>1.<a href="https://45.32.24.179/shadowsocks/Shadowsocks-win-dotnet4.0-2.5.2.zip">下载</a></li>
</ul>
<h4 id="3-Mac-平台"><a href="#3-Mac-平台" class="headerlink" title="3.Mac 平台"></a>3.Mac 平台</h4><ul>
<li>1.<a href="https://45.32.24.179/shadowsocks/ShadowsocksX-2.6.3.dmg">下载</a></li>
</ul>
<h4 id="4-Android-平台"><a href="#4-Android-平台" class="headerlink" title="4.Android 平台"></a>4.Android 平台</h4><blockquote>
<p>相关连的二维码扫描软件为 <a href="https://github.com/zxing/zxing/releases">Barcode Scanner 4.7.8</a></p>
</blockquote>
<ul>
<li>1.<a href="https://45.32.24.179/shadowsocks/shadowsocks_2.8.3.apk">下载 Android 版(2.8.3)</a></li>
<li>2.<a href="https://45.32.24.179/shadowsocks/shadowsocks--universal-4.7.0.apk">下载 Android 版(4.7.0)</a></li>
</ul>
<h4 id="5-iOS-平台"><a href="#5-iOS-平台" class="headerlink" title="5.iOS 平台"></a>5.iOS 平台</h4><blockquote>
<p>由于政策原因，国内 App Store 都已经下架了相关的 app !!</p>
</blockquote>
<ul>
<li><p>1.相关的客户端:</p>
<ul>
<li>1.SsrConnect</li>
<li>2.potatso</li>
<li>3.ss Tool(Shadowsocs Check Tool)</li>
<li></li>
</ul>
</li>
<li><p>2.相关的源代码</p>
<ul>
<li>1.<a href="https://tlanyan.me/build-your-ios-vpn-client/">构建自己的iOS网络代理客户端</a></li>
<li>2.<a href="https://github.com/haxpor/Potatso">Potatso</a></li>
</ul>
</li>
<li><p>3.相关的折中的方法(用别人的 appID 去下载)</p>
<ul>
<li>1.<a href="https://www.douban.com/note/698692376/?type=like#sep">分享已购买小火箭的美国appid，只登陆appstore，不要登陆iCloud</a>    </li>
</ul>
</li>
</ul>
<hr>
<h2 id="2-连接的方法-1"><a href="#2-连接的方法-1" class="headerlink" title="2.连接的方法"></a>2.连接的方法<a name="method_to_connect"/></h2><h4 id="1-Windows"><a href="#1-Windows" class="headerlink" title="1.Windows"></a>1.Windows</h4><ul>
<li>1.先打开 <code>SS 的二维码配置图片</code></li>
<li>2.打开 Shadowsocks 客户端, 然后可以看到右下角有个 纸飞机 的图标.</li>
<li>3.右键点击 纸飞机 图标,点击 <code>服务器/扫描屏幕上的二维码</code> 项,可以看到二维码被扫描，完成了配置.</li>
<li>4.点击 <code>启动系统代理</code> 项.</li>
<li>5.用浏览器打开 <a href="https://www.google.com/">google 主页:https://www.google.com</a> ,如果可以打开，就证明可以科学上网了.</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Shadowsocks/windows_connect_step.png"></p>
]]></content>
      <categories>
        <category>ss</category>
      </categories>
      <tags>
        <tag>ss</tag>
      </tags>
  </entry>
  <entry>
    <title>Shadowsocks 的搭建</title>
    <url>/2018/09/04/Shadowsocks_Deploy/</url>
    <content><![CDATA[<h1 id="Shadowsocks-的搭建"><a href="#Shadowsocks-的搭建" class="headerlink" title="Shadowsocks 的搭建"></a>Shadowsocks 的搭建</h1><blockquote>
<p>关于 Shadowsocks 的搭建计划.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-shadowsocks-libev-的安装"><a href="#1-shadowsocks-libev-的安装" class="headerlink" title="1.shadowsocks-libev 的安装"></a><a href="#ss_install">1.shadowsocks-libev 的安装</a></h2><h2 id="2-shadowsocks-libev-的多用户搭建"><a href="#2-shadowsocks-libev-的多用户搭建" class="headerlink" title="2.shadowsocks-libev 的多用户搭建"></a><a href="#ss_multi_user">2.shadowsocks-libev 的多用户搭建</a></h2><h2 id="3-相关的控制的命令"><a href="#3-相关的控制的命令" class="headerlink" title="3.相关的控制的命令"></a><a href="#related_command">3.相关的控制的命令</a></h2><h2 id="4-相关的软件"><a href="#4-相关的软件" class="headerlink" title="4.相关的软件"></a><a href="#related_software">4.相关的软件</a></h2><h2 id="5-相关端口被屏蔽"><a href="#5-相关端口被屏蔽" class="headerlink" title="5.相关端口被屏蔽"></a><a href="#related_port_shield">5.相关端口被屏蔽</a></h2><h2 id="6-客户端设置的分享"><a href="#6-客户端设置的分享" class="headerlink" title="6.客户端设置的分享"></a><a href="#share_settings">6.客户端设置的分享</a></h2><h2 id="7-Mac下共享ShadowsocksX-NG-给手机"><a href="#7-Mac下共享ShadowsocksX-NG-给手机" class="headerlink" title="7.Mac下共享ShadowsocksX-NG 给手机"></a><a href="#share_to_phone">7.Mac下共享ShadowsocksX-NG 给手机</a></h2><hr>
<hr>
<hr>
<h2 id="1-Shadowsocks-libev-的安装"><a href="#1-Shadowsocks-libev-的安装" class="headerlink" title="1.Shadowsocks-libev 的安装"></a>1.Shadowsocks-libev 的安装<a name="ss_install"/></h2><ul>
<li><a href="https://github.com/shadowsocks/shadowsocks-libev">1.官方的 Github 安装介绍</a></li>
</ul>
<hr>
<h2 id="2-shadowsocks-libev-的多用户搭建-1"><a href="#2-shadowsocks-libev-的多用户搭建-1" class="headerlink" title="2.shadowsocks-libev 的多用户搭建"></a>2.shadowsocks-libev 的多用户搭建<a name="ss_multi_user"/></h2><h3 id="1-用-SS-MANAGER-创建多用户"><a href="#1-用-SS-MANAGER-创建多用户" class="headerlink" title="1.用 SS-MANAGER 创建多用户"></a>1.用 SS-MANAGER 创建多用户</h3><h4 id="1-编辑-etc-shadowsocks-libev-config-json-文件"><a href="#1-编辑-etc-shadowsocks-libev-config-json-文件" class="headerlink" title="1.编辑 /etc/shadowsocks-libev/config.json 文件"></a>1.编辑 <code>/etc/shadowsocks-libev/config.json</code> 文件</h4><blockquote>
<p>如这里添加了两个端口(101, 102)和连接密码.</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;server&quot;:[&quot;::0&quot;,&quot;0.0.0.0&quot;],</span><br><span class="line">  &quot;port_password&quot;: &#123;</span><br><span class="line">        &quot;101&quot;: &quot;psw101&quot;,</span><br><span class="line">        &quot;102&quot;: &quot;psw102&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;timeout&quot;:60,</span><br><span class="line">  &quot;method&quot;:&quot;encry-methods&quot;,</span><br><span class="line">  &quot;fast_open&quot;:true</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h4 id="2-开启-ss-manager-服务"><a href="#2-开启-ss-manager-服务" class="headerlink" title="2.开启 ss-manager 服务"></a>2.开启 ss-manager 服务</h4><h5 id="1-手动开启"><a href="#1-手动开启" class="headerlink" title="1.手动开启"></a>1.手动开启</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ss-manager --manager-address &#x2F;var&#x2F;run&#x2F;shadowsocks-manager.sock -c &#x2F;etc&#x2F;shadowsocks-libev&#x2F;config.json</span><br></pre></td></tr></table></figure>

<h5 id="2-自动开启"><a href="#2-自动开启" class="headerlink" title="2.自动开启"></a>2.自动开启</h5><ul>
<li>1.参考: <a href="https://wiki.debian.org/systemd/Services">Create systemd Services</a></li>
<li>2.创建系统服务, 新增文件 <code>/etc/systemd/system/ss-manager.service</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description&#x3D;Shadowsocks Manager Server</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User&#x3D;root</span><br><span class="line">Group&#x3D;root</span><br><span class="line">Type&#x3D;simple</span><br><span class="line">Restart&#x3D;always</span><br><span class="line">ExecStart&#x3D;&#x2F;usr&#x2F;bin&#x2F;ss-manager --manager-address &#x2F;var&#x2F;run&#x2F;shadowsocks-manager.sock -c &#x2F;etc&#x2F;shadowsocks-libev&#x2F;config.json</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy&#x3D;multi-user.target</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.设置开机启动</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl enable ss-manager.service</span><br><span class="line"></span><br><span class="line">systemctl start ss-manager.service</span><br><span class="line"></span><br><span class="line"># systemctl stop ss-manager.service</span><br><span class="line"># systemctl status ss-manager.service</span><br></pre></td></tr></table></figure>

<hr>
<h3 id="2-用-SS-Server-创建多用户"><a href="#2-用-SS-Server-创建多用户" class="headerlink" title="2.用 SS-Server 创建多用户"></a>2.用 SS-Server 创建多用户</h3><h4 id="1-多用户的搭建"><a href="#1-多用户的搭建" class="headerlink" title="1.多用户的搭建"></a><a href="https://github.com/shadowsocks/shadowsocks-libev/issues/5">1.多用户的搭建</a></h4><h4 id="2-教程"><a href="#2-教程" class="headerlink" title="2.教程:"></a>2.教程:</h4><pre><code>* 1.到 `/etc/shadowsocks-libev` 中复制一个 `config.json` 文件，并修改为想要的设置
* 2.然后用 `ss-server` 配置,配置完就重启,`ss-server -c config1.json -f pid1`
* 3.如果有多个用户,就继续下面的配置(记得要有 configX.json 文件)
    * 1.`ss-server -c config2.json -f pid2`
    * 2.`ss-server -c config3.json -f pid3`</code></pre>
<h4 id="3-Config-json-文件的配置-DEMO"><a href="#3-Config-json-文件的配置-DEMO" class="headerlink" title="3.Config.json 文件的配置 DEMO:"></a>3.Config.json 文件的配置 DEMO:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">user@Company:&#x2F;etc# cat &#x2F;etc&#x2F;shadowsocks-libev&#x2F;config.json</span><br><span class="line">&#123;</span><br><span class="line">    &quot;server&quot;:&quot;x.x.x.x&quot;,</span><br><span class="line">    &quot;server_port&quot;:101,</span><br><span class="line">    &quot;local_port&quot;:1080,</span><br><span class="line">    &quot;password&quot;:&quot;111111&quot;,</span><br><span class="line">    &quot;timeout&quot;:60,</span><br><span class="line">    &quot;method&quot;:&quot;aes-256-cfb&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
<hr>
<h2 id="3-相关的控制的命令-1"><a href="#3-相关的控制的命令-1" class="headerlink" title="3.相关的控制的命令"></a>3.相关的控制的命令<a name="related_command"/></h2><ul>
<li>1.查看端口使用情况: <code>netstat －antu</code> or <code>netstat -tlnp</code>.</li>
<li>2.启动、停止、重启: <code>service shadowsocks-libev start/stop/restart</code><ul>
<li>1.注意，如果是多用户的话，上面的命令只会对 <code>config.json</code> 有用.(同样原理适用于主机重启后 !! 所以主机重启后务必检查相关的端口配置有没有开启 !!!)<ul>
<li>1.停止: <ul>
<li>1.用 <code>netstat -tlnp</code> 或 <code>ps -aux | less</code> 查看了程序的 <code>PID</code> 号后，就用 <code>kill -9 xxx(pid)</code> 去杀死指定 PID 的程序.</li>
</ul>
</li>
<li>2.开始: <code>ss-server -c config3.json -f pid3</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="4-相关的软件-1"><a href="#4-相关的软件-1" class="headerlink" title="4.相关的软件"></a>4.相关的软件<a name="related_software"/></h2><ul>
<li><p>1.TCP BBR 拥堵控制算法 的开启:</p>
<ul>
<li><a href="https://fiveyellowmice.com/posts/2016/12/bbr-congestion-algorithm-dark-science.html">1.BBR 阻塞算法，真是黑科技</a></li>
<li><a href="https://sb.sb/blog/debian-ubuntu-tcp-bbr/">2.Debian / Ubuntu 更新内核并开启 TCP BBR 拥塞控制算法</a></li>
</ul>
</li>
<li><p><a href="https://www.howtoforge.com/tutorial/check-internet-speed-with-speedtest-cli-on-ubuntu/">2.speedtest-cli测速工具</a></p>
</li>
<li><p>3.搭建过程:</p>
<ul>
<li>1.内核查看的命令 <code>cat /proc/version</code></li>
<li>2.过程(摘自<a href="https://fiveyellowmice.com/posts/2016/12/bbr-congestion-algorithm-dark-science.html">1.BBR 阻塞算法，真是黑科技</a>):</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">加载内核模块。</span><br><span class="line">先运行 sudo modprobe tcp_bbr 看一看，没问题的话，就创建一个 &#x2F;etc&#x2F;modules-load.d&#x2F;80-bbr.conf ，里面写上 tcp_bbr 七个字，就会每次开机自动加载 tcp_bbr 模块了。</span><br><span class="line">让内核使用 BBR 为阻塞控制算法。</span><br><span class="line">cat &#x2F;proc&#x2F;sys&#x2F;net&#x2F;ipv4&#x2F;tcp_available_congestion_control 看看里面有没有 bbr 三个字。</span><br><span class="line">没问题的话， sudo sysctl net.ipv4.tcp_congestion_control&#x3D;bbr 来启用 BBR 。</span><br><span class="line">除非你想每次开机都运行一遍 sysctl ，记得创建一个 &#x2F;etc&#x2F;sysctl.d&#x2F;80-bbr.conf ，写上 net.ipv4.tcp_congestion_control &#x3D; bbr 就可以了。</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="5-相关端口被屏蔽-1"><a href="#5-相关端口被屏蔽-1" class="headerlink" title="5.相关端口被屏蔽"></a>5.相关端口被屏蔽<a name="related_port_shield"/></h2><ul>
<li>1.发现（20190304）一个端口 <code>9005</code> 不能连接成功，经过测试，发现是被国内屏蔽了.<ul>
<li>1.测试过程:<ul>
<li>1.本地的 Mac 用 <code>nc -v 62.42.41.223 9005</code> 不通过.</li>
<li>2.外国的 Linux Debian 用 <code>nc -v 62.42.41.223 9005</code> 通过.</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="6-客户端设置的分享-1"><a href="#6-客户端设置的分享-1" class="headerlink" title="6.客户端设置的分享"></a>6.客户端设置的分享<a name="share_settings"/></h2><ul>
<li>1.遇到的 Bug:<ul>
<li>1.经过实战发现,如果是用 ShadowsocksX-NG(for mac)相关的二维码分享,旧版本的 Shadowsocks(Android 或 Windows ) 都不会被识别，所以要分享 二维码的图片，还是要用旧版本的 Windows 客户端去做分享.</li>
</ul>
</li>
</ul>
<hr>
<h2 id="7-Mac下共享ShadowsocksX-NG-给手机-1"><a href="#7-Mac下共享ShadowsocksX-NG-给手机-1" class="headerlink" title="7.Mac下共享ShadowsocksX-NG 给手机"></a>7.Mac下共享ShadowsocksX-NG 给手机<a name="share_to_phone"/></h2><ul>
<li>1.参考: <a href="https://www.jibing57.com/2019/03/24/share-ShadowsocksX-NG-to-iOS/">7.Mac下共享ShadowsocksX-NG 给手机</a></li>
</ul>
<h5 id="1-打开小飞机的“偏好设置”，切换到HTTP一栏，其中的HTTP代理监听地址默认是127-0-0-1，将其改成0-0-0-0。保留默认的1087或改为自己想要设置的端口，并勾选“开启HTTP代理服务器”。"><a href="#1-打开小飞机的“偏好设置”，切换到HTTP一栏，其中的HTTP代理监听地址默认是127-0-0-1，将其改成0-0-0-0。保留默认的1087或改为自己想要设置的端口，并勾选“开启HTTP代理服务器”。" class="headerlink" title="1.打开小飞机的“偏好设置”，切换到HTTP一栏，其中的HTTP代理监听地址默认是127.0.0.1，将其改成0.0.0.0。保留默认的1087或改为自己想要设置的端口，并勾选“开启HTTP代理服务器”。"></a>1.打开小飞机的“偏好设置”，切换到HTTP一栏，其中的HTTP代理监听地址默认是127.0.0.1，将其改成0.0.0.0。保留默认的1087或改为自己想要设置的端口，并勾选“开启HTTP代理服务器”。</h5><h5 id="2-Phone连接到和Mac相同的局域网，然后在“无线局域网”中设置HTTP代理。"><a href="#2-Phone连接到和Mac相同的局域网，然后在“无线局域网”中设置HTTP代理。" class="headerlink" title="2.Phone连接到和Mac相同的局域网，然后在“无线局域网”中设置HTTP代理。"></a>2.Phone连接到和Mac相同的局域网，然后在“无线局域网”中设置HTTP代理。</h5><ul>
<li>1.地址填写 电脑的地址</li>
<li>2.端口填写 1087.</li>
<li>3.用浏览器访问外网，测试一下效果.</li>
</ul>
]]></content>
      <categories>
        <category>ss</category>
      </categories>
      <tags>
        <tag>ss</tag>
      </tags>
  </entry>
  <entry>
    <title>学习 Shell Script</title>
    <url>/2020/02/02/ShellScript_Learn/</url>
    <content><![CDATA[<blockquote>
<p>学习 Shell script .</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h2><h2 id="2-导入其它的-Script-文件"><a href="#2-导入其它的-Script-文件" class="headerlink" title="2.导入其它的 Script 文件."></a>2.导入其它的 Script 文件.</h2><h2 id="3-Demo"><a href="#3-Demo" class="headerlink" title="3.Demo"></a>3.Demo</h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考</h2><ul>
<li><a href="https://ryanstutorials.net/linuxtutorial/">1.Linux Tutorial</a></li>
<li><a href="https://ryanstutorials.net/bash-scripting-tutorial/">2.Bash Scripting Tutorial</a></li>
<li><a href="https://github.com/monfresh/laptop">3.A shell script which turns your Mac into an awesome web development machine</a></li>
</ul>
<h2 id="2-导入其它的-Script-文件-1"><a href="#2-导入其它的-Script-文件-1" class="headerlink" title="2.导入其它的 Script 文件."></a>2.导入其它的 Script 文件.</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;sh</span><br><span class="line"></span><br><span class="line">#[How best to include other scripts?](https:&#x2F;&#x2F;stackoverflow.com&#x2F;questions&#x2F;192292&#x2F;how-best-to-include-other-scripts)</span><br><span class="line">my_dir&#x3D;&quot;$(dirname &quot;$0&quot;)&quot;</span><br><span class="line"></span><br><span class="line">&quot;$my_dir&#x2F;other_script.sh&quot;</span><br></pre></td></tr></table></figure>



<h2 id="3-Demo-1"><a href="#3-Demo-1" class="headerlink" title="3.Demo"></a>3.Demo</h2><ul>
<li>1.打印 Bash 的版本号</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ echo $BASH_VERSION</span><br><span class="line">3.2.57(1)-release</span><br></pre></td></tr></table></figure>

<ul>
<li>2.只读属性 </li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">readonly var</span><br></pre></td></tr></table></figure>

<ul>
<li>1.Demo 1检查 file 是否存在</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">usage() &#123;</span><br><span class="line">    echo &quot;You need to provide an argumennt:&quot;</span><br><span class="line">    echo &quot;usage: $0 file_name&quot;</span><br><span class="line">&#125;</span><br><span class="line">is_file_exist() &#123;</span><br><span class="line">    local file&#x3D;&quot;$1&quot;</span><br><span class="line">    [[ -f &quot;$file&quot; ]] &amp;&amp; return 0 || return 1</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">## 如果是 0， 即没有参数输入的情况，就执行后面的 usage.</span><br><span class="line">[[ $# -eq 0 ]] &amp;&amp; usage</span><br><span class="line"></span><br><span class="line">## 如果返回 0 ， 就代表找到了 file.</span><br><span class="line">if ( is_file_exist &quot;$1&quot; )</span><br><span class="line">then</span><br><span class="line">    echo &quot;File found&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;File not found&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.方法的返回值</li>
</ul>
<blockquote>
<p>方法的返回值会保存在 <code>$?</code> 中，而且 <code>$?</code> 一旦获取过一次后，就会自动变为 0.</p>
</blockquote>
<ul>
<li><p>0.参考: <a href="https://bash.cyberciti.biz/guide/Returning_from_a_function">Returning from a function</a></p>
</li>
<li><p>1.用 <code>$?</code></p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">function test_return() &#123;</span><br><span class="line">    sum&#x3D;$(($1 + $2))</span><br><span class="line">    return $sum</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">echo &quot;(before)test_return:$?&quot;</span><br><span class="line">test_return 1 2</span><br><span class="line">echo &quot;test_return:$?&quot;</span><br><span class="line"></span><br><span class="line">test_return 3 4</span><br><span class="line">echo &quot;test_return:$?&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.返回 string</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">domain&#x3D;&quot;CyberCiti.BIz&quot;</span><br><span class="line">out&#x3D;&quot;&quot;</span><br><span class="line"></span><br><span class="line">##################################################################</span><br><span class="line"># Purpose: Converts a string to lower case</span><br><span class="line"># Arguments:</span><br><span class="line">#   $@ -&gt; String to convert to lower case</span><br><span class="line">##################################################################</span><br><span class="line">function to_lower()</span><br><span class="line">&#123;</span><br><span class="line">    local str&#x3D;&quot;$@&quot;</span><br><span class="line">    local output</span><br><span class="line">    output&#x3D;$(tr &#39;[A-Z]&#39; &#39;[a-z]&#39;&lt;&lt;&lt;&quot;$&#123;str&#125;&quot;)</span><br><span class="line">    echo $output</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># invoke the to_lower()</span><br><span class="line">to_lower &quot;This Is a TEST&quot;</span><br><span class="line"></span><br><span class="line"># invoke to_lower() and store its result to $out variable</span><br><span class="line">out&#x3D;$(to_lower $&#123;domain&#125;)</span><br><span class="line"></span><br><span class="line"># Display  back the result from $out</span><br><span class="line">echo &quot;Domain name : $out&quot;</span><br></pre></td></tr></table></figure>

<h3 id="1-PID-相关"><a href="#1-PID-相关" class="headerlink" title="1.PID 相关."></a>1.PID 相关.</h3><h5 id="1-打印-pid"><a href="#1-打印-pid" class="headerlink" title="1.打印 pid"></a>1.打印 pid</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#echo &quot;pid is $$&quot;</span><br></pre></td></tr></table></figure>

<h6 id="2-kill-pid-所在的程序"><a href="#2-kill-pid-所在的程序" class="headerlink" title="2.kill pid 所在的程序."></a>2.kill pid 所在的程序.</h6><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ kill -9 pid</span><br></pre></td></tr></table></figure>

<h3 id="2-Debug-的方法"><a href="#2-Debug-的方法" class="headerlink" title="2.Debug 的方法"></a>2.Debug 的方法</h3><h5 id="1-在运行的时候添加-bash-x-命令-如"><a href="#1-在运行的时候添加-bash-x-命令-如" class="headerlink" title="* 1.在运行的时候添加 bash -x 命令, 如"></a>* 1.在运行的时候添加 bash -x 命令, 如</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ bash -x .&#x2F;file_name</span><br></pre></td></tr></table></figure>

<h5 id="2-在文件的头部添加-x-如"><a href="#2-在文件的头部添加-x-如" class="headerlink" title="* 2.在文件的头部添加 -x, 如"></a>* 2.在文件的头部添加 -x, 如</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash -x</span><br></pre></td></tr></table></figure>

<h5 id="3-或者在文件的中部位置添加-set-x-set-x-如"><a href="#3-或者在文件的中部位置添加-set-x-set-x-如" class="headerlink" title="* 3.或者在文件的中部位置添加 set -x , set +x 如:"></a>* 3.或者在文件的中部位置添加 set -x , set +x 如:</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">echo &quot;1&quot;</span><br><span class="line">set -x</span><br><span class="line">echo &quot;2&quot;</span><br><span class="line">echo &quot;3&quot;</span><br><span class="line">echo &quot;4&quot;</span><br><span class="line">set +x</span><br><span class="line">echo &quot;5&quot;</span><br></pre></td></tr></table></figure>

<h3 id="3-与或操作命令符"><a href="#3-与或操作命令符" class="headerlink" title="3.与或操作命令符"></a>3.与或操作命令符</h3><ul>
<li><a href="https://stackoverflow.com/questions/4510640/what-is-the-purpose-of-in-a-shell-command">What is the purpose of “&amp;&amp;” in a shell command?</a></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># command_1 &amp;&amp; command_2: execute command_2 only when command_1 is executed successfully.</span><br><span class="line"># command_1 || command_2: execute command_2 only when command_1 is not successful executed.</span><br><span class="line"></span><br><span class="line">$ false || echo &quot;Oops, fail&quot;</span><br><span class="line">Oops, fail</span><br><span class="line"></span><br><span class="line">$ true || echo &quot;Will not be printed&quot;</span><br><span class="line">$  </span><br><span class="line"></span><br><span class="line">$ true &amp;&amp; echo &quot;Things went well&quot;</span><br><span class="line">Things went well</span><br><span class="line"></span><br><span class="line">$ false &amp;&amp; echo &quot;Will not be printed&quot;</span><br><span class="line">$</span><br><span class="line"></span><br><span class="line">$ false ; echo &quot;This will always run&quot;</span><br><span class="line">This will always run</span><br></pre></td></tr></table></figure>

<h3 id="4-判断用户是否是-root"><a href="#4-判断用户是否是-root" class="headerlink" title="4.判断用户是否是 root"></a>4.判断用户是否是 root</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Purpose: Determine if current user is root or not</span><br><span class="line">is_root_user()&#123;</span><br><span class="line"> # root user has user id (UID) zero.</span><br><span class="line"> [ $(id -u) -eq 0 ] &amp;&amp; return $TRUE || return $FALSE</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">is_root_user &amp;&amp; echo &quot;You can run this script.&quot; || echo &quot;You need to run this script as a root user.&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="5-判断-True-of-False"><a href="#5-判断-True-of-False" class="headerlink" title="5.判断 True of False"></a>5.判断 True of False</h3><ul>
<li>1.参考:<a href="https://superuser.com/questions/1400335/how-does-bash-test-false">How does bash test ‘false’?</a></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">declare -r TRUE&#x3D;true</span><br><span class="line">declare -r FALSE&#x3D;false</span><br><span class="line"></span><br><span class="line">if [ $TRUE &#x3D; true ]</span><br><span class="line">then</span><br><span class="line">    echo &quot;TRUE&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;FALSE&quot;</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>

<ul>
<li>1.<code>-eq</code> 是判断 数字类型的, <code>=</code> 判断 string 类型</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">declare -r five&#x3D;05</span><br><span class="line">declare -r siz&#x3D;06</span><br><span class="line">if [[ $five -eq 5 ]]; then echo &quot;equal&quot;; else echo &quot;nope&quot;; fi</span><br><span class="line"># print: equal</span><br><span class="line">if [[ $five -eq 6 ]]; then echo &quot;equal&quot;; else echo &quot;nope&quot;; fi</span><br><span class="line"># print: nope</span><br><span class="line">if [[ $five &#x3D; 5 ]]; then echo &quot;equal&quot;; else echo &quot;nope&quot;; fi</span><br><span class="line"># print: nope</span><br><span class="line">if [[ $five &#x3D; 6 ]]; then echo &quot;equal&quot;; else echo &quot;nope&quot;; fi</span><br><span class="line"># print: nope</span><br></pre></td></tr></table></figure>

<ul>
<li>2.<code>while</code> 判断</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">flag&#x3D;1</span><br><span class="line">while ((flag))</span><br><span class="line">do</span><br><span class="line">   read x</span><br><span class="line">   [ &quot;$x&quot; &#x3D;&#x3D; &quot;true&quot; ] &amp;&amp; flag&#x3D;0</span><br><span class="line">   echo &quot;$&#123;x&#125; : $&#123;flag&#125;&quot;</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>3.数字</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">declare -r TRUE&#x3D;0</span><br><span class="line">declare -r FALSE&#x3D;1</span><br><span class="line"></span><br><span class="line">condition&#x3D;$TRUE</span><br><span class="line"></span><br><span class="line">if [[ $condition -eq $TRUE ]]</span><br><span class="line">then</span><br><span class="line">    echo &quot;true&quot;</span><br><span class="line">else</span><br><span class="line">    echo &quot;false&quot;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Swagger学习</title>
    <url>/2018/07/11/Swagger%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="Swagger-学习"><a href="#Swagger-学习" class="headerlink" title="Swagger 学习"></a>Swagger 学习</h1><ul>
<li>1.了解到 Swagger 是一个强大的 API 生成工具，现在正准备学习.</li>
</ul>
<a id="more"></a>

<ul>
<li><a href="https://github.com/swagger-api/swagger-editor/tree/master">2.Swagger Editor GitHub 地址</a></li>
<li><a href="https://app.swaggerhub.com/home">3.Swagger Hub</a></li>
<li><a href="https://github.com/swagger-api/swagger-ui">4.Swagger UI GitHub 地址</a></li>
<li><a href="https://swagger.io/docs/">5.Swagger 资料文档</a></li>
<li><a href="http://generator.swagger.io/">6.Swagger Generator</a></li>
</ul>
<h3 id="1-参考链接"><a href="#1-参考链接" class="headerlink" title="1.参考链接"></a><a href="#references">1.参考链接</a></h3><h3 id="2-使用教程"><a href="#2-使用教程" class="headerlink" title="2.使用教程"></a><a href="#use_manual">2.使用教程</a></h3><h3 id="3-错误"><a href="#3-错误" class="headerlink" title="3.错误"></a><a href="#issues">3.错误</a></h3><hr>
<hr>
<hr>
<h3 id="1-参考链接-1"><a href="#1-参考链接-1" class="headerlink" title="1.参考链接:"></a>1.参考链接:<a name="references"/></h3><ul>
<li><a href="https://legacy.gitbook.com/book/huangwenchao/swagger/details">1.如何编写基于OpenAPI规范的API文档</a></li>
<li><a href="http://47.93.19.146:8080/ruicheng-app/">2.瑞骋项目的api</a></li>
<li><a href="https://blog.just4fun.site/swagger-note.html">3.Swagger使用笔记</a></li>
<li><a href="https://www.jianshu.com/p/5f190a0b40cb">4.Swagger-PHP 部署</a></li>
<li><a href="https://segmentfault.com/a/1190000014059501">5.laravel中部署 Swagger ui</a></li>
</ul>
<hr>
<h3 id="2-使用教程-1"><a href="#2-使用教程-1" class="headerlink" title="2.使用教程"></a>2.使用教程<a name="use_manual"/></h3><h5 id="1-简单的使用教程"><a href="#1-简单的使用教程" class="headerlink" title="1.简单的使用教程"></a>1.简单的使用教程</h5><blockquote>
<p>因为复制的教程现在还没学到(如 在服务器中部署 Swagger,让 API 随着代码的改变而自动改变, laravel 部署 Swagger 等等)，所以先介绍简单的应用.</p>
</blockquote>
<ul>
<li><p>1.<a href="https://github.com/swagger-api/swagger-editor/tree/master">下载 Editor 的代码</a>(也可以不下载，有个 <a href="https://app.swaggerhub.com/home">在线的编辑器</a> 可以生成 API JSON 文档数据)</p>
</li>
<li><p>2.编写完 API 后，就保存 JSON 文件到本地.</p>
<img src="/assets/imgs/api/Snip20180712_3.png" >
</li>
<li><p>3.<a href="https://github.com/swagger-api/swagger-ui">下载 Swagger UI</a> 的代码到本地,把 上一步保存的 swagger.json 文件复制到 dist 目录中, 然后复制 dist 目录到服务器.</p>
<img src="/assets/imgs/api/Snip20180712_4.png" >
</li>
<li><p>4.在浏览器中访问 <code>dist/index.html</code> 即可看到刚刚编写的 API 的文档资料.(我这里把 dist 的名字改为了 api_doc)</p>
<img src="/assets/imgs/api/Snip20180712_6.png" >
<img src="/assets/imgs/api/Snip20180712_5.png" >


</li>
</ul>
<hr>
<h3 id="3-错误-1"><a href="#3-错误-1" class="headerlink" title="3.错误"></a>3.错误<a name="issues"/></h3><ul>
<li><p>1.在本地的 Editor 编写 API 中，发现执行 Excute 后会返回 <code>    TypeError: Failed to fetch</code> .</p>
</li>
<li><p>2.本地的 <code>Swagger-UI</code> 的 <code>dist/index.html</code> 打不开 <code>swagger.json</code>,一直显示 <code>Failed to load API definition</code></p>
</li>
<li><p>3.把 API 放到服务器去运行，结果还是一样,显示 <code>Failed to load API definition</code></p>
</li>
<li><p>4.还不知道怎么解决以上的问题!!</p>
</li>
</ul>
<hr>
<hr>
<hr>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>VirtualBox 软件的使用</title>
    <url>/2019/06/04/VirtualBox%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<blockquote>
<p>介绍 Mac 中 VirtualBox 软件的使用</p>
</blockquote>
<a id="more"></a>
<h2 id="0-参考"><a href="#0-参考" class="headerlink" title="0.参考"></a><a href="#references">0.参考</a></h2><h2 id="1-VirtualBox-信息"><a href="#1-VirtualBox-信息" class="headerlink" title="1.VirtualBox 信息"></a><a href="#virtual_ifo">1.VirtualBox 信息</a></h2><h2 id="2-新建一个虚拟机"><a href="#2-新建一个虚拟机" class="headerlink" title="2.新建一个虚拟机"></a><a href="#create_new_virtual_machine">2.新建一个虚拟机</a></h2><h2 id="3-共享目录"><a href="#3-共享目录" class="headerlink" title="3.共享目录"></a><a href="#share_directory">3.共享目录</a></h2><h2 id="4-SSH-远程登录及-scp-文件传输"><a href="#4-SSH-远程登录及-scp-文件传输" class="headerlink" title="4.SSH 远程登录及 scp 文件传输"></a><a href="#ssh_login_scp_fileTransfer">4.SSH 远程登录及 scp 文件传输</a></h2><hr>
<hr>
<hr>
<h2 id="0-参考-1"><a href="#0-参考-1" class="headerlink" title="0.参考"></a>0.参考<a name="references"/></h2><ul>
<li><a href="https://askubuntu.com/questions/48436/how-to-scp-a-file-from-mac-ubuntu-virtualbox">参考1:How to SCP a file from Mac -&gt; Ubuntu VirtualBox?</a></li>
</ul>
<h2 id="1-VirtualBox-信息-1"><a href="#1-VirtualBox-信息-1" class="headerlink" title="1.VirtualBox 信息"></a>1.VirtualBox 信息<a name="virtual_ifo"/></h2><ul>
<li>1.<a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox 官网</a></li>
</ul>
<hr>
<h2 id="2-新建一个虚拟机-1"><a href="#2-新建一个虚拟机-1" class="headerlink" title="2.新建一个虚拟机"></a>2.新建一个虚拟机<a name="create_new_virtual_machine"/></h2><blockquote>
<p>以 Debian 为例.</p>
</blockquote>
<h4 id="1-参考-Installing-Debian-Linux-in-a-VirtualBox-Virtual-Machine"><a href="#1-参考-Installing-Debian-Linux-in-a-VirtualBox-Virtual-Machine" class="headerlink" title="1.参考:Installing Debian Linux in a VirtualBox Virtual Machine"></a>1.参考:<a href="http://www.brianlinkletter.com/installing-debian-linux-in-a-virtualbox-virtual-machine/">Installing Debian Linux in a VirtualBox Virtual Machine</a></h4><h4 id="2-下载好一个-Debian-安装包"><a href="#2-下载好一个-Debian-安装包" class="headerlink" title="2.下载好一个 Debian 安装包"></a>2.下载好一个 Debian 安装包</h4><ul>
<li>1.这里在 Debian 的 <a href="https://www.debian.org/distrib/">官网</a> 下载.</li>
</ul>
<h4 id="3-配置好安装包"><a href="#3-配置好安装包" class="headerlink" title="3.配置好安装包"></a>3.配置好安装包</h4><ul>
<li>1.在 Storage 中配置好安装包.</li>
</ul>
<h4 id="4-然后点击开始"><a href="#4-然后点击开始" class="headerlink" title="4.然后点击开始"></a>4.然后点击开始</h4><ul>
<li>1.第一次会运行安装程序,按照提示步骤去一步一步安装就可以了.</li>
</ul>
<p>![](<a href="http://pic.pgyjz.cn/blog/Mac/screenshot">http://pic.pgyjz.cn/blog/Mac/screenshot</a> 2019-06-05 at 11.12.08.png)</p>
<ul>
<li>2.安装完成.</li>
</ul>
<p>![](<a href="http://pic.pgyjz.cn/blog/Mac/screenshot">http://pic.pgyjz.cn/blog/Mac/screenshot</a> 2019-06-05 at 11.18.21.png)</p>
<hr>
<h2 id="3-共享目录-1"><a href="#3-共享目录-1" class="headerlink" title="3.共享目录"></a>3.共享目录<a name="share_directory"/></h2><h4 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h4><ul>
<li>1.<a href="https://ryansechrest.com/2012/10/permanently-share-a-folder-between-host-mac-and-guest-linux-os-using-virtualbox/#comment-350254">Permanently share a folder between host (Mac) and guest (Linux) OS using VirtualBox</a></li>
</ul>
<h4 id="2-根据-参考1-去配置共享目录，但发现不行"><a href="#2-根据-参考1-去配置共享目录，但发现不行" class="headerlink" title="2.根据 参考1 去配置共享目录，但发现不行."></a>2.根据 <code>参考1</code> 去配置共享目录，但发现不行.</h4><hr>
<h2 id="4-SSH-远程登录及-scp-文件传输-1"><a href="#4-SSH-远程登录及-scp-文件传输-1" class="headerlink" title="4.SSH 远程登录及 scp 文件传输"></a>4.SSH 远程登录及 scp 文件传输<a name="ssh_login_scp_fileTransfer"/></h2><h4 id="1-配置端口号等等信息"><a href="#1-配置端口号等等信息" class="headerlink" title="1.配置端口号等等信息."></a>1.配置端口号等等信息.</h4><ul>
<li><p>1.在主机运行的情况下，点击 <code>VirtualBox</code> 中的 <code>Settings</code> -&gt; <code>Network</code> -&gt; <code>Advanced</code> -&gt; <code>Port Forwarding</code> , 然后如果没有 SSH 就自己新建一个：<code>Name &quot;ssh&quot;, protocol TCP, Host port = 2281, Guest port = 22</code>.操作过程如下所示:</p>
<p>  <img src="http://pic.pgyjz.cn/blog/Mac/Snip20190613_1.png"><br>  <img src="http://pic.pgyjz.cn/blog/Mac/Snip20190613_2.png"><br>  <img src="http://pic.pgyjz.cn/blog/Mac/Snip20190613_3.png"></p>
</li>
</ul>
<h4 id="2-然后从-Mac-登录-VirtualBox-中的虚拟机"><a href="#2-然后从-Mac-登录-VirtualBox-中的虚拟机" class="headerlink" title="2.然后从 Mac 登录 VirtualBox 中的虚拟机"></a>2.然后从 Mac 登录 VirtualBox 中的虚拟机</h4><ul>
<li>1.Mac 中的 terminal 执行 <code>ssh userName@host -p remotePort</code>, 如我的就为: <code>ssh tian@127.0.0.1 -p 2281</code>,然后输入用户的密码即可登录成功.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MacBook-Pro:macUser$ ssh tian@127.0.0.1 -p 2281</span><br><span class="line">tian@127.0.0.1&#39;s password: </span><br><span class="line">Linux debian 4.9.0-9-amd64 #1 SMP Debian 4.9.168-1+deb9u2 (2019-05-13) x86_64</span><br><span class="line"></span><br><span class="line">The programs included with the Debian GNU&#x2F;Linux system are free software;</span><br><span class="line">the exact distribution terms for each program are described in the</span><br><span class="line">individual files in &#x2F;usr&#x2F;share&#x2F;doc&#x2F;*&#x2F;copyright.</span><br><span class="line"></span><br><span class="line">Debian GNU&#x2F;Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class="line">permitted by applicable law.</span><br><span class="line">Last login: Thu Jun 13 02:23:16 2019</span><br></pre></td></tr></table></figure>

<h4 id="3-用-SCP-实现文件传输"><a href="#3-用-SCP-实现文件传输" class="headerlink" title="3.用 SCP 实现文件传输."></a>3.用 SCP 实现文件传输.</h4><ul>
<li><p>1.上传(Mac 端 Terminal 的操作):</p>
<ul>
<li>1.如把 Mac 桌面的 <code>README.md</code> 文件上传到 <code>VirtualBox Linux 机器</code>: <code>scp -P portNumber MacFileAddress LinuxUser@host:LinuxFileLocation</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MacBook-Pro:macUser$ scp -P 2281 &#x2F;Users&#x2F;gz&#x2F;Desktop&#x2F;README.md tian@127.0.0.1:&#x2F;tmp</span><br><span class="line">tian@127.0.0.1&#39;s password: </span><br><span class="line">README.md                                                                                                                   100% 2594   857.3KB&#x2F;s   00:00    </span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>2.下载(Mac 端 Terminal 的操作):</p>
<ul>
<li>1.从 <code>VirtualBox Linux 机器</code> 下载文件到 Mac 中: <code>scp -P portNumber LinuxUser@host: LinuxFileAddress  MacFileAddress</code></li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">MacBook-Pro:macUser$ scp -P 2281 tian@127.0.0.1:&#x2F;tmp&#x2F;README.md &#x2F;Users&#x2F;gz&#x2F;Downloads</span><br><span class="line">tian@127.0.0.1&#39;s password: </span><br><span class="line">Permission denied, please try again.</span><br><span class="line">tian@127.0.0.1&#39;s password: </span><br><span class="line">README.md                                                                                                                   100% 2594     1.1MB&#x2F;s   00:00    </span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>虚拟机</category>
      </categories>
      <tags>
        <tag>虚拟机</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows BLE 开发</title>
    <url>/2019/12/02/Windows_BLE_Develop/</url>
    <content><![CDATA[<blockquote>
<p>记录 Windows 平台开发 BLE Application 的过程</p>
</blockquote>
<a id="more"></a>

<h2 id="1-Windows-BLE-开发资料"><a href="#1-Windows-BLE-开发资料" class="headerlink" title="1.Windows BLE 开发资料."></a><a href="#windows_ble_references">1.Windows BLE 开发资料.</a></h2><h2 id="2-USB-BLE-扩展"><a href="#2-USB-BLE-扩展" class="headerlink" title="2.USB BLE 扩展"></a><a href="#win_ble_extend">2.USB BLE 扩展</a></h2><h2 id="3-检查-PC-是否支持蓝牙"><a href="#3-检查-PC-是否支持蓝牙" class="headerlink" title="3.检查 PC 是否支持蓝牙"></a><a href="#win_ble_check_manual">3.检查 PC 是否支持蓝牙</a></h2><h2 id="4-硬件要求"><a href="#4-硬件要求" class="headerlink" title="4.硬件要求"></a><a href="#win_hardware">4.硬件要求</a></h2><h2 id="5-开发步骤"><a href="#5-开发步骤" class="headerlink" title="5.开发步骤"></a><a href="#win_ble_develop">5.开发步骤</a></h2><h2 id="6-问题"><a href="#6-问题" class="headerlink" title="6.问题"></a><a href="#issues">6.问题</a></h2><hr>
<hr>
<hr>
<h2 id="1-Windows-BLE-开发资料-1"><a href="#1-Windows-BLE-开发资料-1" class="headerlink" title="1.Windows BLE 开发资料."></a>1.Windows BLE 开发资料.<a name="windows_ble_references"/></h2><ul>
<li>1.<a href="https://github.com/Microsoft/Windows-universal-samples/tree/master/Samples/BluetoothLE">Windows-universal-samples/Samples/BluetoothLE/</a></li>
<li>4.<a href="https://www.cnblogs.com/dearsj001/p/BLE4Windows.html">Windows 8.1 低功耗蓝牙开发</a></li>
<li>5.<a href="https://docs.microsoft.com/en-us/windows/uwp/devices-sensors/gatt-client">Bluetooth GATT Client</a></li>
<li>6.<a href="https://stackoverflow.com/questions/45946559/how-to-register-for-ble-notifcations-from-a-wpf-app-running-on-windows-10-creato">How to register for BLE notifcations from a WPF app running on Windows 10 Creators Update?</a></li>
<li>7.<a href="https://www.nordicsemi.com/Software-and-tools/Development-Tools/nRF-Connect-for-desktop/Download#infotabs">nRF Connect for Desktop</a></li>
<li>8.<a href="https://github.com/NordicSemiconductor/pc-nrfconnect-ble">NordicSemiconductor/pc-nrfconnect-ble</a></li>
<li>9.BluetoothLEExplorer<ul>
<li>1.<a href="https://www.microsoft.com/en-us/p/bluetooth-le-explorer/9n0ztkf1qd98#activetab=pivot:overviewtab">Windows Download</a></li>
<li>2.<a href="https://github.com/Microsoft/BluetoothLEExplorer">Windows microsoft/BluetoothLEExplorer source code</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="2-USB-BLE"><a href="#2-USB-BLE" class="headerlink" title="2.USB BLE "></a>2.USB BLE <a name="win_ble_extend"/></h2><blockquote>
<p>台式机没有蓝牙硬件，可以买个 USB BLE 芯片去扩展这个功能.</p>
</blockquote>
<ul>
<li>1.<a href="https://item.jd.com/47752032148.html"> 奥睿科（ORICO）USB蓝牙适配器4.0接收器兼容4.1/4.2/5.0电脑手机耳机音频发射器 黑色-次日达</a></li>
</ul>
<hr>
<h2 id="3-检查-PC-是否支持蓝牙-1"><a href="#3-检查-PC-是否支持蓝牙-1" class="headerlink" title="3.检查 PC 是否支持蓝牙"></a>3.检查 PC 是否支持蓝牙<a name="win_ble_check_manual"/></h2><ul>
<li>1.<a href="https://winaero.com/blog/how-to-check-if-your-pc-supports-bluetooth-4-0/">How to check if your PC supports Bluetooth 4.0</a></li>
<li>2.<a href="https://www.thewindowsclub.com/how-to-check-bluetooth-version-in-windows-10">How to check Bluetooth Adapter version in Windows 10</a></li>
</ul>
<hr>
<h2 id="4-硬件要求-1"><a href="#4-硬件要求-1" class="headerlink" title="4.硬件要求"></a>4.硬件要求<a name="win_hardware"/></h2><ul>
<li>1.Windows 10<ul>
<li>1.Windows 8.1 只支持 Client,为了扩展的需要，最好是用 Windows 10</li>
</ul>
</li>
<li>2.电脑带有 BLE 的支持<ul>
<li>1.去 “设备管理器”-&gt;蓝牙，查看下面的列表，如果里面有“Microsoft Bluetooth LE 枚举器”, 就代表是支持的.<ul>
<li>1.如果没有看到 <code>Microsoft Bluetooth LE 枚举器 </code>, 去“设置”-&gt;“更改电脑设置”-&gt;“电脑和设备”-&gt;“蓝牙”中，把蓝牙打开. 如果也没有，就证明电脑的硬件不支持 BLE 或 需要去更新系统和蓝牙驱动.</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="5-开发步骤-1"><a href="#5-开发步骤-1" class="headerlink" title="5.开发步骤"></a>5.开发步骤<a name="win_ble_develop"/></h2><h4 id="1-检查蓝牙的状态"><a href="#1-检查蓝牙的状态" class="headerlink" title="1.检查蓝牙的状态:"></a>1.检查蓝牙的状态:</h4><ul>
<li><p>1.Universal Windows Platform (UWP) 程序</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Windows.Devices.Bluetooth.BluetoothAdapter adapter &#x3D; await Windows.Devices.Bluetooth.BluetoothAdapter.GetDefaultAsync();</span><br><span class="line"></span><br><span class="line">         if(adapter &#x3D;&#x3D;  null)</span><br><span class="line">         &#123;</span><br><span class="line">             MessageDialog msg &#x3D; new MessageDialog(&quot;Error getting access to Bluetooth adapter. Do you have a have bluetooth enabled?&quot;, &quot;Error&quot;);</span><br><span class="line">             await msg.ShowAsync();</span><br><span class="line"></span><br><span class="line">             IsPeripheralRoleSupported &#x3D; false;</span><br><span class="line">             IsCentralRoleSupported &#x3D; false;</span><br><span class="line">         &#125;</span><br><span class="line">         else</span><br><span class="line">         &#123; </span><br><span class="line">             IsPeripheralRoleSupported &#x3D; adapter.IsPeripheralRoleSupported;</span><br><span class="line">             IsCentralRoleSupported &#x3D; adapter.IsCentralRoleSupported;</span><br><span class="line">         &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>2.Windows Forms WPF 程序</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;**</span><br><span class="line">       *  [How to check if bluetooth is enabled on a device](https:&#x2F;&#x2F;stackoverflow.com&#x2F;a&#x2F;48794678)</span><br><span class="line">       * **&#x2F;</span><br><span class="line">      public bool GetBluetoothIsEnable()</span><br><span class="line">      &#123;</span><br><span class="line">          SelectQuery sq &#x3D; new SelectQuery(&quot;SELECT DeviceId FROM Win32_PnPEntity WHERE service&#x3D;&#39;BthLEEnum&#39;&quot;);</span><br><span class="line">          ManagementObjectSearcher searcher &#x3D; new ManagementObjectSearcher(sq);</span><br><span class="line">          return searcher.Get().Count &gt; 0;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="2-开始扫描"><a href="#2-开始扫描" class="headerlink" title="2.开始扫描:"></a>2.开始扫描:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if (ApiInformation.IsApiContractPresent(&quot;Windows.Foundation.UniversalApiContract&quot;, 5))</span><br><span class="line">          &#123;</span><br><span class="line">              string[] requestedProperties &#x3D;</span><br><span class="line">              &#123;</span><br><span class="line">                  &quot;System.Devices.GlyphIcon&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.Category&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.ContainerId&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.DeviceAddress&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.IsConnected&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.IsPaired&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.IsPresent&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.ProtocolId&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.Bluetooth.Le.IsConnectable&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.SignalStrength&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.Bluetooth.LastSeenTime&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.Bluetooth.Le.IsConnectable&quot;,</span><br><span class="line">              &#125;;</span><br><span class="line"></span><br><span class="line">              &#x2F;&#x2F; BT_Code: Currently Bluetooth APIs don&#39;t provide a selector to get ALL devices that are both paired and non-paired.</span><br><span class="line">              deviceWatcher &#x3D; DeviceInformation.CreateWatcher(</span><br><span class="line">                  BTLEDeviceWatcherAQSString,</span><br><span class="line">                  requestedProperties,</span><br><span class="line">                  DeviceInformationKind.AssociationEndpoint);</span><br><span class="line">          &#125;</span><br><span class="line">          else</span><br><span class="line">          &#123;</span><br><span class="line">              string[] requestedProperties &#x3D;</span><br><span class="line">              &#123;</span><br><span class="line">                  &quot;System.Devices.GlyphIcon&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.Category&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.ContainerId&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.DeviceAddress&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.IsConnected&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.IsPaired&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.IsPresent&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.ProtocolId&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.Bluetooth.Le.IsConnectable&quot;,</span><br><span class="line">                  &quot;System.Devices.Aep.SignalStrength&quot;,</span><br><span class="line">              &#125;;</span><br><span class="line"></span><br><span class="line">              &#x2F;&#x2F; BT_Code: Currently Bluetooth APIs don&#39;t provide a selector to get ALL devices that are both paired and non-paired.</span><br><span class="line">              deviceWatcher &#x3D; DeviceInformation.CreateWatcher(</span><br><span class="line">                  BTLEDeviceWatcherAQSString,</span><br><span class="line">                  requestedProperties,</span><br><span class="line">                  DeviceInformationKind.AssociationEndpoint);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          &#x2F;&#x2F; Register event handlers before starting the watcher.</span><br><span class="line">          deviceWatcher.Added +&#x3D; DeviceWatcher_Added;</span><br><span class="line">          deviceWatcher.Updated +&#x3D; DeviceWatcher_Updated;</span><br><span class="line">          deviceWatcher.Removed +&#x3D; DeviceWatcher_Removed;</span><br><span class="line">          deviceWatcher.EnumerationCompleted +&#x3D; DeviceWatcher_EnumerationCompleted;</span><br><span class="line">          deviceWatcher.Stopped +&#x3D; DeviceWatcher_Stopped;</span><br><span class="line"></span><br><span class="line">          deviceWatcher.Start();</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">private void DeviceWatcher_Added(DeviceWatcher sender, DeviceInformation deviceInfo)</span><br><span class="line">     &#123;</span><br><span class="line"></span><br><span class="line">         try</span><br><span class="line">         &#123;</span><br><span class="line">             &#x2F;&#x2F; Protect against race condition if the task runs after the app stopped the deviceWatcher.</span><br><span class="line">             if (sender &#x3D;&#x3D; deviceWatcher)</span><br><span class="line">             &#123;</span><br><span class="line">                </span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         catch (Exception ex)</span><br><span class="line">         &#123;</span><br><span class="line">             Debug.WriteLine(&quot;DeviceWatcher_Added: &quot; + ex.Message);</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     private void DeviceWatcher_Updated(DeviceWatcher sender, DeviceInformationUpdate deviceInfoUpdate)</span><br><span class="line">     &#123;</span><br><span class="line">         if (sender &#x3D;&#x3D; deviceWatcher)</span><br><span class="line">         &#123;</span><br><span class="line">            &#x2F;&#x2F;  Debug.WriteLine(String.Format(&quot;Updated &#123;0&#125;&#123;1&#125;&quot;, deviceInfoUpdate.Id, &quot;&quot;));</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     private void DeviceWatcher_Removed(DeviceWatcher sender, DeviceInformationUpdate deviceInfoUpdate)</span><br><span class="line">     &#123;</span><br><span class="line">         if (sender &#x3D;&#x3D; deviceWatcher)</span><br><span class="line">         &#123;</span><br><span class="line">          &#x2F;&#x2F;   Debug.WriteLine(String.Format(&quot;DeviceWatcher_Removed &#123;0&#125;&#123;1&#125;&quot;, deviceInfoUpdate.Id, &quot;&quot;));</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     private void DeviceWatcher_EnumerationCompleted(DeviceWatcher sender, object e)</span><br><span class="line">     &#123;</span><br><span class="line">         if (sender &#x3D;&#x3D; deviceWatcher)</span><br><span class="line">         &#123;</span><br><span class="line">             Debug.WriteLine(String.Format(&quot;DeviceWatcher_EnumerationCompleted&quot;));</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">     private void DeviceWatcher_Stopped(DeviceWatcher sender, object e)</span><br><span class="line">     &#123;</span><br><span class="line">         if (sender &#x3D;&#x3D; deviceWatcher)</span><br><span class="line">         &#123;</span><br><span class="line">             Debug.WriteLine(String.Format(&quot;DeviceWatcher_Stopped&quot;));</span><br><span class="line">         &#125;</span><br><span class="line">        </span><br><span class="line">     &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="3-连接"><a href="#3-连接" class="headerlink" title="3.连接"></a>3.连接</h4><h4 id="4-查看-Services"><a href="#4-查看-Services" class="headerlink" title="4.查看 Services"></a>4.查看 Services</h4><h4 id="5-查看-Characteristics-and-set-notifications"><a href="#5-查看-Characteristics-and-set-notifications" class="headerlink" title="5.查看 Characteristics and set notifications"></a>5.查看 Characteristics and set notifications</h4><h4 id="6-Write-data-to-Specific-Characteristics"><a href="#6-Write-data-to-Specific-Characteristics" class="headerlink" title="6.Write data to Specific Characteristics"></a>6.Write data to Specific Characteristics</h4><hr>
<h2 id="6-问题-1"><a href="#6-问题-1" class="headerlink" title="6.问题"></a>6.问题<a name="issues"/></h2><ul>
<li><p>1.在 <code>References</code> 里不见了 <code>Windows</code> 的 Tab</p>
<ul>
<li>1.解决方法:</li>
<li><a href="https://social.msdn.microsoft.com/Forums/vstudio/en-US/cbd15b39-f26b-4cc3-8ff1-edbb4beb52fe/how-to-call-windowsdevicesbluetooth-in-wpf-app?forum=wpf">1.How to call Windows.Devices.Bluetooth in WPF app RRS feed</a></li>
<li>2.在 <code>csproj</code> 处添加 <code>&lt;TargetPlatformVersion&gt;10.0&lt;/TargetPlatformVersion&gt;</code></li>
</ul>
</li>
<li><p>2.出现 <code>未能使用“通用身份验证”连接到设备“127.0.0.1”</code> 问题, 详细如下:</p>
<ul>
<li>1.<code>未能使用“通用身份验证”连接到设备“127.0.0.1”。请验证项目调试设置中指定了正确的远程身份验证模式。COMException - 由于目标计算机积极拒绝，无法连接。</code></li>
<li>2.解决方法, 因为是在本地计算机运行，所以要选择 CPU 架构为 <code>X86</code> or <code>X64</code></li>
</ul>
</li>
<li><p>3.出现项目点击运行,老是跳过的问题</p>
<ul>
<li>1.解决方法:右键 <code>Visual Studio 2019</code>, 以管理员方式运行.</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>BLE</category>
      </categories>
      <tags>
        <tag>BLE</tag>
      </tags>
  </entry>
  <entry>
    <title>Office Word 的简单用法</title>
    <url>/2019/03/01/Word%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<blockquote>
<p>主要是记录 <code>Office Word</code> 一些简单的用法.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-添加一些视图"><a href="#1-添加一些视图" class="headerlink" title="1.添加一些视图"></a>1.添加一些视图</h2><hr>
<hr>
<hr>
<h2 id="1-添加一些视图-1"><a href="#1-添加一些视图-1" class="headerlink" title="1.添加一些视图"></a>1.添加一些视图</h2><h4 id="1-Header"><a href="#1-Header" class="headerlink" title="1.Header"></a>1.Header</h4><ul>
<li>1.在 <code>Insert/Header</code> 中.</li>
</ul>
<h4 id="2-导航页面"><a href="#2-导航页面" class="headerlink" title="2.导航页面"></a>2.导航页面</h4><ul>
<li>1.参考: <a href="https://www.zhihu.com/question/21263470">添加目录</a></li>
<li>2.步骤:<ul>
<li>1.在各个页面的标题处设置为 <code>Home/Heading1/Heading2</code> 的风格.</li>
<li>2.完成了各个页面后，再在 <code>References/Table of Contents</code> 处选择一个风格的 导航，就可以自动生成一套导航菜单了.</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>word</category>
      </categories>
      <tags>
        <tag>word</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin_UnitTest</title>
    <url>/2018/12/29/Xamarin_UnitTest/</url>
    <content><![CDATA[<blockquote>
<p>Xamarin 测试相关</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a><a href="#references">1.参考</a></h2><h2 id="2-单元测试相关"><a href="#2-单元测试相关" class="headerlink" title="2.单元测试相关"></a><a href="#unit_test">2.单元测试相关</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考<a name="references"/></h2><ul>
<li>1.<a href="https://medium.com/@ppraserts/start-writing-unit-test-with-visual-studio-for-mac-992a71ac036c">Start writing unit test with Visual Studio for Mac</a></li>
<li>2.<a href="https://andrewlock.net/creating-parameterised-tests-in-xunit-with-inlinedata-classdata-and-memberdata/">Creating parameterised tests in xUnit with [InlineData], [ClassData], and [MemberData]</a></li>
<li>3.<a href="https://docs.microsoft.com/en-us/dotnet/core/testing/unit-testing-best-practices">Unit testing best practices with .NET Core and .NET Standard</a></li>
<li>4.<a href="https://www.c-sharpcorner.com/uploadfile/john_charles/mocking-in-net-with-moq/">Mocking in .NET with Moq</a><ul>
<li>1.<a href="https://www.cnblogs.com/jara/p/7152843.html">使用Moq框架Mock对象</a></li>
</ul>
</li>
<li>5.<a href="https://winstongubantes.blogspot.com/2018/09/beginners-guide-to-unit-testing-in.html">Beginner’s Guide To Unit Testing In Prism (Xamarin.Forms)</a></li>
<li>6.<a href="https://www.cnblogs.com/TankXiao/archive/2012/03/06/2366073.html">单元测试之Stub和Mock</a></li>
</ul>
<hr>
<h2 id="2-Mac单元测试相关"><a href="#2-Mac单元测试相关" class="headerlink" title="2.Mac单元测试相关"></a>2.Mac单元测试相关<a name="unit_test"/></h2><ul>
<li><p>1.新建 <code>Test Project</code>(<code>.NET Core/Tests/xUnit Test Project</code>).</p>
</li>
<li><p>2.在 <code>Test Project</code> 的 Dependencies 中引入需要 <code>Unit Test</code> 的项目.</p>
</li>
<li><p>3.调出相关的 <code>Unit Test</code> 的面板.<br>![](<a href="http://pic.pgyjz.cn/blog/Xamarin/screenshot">http://pic.pgyjz.cn/blog/Xamarin/screenshot</a> 2018-12-29 at 13.36.03.png)</p>
</li>
<li><p>4.开始单元测试<br><img src="http://pic.pgyjz.cn/blog/Xamarin/Snip20181229_2.png"></p>
</li>
<li><p>5.记得按了相关的 <code>等级按钮</code> 才会输出相应等级的 Log 信息.<br><img src="http://pic.pgyjz.cn/blog/Xamarin/Snip20190514_2.png"></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Xamarin</category>
      </categories>
      <tags>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin出错记录</title>
    <url>/2019/03/14/Xamarin%E5%87%BA%E9%94%99%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<blockquote>
<p>记录下 Xamarin 在 <code>Visual Studio for Mac</code> 环境下的错误及解决方法</p>
</blockquote>
<a id="more"></a>

<h2 id="1-错误及解决方法的记录"><a href="#1-错误及解决方法的记录" class="headerlink" title="1.错误及解决方法的记录"></a>1.错误及解决方法的记录</h2><hr>
<h2 id="1-错误及解决方法的记录-1"><a href="#1-错误及解决方法的记录-1" class="headerlink" title="1.错误及解决方法的记录"></a>1.错误及解决方法的记录</h2><blockquote>
<p>如果遇到奇怪的错误(第一次编译运行可以，没任何改动，第二次编译运行却不能运行)，可以先 卸载 了 APP,清理 VS 的缓存,然后再重新运行.<br>最好用 iOS 去运行测试.</p>
</blockquote>
<h3 id="1-Xamarin-项目编译时-出现-The-quot-Microsoft-Build-Tasks-Git-LocateRepository-quot-task-failed-unexpectedly-System-BadImageFormatException-Method-has-no-body-Error"><a href="#1-Xamarin-项目编译时-出现-The-quot-Microsoft-Build-Tasks-Git-LocateRepository-quot-task-failed-unexpectedly-System-BadImageFormatException-Method-has-no-body-Error" class="headerlink" title="1.Xamarin 项目编译时,出现 The &quot;Microsoft.Build.Tasks.Git.LocateRepository&quot; task failed unexpectedly.System.BadImageFormatException: Method has no body Error."></a>1.Xamarin 项目编译时,出现 <code>The &quot;Microsoft.Build.Tasks.Git.LocateRepository&quot; task failed unexpectedly.System.BadImageFormatException: Method has no body</code> Error.</h3><ul>
<li>1.查到信息可能是 <code>dotnet 的版本问题</code>: <a href="https://github.com/dotnet/sourcelink/issues/107">The “Microsoft.Build.Tasks.Git.LocateRepository” task failed unexpectedly.</a><ul>
<li>1.查看 Mac 中的 dotnet 的版本: `glb_gz$ dotnet –list-sdks</li>
</ul>
</li>
</ul>
<p>2.1.302 [/usr/local/share/dotnet/sdk]<code>    * 2.下载</code>dotnet<code>安装包:          * 1.[https://docs.microsoft.com/en-us/dotnet/core/tools/global-json](https://docs.microsoft.com/en-us/dotnet/core/tools/global-json)         * 2.[https://dotnet.microsoft.com/download/thank-you/dotnet-sdk-2.2.101-macos-x64-installer](https://dotnet.microsoft.com/download/thank-you/dotnet-sdk-2.2.101-macos-x64-installer)         * 3.然后重新打开项目并编译，但结果还是一样.     * 3.下载</code>Microsoft.Build.Tasks<code>包:         * 0.升级 VS  到 7.7,并且升级其他的一些工具,如: Mono,JDK,Xamarin.Android 等等.         * 1.安装 PM 命令行工具到 VS 中: [https://github.com/mrward/monodevelop-nuget-extensions](https://github.com/mrward/monodevelop-nuget-extensions#installation)         * 2.安装</code>Microsoft.Build.Tasks<code>到项目中: [https://www.nuget.org/packages/Microsoft.Build.Tasks.Git/](https://www.nuget.org/packages/Microsoft.Build.Tasks.Git/)         * 3.在</code>View/Pads/Package Console Extension<code>中打开</code>Package Console Extension<code>,然后安装 </code>Install-Package Microsoft.Build.Tasks.Git -Version 1.0.0-beta2-18618-05<code>,但是没有成功，提示:</code>Command Install-Package not found<code>.           * 4.在 项目路径的终端中运行: </code>dotnet add package Microsoft.Build.Tasks.Git –version 1.0.0-beta2-18618-05` ,安装成功，但是还是报同样的错误.<br>    * 4.正式放弃治疗!!!</p>
<h3 id="2-获取项目文件数据的时候，出现-NULL-exception-error"><a href="#2-获取项目文件数据的时候，出现-NULL-exception-error" class="headerlink" title="2.获取项目文件数据的时候，出现 NULL exception error."></a>2.获取项目文件数据的时候，出现 <code>NULL exception error.</code></h3><ul>
<li>1.用 <code>Assembly.GetExecutingAssembly().GetManifestResourceStream()</code>方法获取文件的数据时，一直返回 null.</li>
<li>2.解决方法:<ul>
<li>1.右击需要获取数据的文件(图片的获取也一样的道理)，然后选择 <code>Build Action</code> -&gt; <code>EmbeddedResource</code> ,就可以了.</li>
</ul>
</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Xamarin/Snip20190118_1.png"></p>
<h3 id="3-遇到错误-Error-APT0000-Error-retrieving-parent-for-item-No-resource-found-that-matches-the-given-name-39-Theme-AppCompat-Light-DarkActionBar-39-APT0000-BLE-APP2-Android"><a href="#3-遇到错误-Error-APT0000-Error-retrieving-parent-for-item-No-resource-found-that-matches-the-given-name-39-Theme-AppCompat-Light-DarkActionBar-39-APT0000-BLE-APP2-Android" class="headerlink" title="3.遇到错误  Error APT0000: Error retrieving parent for item: No resource found that matches the given name &#39;Theme.AppCompat.Light.DarkActionBar&#39;. (APT0000) (BLE_APP2.Android)"></a>3.遇到错误 <code> Error APT0000: Error retrieving parent for item: No resource found that matches the given name &#39;Theme.AppCompat.Light.DarkActionBar&#39;. (APT0000) (BLE_APP2.Android)</code></h3><ul>
<li>1.查到是 Packages 中 <code>Android.Support.v7.AppCompat</code> 版本太低，所导致,遂想更新到最新的版本.</li>
<li>2.无法更新，报错误 <code> Package Xamarin.Android.Support.Design 27.0.2.1 is not compatible with monoandroid71 (MonoAndroid,Version=v7.1). Package Xamarin.Android.Support.Design 27.0.2.1 supports: monoandroid81 (MonoAndroid,Version=v8.1)</code>.</li>
<li>3.故想更新 <code>Mono.Android</code> 的版本，所以在 <code>右键 Project -&gt; options -&gt; Build -&gt; General -&gt; Compile using Android Version</code> 选择目标的版本即可.</li>
<li>4.然后更新 <code>Android.Support.v7.AppCompat</code> ，就可以正常地编译运行了.</li>
</ul>
<h3 id="4-遇到错误-MTOUCH-Error-MT2101-Can-39-t-resolve-the-reference-referenced-from-the-method-MT2101-BLE-List-Connect-iOS"><a href="#4-遇到错误-MTOUCH-Error-MT2101-Can-39-t-resolve-the-reference-referenced-from-the-method-MT2101-BLE-List-Connect-iOS" class="headerlink" title="4.遇到错误 MTOUCH: Error MT2101: Can&#39;t resolve the reference ... , referenced from the method ... (MT2101) (BLE_List_Connect.iOS)"></a>4.遇到错误 <code>MTOUCH: Error MT2101: Can&#39;t resolve the reference ... , referenced from the method ... (MT2101) (BLE_List_Connect.iOS)</code></h3><ul>
<li>1.把项目回退，然后再一个文件一个文件地添加,测试是否重现错误，.</li>
</ul>
<h3 id="5-遇到错误-在-MainPageViewModel-中取得-App-xaml-cs-中静态变量的值为空"><a href="#5-遇到错误-在-MainPageViewModel-中取得-App-xaml-cs-中静态变量的值为空" class="headerlink" title="5.遇到错误 在 MainPageViewModel 中取得 App.xaml.cs 中静态变量的值为空."></a>5.遇到错误 在 <code>MainPageViewModel</code> 中取得 <code>App.xaml.cs</code> 中静态变量的值为空.</h3><ul>
<li><p>1.项目用 <code>Prism</code> 做基础的框架,然后从 <code>App.xaml.cs</code> 跳转到 <code>MainPageViewModel.cs</code> , <code>App.xaml.cs</code> 中有个 Static 变量，在 <code>MainPageViewModel.cs </code> 的构造方法中获取这个变量的值，会一直显示为 <code>null</code>.</p>
<ul>
<li><p>1.在除了 构造方法 的其他地方获取这个 Static 变量的值就没问题.</p>
</li>
<li><p>2.尝试用 值传递的方式，直接传送数据到第二个页面(也是不行!!!).</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">protected override async void OnInitialized()</span><br><span class="line">      &#123;</span><br><span class="line">          InitializeComponent();</span><br><span class="line"></span><br><span class="line">          var navigationParams &#x3D; new NavigationParameters();</span><br><span class="line">          navigationParams.Add(&quot;adapter&quot;,Adapter);</span><br><span class="line">          await NavigationService.NavigateAsync(&quot;NavigationPage&#x2F;MainPage&quot;, navigationParams);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>3.在 <code>MainPageViewModel.cs / OnNavigatedTo</code> 中获取这个 Static 的值，也是不行!!!</p>
</li>
</ul>
</li>
</ul>
<h3 id="6-ble-net-包在-GG-项目中一直连接不成功"><a href="#6-ble-net-包在-GG-项目中一直连接不成功" class="headerlink" title="6.ble.net 包在 GG 项目中一直连接不成功."></a>6.<code>ble.net</code> 包在 GG 项目中一直连接不成功.</h3><ul>
<li>0.iOS 手机.</li>
<li>1.就算时回滚了项目也不行(以前是可以的).</li>
<li>2.但 <code>Ble_list_conn</code> 项目用 <code>ble.net</code> 包，同样的手机就很正常.</li>
<li>3.现在查到可能是 <code>Scan</code> 与 <code>Connect</code> 有冲突，所以现在尝试在 <code>connect</code> 的时候,把 <code>Scan</code> 停止掉.</li>
<li>4.证实是 <code>Scan</code> 与 <code>Connect</code> 有冲突.</li>
</ul>
<h3 id="7-出现-Do-you-have-a-shared-runtime-build-of-your-app-with-AndroidManifest-xml-错误"><a href="#7-出现-Do-you-have-a-shared-runtime-build-of-your-app-with-AndroidManifest-xml-错误" class="headerlink" title="7.出现 Do you have a shared runtime build of your app with AndroidManifest.xml 错误"></a>7.出现 <code>Do you have a shared runtime build of your app with AndroidManifest.xml</code> 错误</h3><ul>
<li>1.<a href="https://forums.xamarin.com/discussion/128386/i-need-to-manually-uninstall-the-app-every-time-i-want-to-deploy-on-my-device">参考</a></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Forwarding debugger port 8847</span><br><span class="line">Detecting existing process</span><br><span class="line">&gt; am start -n &quot;com.greenworkstools.mowergg&#x2F;md5e58438a37f85ea0542e2cf77e1751acd.MainActivity&quot;</span><br><span class="line">&gt; Starting: Intent &#123; cmp&#x3D;com.greenworkstools.mowergg&#x2F;md5e58438a37f85ea0542e2cf77e1751acd.MainActivity &#125;</span><br><span class="line">...</span><br><span class="line">com.greenworkstools.mowergg&#x2F;files&#x2F;.__override__, app_libdir: &#x2F;data&#x2F;app&#x2F;com.greenworkstools.mowergg-6BHblXJgnD5enhv8O4gR5A&#x3D;&#x3D;&#x2F;lib&#x2F;arm64 nor in previously printed locations.</span><br><span class="line">[monodroid] Do you have a shared runtime build of your app with AndroidManifest.xml android:minSdkVersion &lt; 10 while running on a 64-bit Android 5.0 target? This combination is not supported.</span><br><span class="line">[monodroid] Please either set android:minSdkVersion &gt;&#x3D; 10 or use a build without the shared runtime (like default Release configuration).</span><br></pre></td></tr></table></figure>

<ul>
<li>2.解决方法: <ul>
<li>1.把 <code>Options -&gt; Android Build -&gt; General -&gt; UseShared Mono Runtime </code> 的勾去掉.<br><img src="http://pic.pgyjz.cn/blog/Xamarin/Snip20190328_1.png"></li>
</ul>
</li>
</ul>
<h3 id="8-出现-Version-conflict-detected-for-Xamarin-Android-Support-Compat-错误"><a href="#8-出现-Version-conflict-detected-for-Xamarin-Android-Support-Compat-错误" class="headerlink" title="8.出现 Version conflict detected for Xamarin.Android.Support.Compat 错误"></a>8.出现 <code>Version conflict detected for Xamarin.Android.Support.Compat</code> 错误</h3><ul>
<li>1.相应安装 <code>ble.net.android</code> 包，但提示 <code>Version conflict detected for Xamarin.Android.Support.Compat. Install/reference Xamarin.Android.Support.Compat 28.0.0.1 directly to project MowerGG.Android to resolve this issue.</code> 错误.</li>
<li>2.参考 <a href="https://github.com/jguertl/SharePlugin/issues/91">https://github.com/jguertl/SharePlugin/issues/91</a> 说是可以手动解决，以下是我手动解决这个问题的方法:<ul>
<li>1.用文本编译器打开 <code>.Android.csproj</code> 文件.<br><img src="http://pic.pgyjz.cn/blog/Xamarin/Snip20190402_2.png"></li>
<li>2.找到所需要手动更改版本的包名，然后手动更改版本.<br><img src="http://pic.pgyjz.cn/blog/Xamarin/Snip20190402_1.png"></li>
</ul>
</li>
</ul>
<h3 id="9-出现-not-enough-space"><a href="#9-出现-not-enough-space" class="headerlink" title="9.出现 not enough space"></a>9.出现 <code>not enough space</code></h3><ul>
<li><p>1.详细的错误 log 为 <code>Xamarin Mono.AndroidTools.InstallFailedException: Unexpected install output: Error: android.os.ParcelableException: java.io.IOException: Requested internal only, but not enough space</code>。</p>
<ul>
<li>1.在 <code>Android Studio</code> 上安装其他的 APP 也安装不成功，提示 <code>Android Studio Application Failed uninstall the existing application</code> 信息.</li>
</ul>
</li>
<li><p>2.解决方法:</p>
<ul>
<li>1.证实不关手机存储大小的问题，我手机有 500 M 的可存储空间，但还是安装不上.</li>
<li>2.把手机中的旧的 APP(相同一个 APP) 卸载掉.</li>
<li>3.把手机中有关 <code>Xamarin</code> 的 Library 卸载掉, 如在 <code>华为 Honor V8(KNT-UL10),EMUI 8.0.0,Android 8.0.0</code> 中的路径为: <code>设置 -&gt; 应用和通知 -&gt; 应用管理 -&gt; Xamarin.Android API-XX Support</code> 卸载掉.<br><img src="http://pic.pgyjz.cn/blog/Xamarin/1301554961700_.pic.jpg"></li>
<li>4.这样 <code>Android Studio </code> 的 APP 可以运行，但是 <code>Visual Studio</code> APP 还是不能运行安装.</li>
<li>5.参考下面的  <code>10.出现 TypeLoadException</code> ,然后手机让 内部的存储 至少有 1G 的可用空间，<code>Visual Studio</code> 才安装上了 APP.</li>
</ul>
</li>
</ul>
<h3 id="10-出现-TypeLoadException"><a href="#10-出现-TypeLoadException" class="headerlink" title="10.出现 TypeLoadException"></a>10.出现 <code>TypeLoadException</code></h3><ul>
<li>1.一打开 APP 就 Crash,完整的 Log 为: <code>this.InitializeComponent() System.TypeLoadException</code>:</li>
</ul>
<p>![](<a href="http://pic.pgyjz.cn/blog/Xamarin/screenshot">http://pic.pgyjz.cn/blog/Xamarin/screenshot</a> 2019-04-03 at 15.18.39.png)</p>
<ul>
<li>2.参考: <a href="https://forums.xamarin.com/discussion/127860/unhandled-exception-system-typeloadexception-could-not-resolve-type-with-token-010000c1">Unhandled Exception: System.TypeLoadException: Could not resolve type with token 010000c1</a>的做法，解决了问题</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. Clean all </span><br><span class="line">2. Close IDE</span><br><span class="line">3. uninstall the APP from your phone.</span><br><span class="line">4. Remove all bin and obj folders from all projects (shared and device specific)</span><br><span class="line">5. Restart IDE, build and run</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>Xamarin</category>
      </categories>
      <tags>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin开发相关</title>
    <url>/2018/12/19/Xamarin%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<blockquote>
<p>记录 Xamarin 开发相关的知识和过程记录</p>
</blockquote>
<a id="more"></a>

<h2 id="1-获取权限相关"><a href="#1-获取权限相关" class="headerlink" title="1.获取权限相关"></a><a href="#permission_related">1.获取权限相关</a></h2><h2 id="2-错误的记录"><a href="#2-错误的记录" class="headerlink" title="2.错误的记录"></a><a href="#Error_ifo">2.错误的记录</a></h2><h2 id="3-Xamarin-的生命周期"><a href="#3-Xamarin-的生命周期" class="headerlink" title="3.Xamarin 的生命周期"></a><a href="#xamarin_lifecycle">3.Xamarin 的生命周期</a></h2><h2 id="4-Xamarin-iOS-开发相关"><a href="#4-Xamarin-iOS-开发相关" class="headerlink" title="4.Xamarin iOS 开发相关"></a><a href="#xamarin_iOS">4.Xamarin iOS 开发相关</a></h2><h2 id="5-Xamarin-所用到的第三方包"><a href="#5-Xamarin-所用到的第三方包" class="headerlink" title="5.Xamarin 所用到的第三方包"></a><a href="#third_library">5.Xamarin 所用到的第三方包</a></h2><h2 id="6-Xamarin-相关功能点的开发"><a href="#6-Xamarin-相关功能点的开发" class="headerlink" title="6.Xamarin 相关功能点的开发"></a><a href="#function_develop">6.Xamarin 相关功能点的开发</a></h2><ul>
<li>1.多语言及本地化的支持</li>
<li>2.DependencyService (如果 Xamarin.Forms 不支持一些功能，就需要调用原生的实现方法去获取一些数据)</li>
<li>3.加载项目中文件的内容</li>
</ul>
<h2 id="7-VS-的使用相关"><a href="#7-VS-的使用相关" class="headerlink" title="7.VS 的使用相关"></a><a href="#usage_of_vs">7.VS 的使用相关</a></h2><h2 id="8-VS-环境配置项的添加"><a href="#8-VS-环境配置项的添加" class="headerlink" title="8.VS 环境配置项的添加"></a><a href="#environment_config">8.VS 环境配置项的添加</a></h2><hr>
<hr>
<hr>
<h2 id="1-获取权限相关-1"><a href="#1-获取权限相关-1" class="headerlink" title="1.获取权限相关"></a>1.获取权限相关<a name="permission_related"/></h2><ul>
<li>1.优秀的第三方框架:<a href="https://github.com/jamesmontemagno/PermissionsPlugin">jamesmontemagno/PermissionsPlugin</a></li>
</ul>
<hr>
<h2 id="2-错误的记录-1"><a href="#2-错误的记录-1" class="headerlink" title="2.错误的记录"></a>2.错误的记录<a name="Error_ifo"/></h2><p>请到文章 <a href="http://blog.pgyjz.cn/2019/03/14/Xamarin%E5%87%BA%E9%94%99%E8%AE%B0%E5%BD%95/#more">Xamarin出错记录</a> 处查看.</p>
<hr>
<h2 id="3-Xamarin-的生命周期-1"><a href="#3-Xamarin-的生命周期-1" class="headerlink" title="3.Xamarin 的生命周期"></a>3.Xamarin 的生命周期<a name="xamarin_lifecycle"/></h2><h3 id="1-在-Xamarin-Forms-中，APP-运行的生命周期是这样的"><a href="#1-在-Xamarin-Forms-中，APP-运行的生命周期是这样的" class="headerlink" title="1.在 Xamarin.Forms 中，APP 运行的生命周期是这样的:"></a>1.在 <code>Xamarin.Forms</code> 中，APP 运行的生命周期是这样的:</h3><h4 id="1-Android"><a href="#1-Android" class="headerlink" title="1.Android"></a>1.Android</h4><ul>
<li>1.Android:在Android 代码的 <code>Project </code> 中,如果有类继承了 <code>Android.App.Application</code> ,就会从该类的 <code>OnCreate</code> 开始进入 APP:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">    [Application(Debuggable &#x3D; IS_DEBUG, AllowBackup &#x3D; true, AllowClearUserData &#x3D; true)]</span><br><span class="line">    public class MyApplication : Application &#123;</span><br><span class="line"></span><br><span class="line">        public const Boolean IS_DEBUG &#x3D;</span><br><span class="line">#if DEBUG</span><br><span class="line">         true;</span><br><span class="line">#else</span><br><span class="line">         false;</span><br><span class="line">#endif</span><br><span class="line"></span><br><span class="line">        protected MyApplication(IntPtr javaReference, JniHandleOwnership transfer)</span><br><span class="line">       : base(javaReference, transfer)</span><br><span class="line">        &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public override void OnCreate()</span><br><span class="line">        &#123;</span><br><span class="line">            base.OnCreate();</span><br><span class="line"></span><br><span class="line">            System.Diagnostics.Debug.WriteLine(&quot;-------&gt;Android Application OnCreate&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.然后跳转到继承 <code>global::Xamarin.Forms.Platform.Android.FormsAppCompatActivity</code> 的类中运行:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Activity(Label &#x3D; &quot;BLE_APP&quot;, Icon &#x3D; &quot;@mipmap&#x2F;launcher_icon&quot;, Theme &#x3D; &quot;@style&#x2F;MainTheme&quot;, MainLauncher &#x3D; true, ConfigurationChanges &#x3D; ConfigChanges.ScreenSize | ConfigChanges.Orientation)]</span><br><span class="line">public class MainActivity : global::Xamarin.Forms.Platform.Android.FormsAppCompatActivity</span><br><span class="line">&#123;</span><br><span class="line">    protected override void OnCreate(Bundle savedInstanceState)</span><br><span class="line">    &#123;</span><br><span class="line">        System.Diagnostics.Debug.WriteLine(&quot;-------&gt;Android MainActivity OnCreate&quot;);</span><br><span class="line"></span><br><span class="line">        TabLayoutResource &#x3D; Resource.Layout.Tabbar;</span><br><span class="line">        ToolbarResource &#x3D; Resource.Layout.Toolbar;</span><br><span class="line"></span><br><span class="line">        base.OnCreate(savedInstanceState);</span><br><span class="line">        global::Xamarin.Forms.Forms.Init(this, savedInstanceState);</span><br><span class="line">        &#x2F;&#x2F;这里就会跳到 Xamarin.Forms 中的类</span><br><span class="line">        LoadApplication(new App());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>3.然后就按照上一步的 <code>OnCreate </code> 去跳到 <code>Xamarin.Forms</code> 中指定共有的类去 </li>
</ul>
<h4 id="2-iOS"><a href="#2-iOS" class="headerlink" title="2.iOS"></a>2.iOS</h4><ul>
<li>1.在一个继承自 <code>global::Xamarin.Forms.Platform.iOS.FormsApplicationDelegate</code> 的类中开始</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[Register(&quot;AppDelegate&quot;)]</span><br><span class="line">public partial class AppDelegate : global::Xamarin.Forms.Platform.iOS.FormsApplicationDelegate</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;</span><br><span class="line">    &#x2F;&#x2F; This method is invoked when the application has loaded and is ready to run. In this </span><br><span class="line">    &#x2F;&#x2F; method you should instantiate the window, load the UI into it and then make the window</span><br><span class="line">    &#x2F;&#x2F; visible.</span><br><span class="line">    &#x2F;&#x2F;</span><br><span class="line">    &#x2F;&#x2F; You have 17 seconds to return from this method, or iOS will terminate your application.</span><br><span class="line">    &#x2F;&#x2F;</span><br><span class="line">    public override bool FinishedLaunching(UIApplication app, NSDictionary options)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        System.Diagnostics.Debug.WriteLine(&quot;-----&gt;iOS AppDelegate App()&quot;);</span><br><span class="line"></span><br><span class="line">        global::Xamarin.Forms.Forms.Init();</span><br><span class="line">        &#x2F;&#x2F;这里就会跳到 Xamarin.Forms 中的类</span><br><span class="line">        LoadApplication(new App());</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        return base.FinishedLaunching(app, options);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.然后就按照上一步的 <code>FinishedLaunching </code> 去跳到 <code>Xamarin.Forms</code> 中指定共有的类去 </li>
</ul>
<hr>
<h2 id="4-Xamarin-iOS-开发相关-1"><a href="#4-Xamarin-iOS-开发相关-1" class="headerlink" title="4.Xamarin iOS 开发相关"></a>4.Xamarin iOS 开发相关<a name="xamarin_iOS"/></h2><h4 id="1-问题点"><a href="#1-问题点" class="headerlink" title="1.问题点"></a>1.问题点</h4><ul>
<li>1.在调试 iOS 设备时，经常一 install 后 <code>Visual Studio </code> 就与 <code>iPhone/iPad</code> 断开连接，看不到相关的 log 信息.<ul>
<li>1.找不到解决的方法，暂时只能通过 <code>Run/Start Debugging</code> 去查看 log.</li>
</ul>
</li>
</ul>
<h4 id="2-更新-Prism-中的-Item-View"><a href="#2-更新-Prism-中的-Item-View" class="headerlink" title="2.更新 Prism 中的 Item View"></a>2.更新 Prism 中的 Item View</h4><ul>
<li>1.ListView 中 Item 的 Model 继承 <code>INotifyPropertyChanged</code>,并实现其 <code>event</code>.</li>
<li>2.把 <code>ListView</code> 中的 <code>ItemSource</code> Item 更新。</li>
<li>3.用 <code>event</code> 通知更新 View,如更新 <code>Binding</code> <code>ConnStateStr </code> 参数的 View 的值: <code> PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(nameof(ConnStateStr)));</code></li>
</ul>
<h4 id="3-Mac-版的-Visual-Studio-打开-resx-文件方式"><a href="#3-Mac-版的-Visual-Studio-打开-resx-文件方式" class="headerlink" title="3.Mac 版的 Visual Studio 打开 resx 文件方式"></a>3.Mac 版的 Visual Studio 打开 resx 文件方式</h4><ul>
<li>1.在做多语言时， Mac 版的 Visual Studio 没有专门的编辑器打开并快速地编辑 resx 文件(Windows 版有).</li>
<li>2.每次改动都需要手工复制粘贴 <code>&lt;data&gt;&lt;/data&gt;</code> 中的信息.</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Xamarin/Snip20190408_2.png"></p>
<ul>
<li>3.在网上看到有方法可以添加个编辑器，但是没有验证:<ul>
<li>1.<a href="https://medium.com/@jdassonval/how-to-edit-a-resx-file-on-mac-os-c4dac927145c">How to edit a .resx file on Mac OS ?</a></li>
<li>2.<a href="https://github.com/jzeferino/Visual-Studio-for-Mac-ResxEditor">GitHub:Visual-Studio-for-Mac-ResxEditor</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="5-Xamarin-所用到的第三方包-1"><a href="#5-Xamarin-所用到的第三方包-1" class="headerlink" title="5.Xamarin 所用到的第三方包"></a>5.Xamarin 所用到的第三方包<a name="third_library"/></h2><ul>
<li><a href="https://github.com/jamesmontemagno/PermissionsPlugin">1.权限动态获取相关</a></li>
<li>2.<a href="https://github.com/Redth/ZXing.Net.Mobile">二维码 ZXing.Net.Mobile</a></li>
<li>3.<a href="https://www.newtonsoft.com/json">Json 解析 Newtonsoft.Json</a><ul>
<li>1.Json 与对象间的相互转换.</li>
</ul>
</li>
<li>4.<a href="https://github.com/aritchie/userdialogs">弹出对话框 Acr.UserDialogs</a></li>
<li>6.<a href="https://github.com/jamesmontemagno/ImageCirclePlugin">圆角图片 Xam.Plugins.Forms.ImageCircle</a> </li>
<li>7.<a href="https://github.com/PrismLibrary/Prism">功能强大的第三方框架 Prism</a><ul>
<li>1.<a href="https://github.com/dansiegel/Prism.Plugin.Popups">Prism.Plugin.Popups</a></li>
<li>2.Documents<ul>
<li>1.<a href="https://github.com/PrismLibrary/Prism-Documentation/blob/master/docs/commanding.md">Prism-Documentation1</a></li>
<li>2.<a href="http://prismlibrary.github.io/docs/index.html">Prism_Documentation2</a></li>
</ul>
</li>
<li>3.功能点<ul>
<li>1.快速导航</li>
<li>2.数据快速绑定</li>
<li>3.信息传递</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="6-Xamarin-相关功能点的开发-1"><a href="#6-Xamarin-相关功能点的开发-1" class="headerlink" title="6.Xamarin 相关功能点的开发"></a>6.Xamarin 相关功能点的开发<a name="function_develop"/></h2><h4 id="1-多语言及本地化的支持"><a href="#1-多语言及本地化的支持" class="headerlink" title="1.多语言及本地化的支持"></a>1.多语言及本地化的支持</h4><ul>
<li>1.参考:<ul>
<li>1.<a href="https://docs.microsoft.com/zh-cn/xamarin/xamarin-forms/app-fundamentals/localization/">Xamarin.Forms 本地化</a></li>
<li>2.<a href="https://www.mfractor.com/blogs/news/localising-your-xamarin-forms-apps">How To Localise Your Xamarin.Forms Apps</a></li>
</ul>
</li>
<li>2.步骤:<ul>
<li>1.先用 DepencyService 获取到手机的语言，然后设置 APP 的语言跟手机的一样.</li>
<li>2.图片的本地化<ul>
<li>2.1 在 Android 和 iOS 处放置好相关的本地化图片<br>![](<a href="http://pic.pgyjz.cn/blog/Xamarin/screenshot">http://pic.pgyjz.cn/blog/Xamarin/screenshot</a> 2019-02-21 at 11.20.45.png)<br>![](<a href="http://pic.pgyjz.cn/blog/Xamarin/screenshot">http://pic.pgyjz.cn/blog/Xamarin/screenshot</a> 2019-02-21 at 11.20.30.png)</li>
<li>2.2 在需要调用的地方:</li>
</ul>
</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">var flag &#x3D; new Image();</span><br><span class="line">            switch (Device.RuntimePlatform)</span><br><span class="line">            &#123;</span><br><span class="line">                case Device.iOS:</span><br><span class="line">                case Device.Android:</span><br><span class="line">                    flag.Source &#x3D; ImageSource.FromFile(&quot;flag.png&quot;);</span><br><span class="line">                    break;</span><br><span class="line">                case Device.UWP:</span><br><span class="line">                    flag.Source &#x3D; ImageSource.FromFile(&quot;Assets&#x2F;Images&#x2F;flag.png&quot;);</span><br><span class="line">                    break;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>3.文字的本地化<ul>
<li>1.在 Xamarin.Forms 中添加 resx 文件(先填写缩写的名字然后再改名即可).</li>
<li>2.添加本地化翻译(添加后记得 <code>clean project</code>)</li>
<li>3.通过 <code>AppResources.ResourceName</code> 使用资源.</li>
</ul>
</li>
</ul>
<h4 id="2-DependencyService-如果-Xamarin-Forms-不支持一些功能，就需要调用原生的实现方法去获取一些数据"><a href="#2-DependencyService-如果-Xamarin-Forms-不支持一些功能，就需要调用原生的实现方法去获取一些数据" class="headerlink" title="2.DependencyService (如果 Xamarin.Forms 不支持一些功能，就需要调用原生的实现方法去获取一些数据)"></a>2.DependencyService (如果 Xamarin.Forms 不支持一些功能，就需要调用原生的实现方法去获取一些数据)</h4><ul>
<li><p>1.参考:</p>
<ul>
<li>1.<a href="https://docs.microsoft.com/zh-cn/xamarin/xamarin-forms/app-fundamentals/dependency-service/">Xamarin.Forms DependencyService</a></li>
</ul>
</li>
<li><p>2.相关的实现(获取 APP 版本信息)</p>
</li>
</ul>
<script src="https://gist.github.com/ghzjtian/60fdf98f0d23d52eb3461d080c5f6f61.js"></script>

<h4 id="3-加载项目中文件的内容"><a href="#3-加载项目中文件的内容" class="headerlink" title="3.加载项目中文件的内容"></a>3.加载项目中文件的内容</h4><script src="https://gist.github.com/ghzjtian/ee42f6034222d41fd719003c325321da.js"></script>


<h2 id="7-VS-的使用相关-1"><a href="#7-VS-的使用相关-1" class="headerlink" title="7.VS 的使用相关"></a>7.VS 的使用相关<a name="usage_of_vs"/></h2><ul>
<li>1.在工程中添加一个新的 <code>Project</code> 时，添加的步骤为(<code>Solution</code>-&gt;<code>Add</code>-&gt;<code>Add New Project</code>-&gt;<code>Library</code> -&gt; <code>Class Library</code> 即可以看到新建的 Project ): </li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Xamarin/Snip20190313_1.png"><br><img src="http://pic.pgyjz.cn/blog/Xamarin/Snip20190313_2.png"><br><img src="http://pic.pgyjz.cn/blog/Xamarin/Snip20190313_3.png"></p>
<hr>
<h2 id="8-VS-环境配置项的添加-1"><a href="#8-VS-环境配置项的添加-1" class="headerlink" title="8.VS 环境配置项的添加"></a>8.VS 环境配置项的添加<a name="environment_config"/></h2><blockquote>
<p>配置项的添加有很多好处，首先就是 1.提高开发的效率 2.增加不同环境或切换不同的环境时，可以快速准确地修改到目的配置 <code>Define Symbols</code>.</p>
</blockquote>
<h3 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考:"></a>1.参考:</h3><ul>
<li>1.<a href="https://devblogs.microsoft.com/xamarin/demystifying-build-configurations/">Demystifying Build Configurations</a><ul>
<li>1.下面的步骤参考这边文章的.</li>
</ul>
</li>
</ul>
<h3 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤:"></a>2.步骤:</h3><ul>
<li>1.双击 <code>Solution Options</code>, 然后 <code>Build -&gt; Configurations</code>(not Run &gt; Configurations).</li>
<li>2.我们要新增一个 GF 的 Debug 配置 和一个 Release 配置，所以分别 Copy 里面已有的 <code>Debug</code> 和 <code>Release</code> ,并且命名为 <code>GF-Debug</code> 和 <code>GF-Release</code></li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Xamarin/DevelopRelated/Snip20190705_2.png"><br><img src="http://pic.pgyjz.cn/blog/Xamarin/DevelopRelated/Snip20190705_3.png"></p>
<ul>
<li><p>3.在 左上角选择 Android -&gt; GF-Debug ,然后 Build ,但是出现了 <code>Info.plist not found</code> 的情况(解决方法为下面的 4,5,6 ).<br><img src="http://pic.pgyjz.cn/blog/Xamarin/DevelopRelated/Snip20190705_5.png"></p>
</li>
<li><p>4.添加 <code>GF-Debug</code> 和 <code>GF-Release</code> 的 Platform ,步骤为在 solution 中.</p>
</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Xamarin/DevelopRelated/Snip20190705_6.png"><br><img src="http://pic.pgyjz.cn/blog/Xamarin/DevelopRelated/Snip20190705_7.png"><br><img src="http://pic.pgyjz.cn/blog/Xamarin/DevelopRelated/Snip20190705_8.png"></p>
<ul>
<li><p>5.同理在 <code>iOS Project</code> 中重复步骤 4,效果如下<br><img src="http://pic.pgyjz.cn/blog/Xamarin/DevelopRelated/Snip20190705_10.png"><br><img src="http://pic.pgyjz.cn/blog/Xamarin/DevelopRelated/Snip20190705_11.png"></p>
</li>
<li><p>6.回到 <code>Solution</code> 下的 <code>Build-&gt; Configurations -&gt; Configurationn Mappings</code>,然后选择 iOS 的项目， Configuration 和 Platform 选择我们刚刚创建的，操作如下:</p>
</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Xamarin/DevelopRelated/Snip20190705_12.png"></p>
<ul>
<li><p>7.再次编译 Android 的 GF-Debug，就可以通过了.</p>
</li>
<li><p>8.但是编译 iOS 的 GF-Release 还是会出现 <code>Info.plist not found</code> 的问题，所以解决如下:</p>
<ul>
<li>1.打开 <code>MowerGG.iOS.csproj</code> 文件</li>
<li>2.把所有 <code>Include=Info.plist condition ...</code> 改为 <code>&lt;None Include=&quot;Info.plist&quot; /&gt;</code></li>
</ul>
</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Xamarin/DevelopRelated/Snip20190705_14.png"></p>
<ul>
<li><p>9.如果编译 iOS 时只选择了 <code>GF-Release</code> 会出现 <code>warning MT1043</code> ,导致无法编译.</p>
<ul>
<li><p>1.解决方法为在左上角选择 <code>GF-Release|iPhone</code> 配置文件.</p>
<p><img src="http://pic.pgyjz.cn/blog/Xamarin/DevelopRelated/Snip20190705_16.png"></p>
</li>
<li><p>2.在操作了上一步后，编译可以通过了，但是发现 <code>GF-Release|iPhone</code> 不能部署到手机，错误如下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	warning MT1043: Failed to launch the application using the instruments service. Will try launching the app using gdb service.</span><br><span class="line">Launching &#39;com.greenguide.app&#39; on the device &#39;iPhoneGlb6&#39;</span><br><span class="line">Could not find the application &#39;com.greenguide.app&#39; on the device &#39;iPhoneGlb6&#39;.</span><br></pre></td></tr></table></figure>
</li>
<li><p>3.在已经可以正常运行的配置上 Copy 一个，然后再修改(如 Copy 一个 Release configuration . )    </p>
</li>
</ul>
</li>
</ul>
<h3 id="3-发现的问题点"><a href="#3-发现的问题点" class="headerlink" title="3.发现的问题点"></a>3.发现的问题点</h3><ul>
<li>1.如果 <code>iOS Project</code> 中没有相关的 Configuration , 就会显示 <code>Invalid configuration mapping</code>.</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Xamarin/DevelopRelated/Snip20190705_1.png"></p>
<ul>
<li>2.Android Debug 出现 <code>Error MSB6006: &quot;java&quot; exited with code 2. (MSB6006)</code> 错误.<ul>
<li>1.<a href="https://forums.xamarin.com/discussion/97803/getting-error-java-exe-exited-with-code-2">解决方法1</a>:在 <code>Build-&gt;Android Build-&gt;General</code> 中选择 <code>Enable Multi-Dex</code>.</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>Xamarin</category>
      </categories>
      <tags>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin 安装包的生成</title>
    <url>/2018/12/14/Xamarin%E7%94%9F%E6%88%90%E5%AE%89%E8%A3%85%E5%8C%85/</url>
    <content><![CDATA[<blockquote>
<p>记录 Android 与 iOS 的安装包的生成方式与打包发布.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-Android-打包压缩"><a href="#1-Android-打包压缩" class="headerlink" title="1.Android 打包压缩"></a><a href="#Android_compress">1.Android 打包压缩</a></h2><h2 id="2-iOS-TestFlight-相关"><a href="#2-iOS-TestFlight-相关" class="headerlink" title="2.iOS TestFlight 相关"></a><a href="#iOS_testflight">2.iOS TestFlight 相关</a></h2><hr>
<hr>
<hr>
<h2 id="1-Android-打包压缩-1"><a href="#1-Android-打包压缩-1" class="headerlink" title="1.Android 打包压缩"></a>1.Android 打包压缩<a name="Android_compress"/></h2><h4 id="1-步骤"><a href="#1-步骤" class="headerlink" title="1.步骤:"></a>1.步骤:</h4><ul>
<li>1.右击 <code>BLE_APP.Android</code> 中的 <code>Options</code>, <code>Android Build</code>-&gt; <code>Linker</code> -&gt; <code>Linker Behaviour</code><ul>
<li>1.选择 <code>Don&#39;t Link</code> 选项，然后打包<ul>
<li>1.发现打包出来的 apk 有 <code>67.51</code> MB 大小.</li>
<li>2.华为手机测试打开没问题</li>
</ul>
</li>
<li>2.选择 <code>Link all assemblies</code> 选项,然后打包<ul>
<li>1.发现打包出来的 apk 有 <code>14.3</code> MB 大小.</li>
<li>2.华为手机测试打开就 Crash .</li>
</ul>
</li>
<li>2.选择 <code>Link SDK assemblies only</code> 选项,然后打包<ul>
<li>1.发现打包出来的 apk 有 <code>14.3</code> MB 大小.</li>
<li>2.华为手机测试打开没问题.</li>
</ul>
</li>
</ul>
</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Xamarin/screenshot%202018-12-14%20at%2017.47.03.png"></p>
<hr>
<h2 id="2-iOS-TestFlight-相关-1"><a href="#2-iOS-TestFlight-相关-1" class="headerlink" title="2.iOS TestFlight 相关"></a>2.iOS TestFlight 相关<a name="iOS_testflight"/></h2><h4 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考:"></a>1.参考:</h4><ul>
<li>1.<a href="https://www.jianshu.com/p/a7669d4b2217">TestFlight 使用指南</a></li>
<li>2.<a href="https://www.jianshu.com/p/684e4b56b99a">iOS如何使用TestFlight进行App Beta版测试</a></li>
<li>3.<a href="https://docs.microsoft.com/en-us/xamarin/ios/deploy-test/testflight?tabs=macos">Using TestFlight to Distribute Xamarin.iOS Apps</a></li>
<li>4.[Publishing Xamarin.iOS apps to the App Store](Publishing Xamarin.iOS apps to the App Store)</li>
</ul>
<h4 id="2-具体步骤"><a href="#2-具体步骤" class="headerlink" title="2.具体步骤"></a>2.具体步骤</h4><ul>
<li>1.在 <code>Info.plist</code> 中填写好相应的图片信息.</li>
<li>2.选择 <code>Build/Archive for Publishing</code> ,准备开始打包.</li>
</ul>
<p>![](<a href="http://pic.pgyjz.cn/blog/Xamarin/screenshot">http://pic.pgyjz.cn/blog/Xamarin/screenshot</a> 2019-01-07 at 17.08.18.png)</p>
<ul>
<li>3.注意 <code>Info.plist/Version</code> 的值不要大于两个点,如 <code>1.1.01071653</code> 会出现如下的错误:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ERROR ITMS-90060: &quot;This bundle is invalid. The value for key CFBundleShortVersionString &#39;1.1.0.01071653&#39; in the Info.plist file must be a period-separated list of at most three non-negative integers.&quot;</span><br></pre></td></tr></table></figure>

<ul>
<li><p>4.打包完成后，通过 <code>Application Loader</code> 上传到 <code>App Store</code> 然后在对应的 app 中选择 <code>TestFlight</code>,然后添加测试人员即可.</p>
</li>
<li><p>5.内部测试相关:</p>
<ul>
<li>1.内部开发人员后台添加相关<br><img src="http://pic.pgyjz.cn/blog/Xamarin/Snip20190108_2.png"></li>
<li>6.内部测试人员收到的邮件信息及点击按钮后网页的显示.</li>
</ul>
</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/Xamarin/Snip20190108_3.png"></p>
<p><img src="http://pic.pgyjz.cn/blog/Xamarin/Snip20190108_1.png"></p>
]]></content>
      <categories>
        <category>Xamarin</category>
      </categories>
      <tags>
        <tag>Xamarin</tag>
      </tags>
  </entry>
  <entry>
    <title>Xamarin用法</title>
    <url>/2018/08/25/Xamarin%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<h1 id="Xamarin用法"><a href="#Xamarin用法" class="headerlink" title="Xamarin用法"></a>Xamarin用法</h1><blockquote>
<p>公司想要用 Xamarin 去做开发 APP ，缩短 APP 的开发周期，现在记录一下相关的学习过程.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-相关的参考链接"><a href="#1-相关的参考链接" class="headerlink" title="1.相关的参考链接"></a>1.相关的参考链接</h2><h2 id="2-对-Xamarin-相关的使用评论"><a href="#2-对-Xamarin-相关的使用评论" class="headerlink" title="2.对 Xamarin 相关的使用评论"></a>2.对 Xamarin 相关的使用评论</h2><h2 id="3-相关的使用记录"><a href="#3-相关的使用记录" class="headerlink" title="3.相关的使用记录"></a>3.相关的使用记录</h2><hr>
<hr>
<hr>
<h2 id="1-相关的参考链接-1"><a href="#1-相关的参考链接-1" class="headerlink" title="1.相关的参考链接"></a>1.相关的参考链接</h2><ul>
<li><a href="https://docs.microsoft.com/zh-cn/xamarin/cross-platform/get-started/requirements">1.系统要求</a></li>
<li><a href="https://github.com/xamarin">2.Xamarin GitHub source code</a></li>
<li><a href="https://www.jianshu.com/p/a471382d943e">3.Xamarin 第三方库/工具收集Github</a></li>
<li><a href="https://docs.microsoft.com/zh-cn/xamarin/xamarin-forms/app-fundamentals/app-lifecycle">4.Xamarin.Forms 应用生命周期</a></li>
<li><a href="https://www.jianshu.com/u/391c35f4a8af">5.MayueCif 简书</a></li>
<li><a href="http://www.xamarin.xyz/page/5/">6.MayueCif 博客</a></li>
</ul>
<hr>
<h2 id="2-对-Xamarin-相关的使用评论-1"><a href="#2-对-Xamarin-相关的使用评论-1" class="headerlink" title="2.对 Xamarin 相关的使用评论"></a>2.对 Xamarin 相关的使用评论</h2><ul>
<li><a href="https://forums.xamarin.com/discussion/89286/xamarin-sucks-lessons-learned-from-weeks-wasted">1.Xamarin SUCKS! Lessons learned from weeks wasted</a></li>
<li><a href="https://www.jianshu.com/p/69669a8f3594">2.Xamarin.iOS 初步体验</a></li>
</ul>
<hr>
<h2 id="3-相关的使用记录-1"><a href="#3-相关的使用记录-1" class="headerlink" title="3.相关的使用记录"></a>3.相关的使用记录</h2><ul>
<li>1.同一时间用 Vusial Studio 打开 两个 Project<ul>
<li>1.用终端打开 <code>open -n -a &quot;Visual Studio&quot;</code>.</li>
</ul>
</li>
</ul>
<hr>
<hr>
<hr>
]]></content>
      <categories>
        <category>MicroSoft</category>
      </categories>
      <tags>
        <tag>MicroSoft</tag>
      </tags>
  </entry>
  <entry>
    <title>Android bugly集成</title>
    <url>/2018/02/08/bugly%E9%9B%86%E6%88%90/</url>
    <content><![CDATA[<h3 id="bugly集成"><a href="#bugly集成" class="headerlink" title="bugly集成"></a>bugly集成</h3><blockquote>
<p>根据 <a href="https://bugly.qq.com/docs/user-guide/instruction-manual-android/?v=20180206175744">https://bugly.qq.com/docs/user-guide/instruction-manual-android/?v=20180206175744</a> 去集成.<br>步骤文字很多为复制，为方便自己而已.</p>
</blockquote>
<a id="more"></a>

<h5 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h5><ul>
<li><p>1.在Module的build.gradle文件中添加依赖和属性配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;Bugly Crash report</span><br><span class="line">   compile &#39;com.tencent.bugly:crashreport:2.6.6&#39;</span><br></pre></td></tr></table></figure>
</li>
<li><p>2.在AndroidManifest.xml中添加权限：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;uses-permission android:name&#x3D;&quot;android.permission.READ_PHONE_STATE&quot; &#x2F;&gt;</span><br><span class="line">&lt;uses-permission android:name&#x3D;&quot;android.permission.INTERNET&quot; &#x2F;&gt;</span><br><span class="line">&lt;uses-permission android:name&#x3D;&quot;android.permission.ACCESS_NETWORK_STATE&quot; &#x2F;&gt;</span><br><span class="line">&lt;uses-permission android:name&#x3D;&quot;android.permission.ACCESS_WIFI_STATE&quot; &#x2F;&gt;</span><br><span class="line">&lt;uses-permission android:name&#x3D;&quot;android.permission.READ_LOGS&quot; &#x2F;&gt;</span><br></pre></td></tr></table></figure></li>
<li><p>3.请避免混淆Bugly，在Proguard混淆文件中增加以下配置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-dontwarn com.tencent.bugly.**</span><br><span class="line">-keep public class com.tencent.bugly.**&#123;*;&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>4.获取APP ID并将以下代码复制到项目Application类onCreate()中，Bugly会为自动检测环境并完成配置：</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">CrashReport.initCrashReport(getApplicationContext(), &quot;4ece1b11736&quot;, BuildConfig.DEBUG);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>5.制造一个 Crash</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"> &#x2F;&#x2F;测试 bugly crash</span><br><span class="line">CrashReport.testJavaCrash();</span><br></pre></td></tr></table></figure>

<ul>
<li>Crash 后台收到效果截图:<br><img src="/assets/imgs/Android/ScreenShot2018-02-08_14.55.11.png"></li>
</ul>
]]></content>
      <categories>
        <category>Android</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>debian系统</title>
    <url>/2018/09/05/debian%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<blockquote>
<p>介绍与 debian 系统相关的命令</p>
</blockquote>
<a id="more"></a>

<h2 id="1-系统升级"><a href="#1-系统升级" class="headerlink" title="1.系统升级"></a><a href="#system_update">1.系统升级</a></h2><h2 id="2-相关的操作命令"><a href="#2-相关的操作命令" class="headerlink" title="2.相关的操作命令"></a><a href="#some_operation">2.相关的操作命令</a></h2><h2 id="3-设置系统时间"><a href="#3-设置系统时间" class="headerlink" title="3.设置系统时间"></a><a href="#set_time">3.设置系统时间</a></h2><h2 id="4-设置中文环境"><a href="#4-设置中文环境" class="headerlink" title="4.设置中文环境"></a><a href="#set_language">4.设置中文环境</a></h2><h2 id="5-设置-ssh-免密登录"><a href="#5-设置-ssh-免密登录" class="headerlink" title="5.设置 ssh 免密登录"></a><a href="#no_password_login">5.设置 ssh 免密登录</a></h2><hr>
<hr>
<hr>
<h2 id="1-系统升级-1"><a href="#1-系统升级-1" class="headerlink" title="1.系统升级"></a>1.系统升级<a name="system_update"/></h2><h5 id="1-相关的参考"><a href="#1-相关的参考" class="headerlink" title="1.相关的参考"></a>1.相关的参考</h5><blockquote>
<p>1.debian8(jessie) -&gt; debian9(stretch)</p>
</blockquote>
<ul>
<li>1.<a href="https://www.howtoforge.com/tutorial/how-to-upgrade-debian-8-jessie-to-9-stretch/">How to Upgrade Debian 8 (Jessie) to 9 (Stretch) safely</a></li>
</ul>
<hr>
<h2 id="2-相关的操作命令-1"><a href="#2-相关的操作命令-1" class="headerlink" title="2.相关的操作命令"></a>2.相关的操作命令<a name="some_operation"/></h2><ul>
<li>1.查看版本号:<br><code># cat /etc/os-release</code></li>
<li>2.查看端口的使用情况:<br><code># netstat -ntlp</code></li>
</ul>
<hr>
<h2 id="3-设置系统时间-1"><a href="#3-设置系统时间-1" class="headerlink" title="3.设置系统时间"></a>3.设置系统时间<a name="set_time"/></h2><blockquote>
<p><a href="https://wiki.debian.org/DateTime">1.Debian 官方方法:</a></p>
<p><a href="https://www.hugeserver.com/kb/config-time-date-debian-8-ntp/">2.How to config Time and Date on Debian 8 (NTP)</a></p>
<p>使用 NTP 服务器去自动纠正.</p>
</blockquote>
<h5 id="1-设置自动纠正时间"><a href="#1-设置自动纠正时间" class="headerlink" title="1.设置自动纠正时间"></a>1.设置自动纠正时间</h5><ul>
<li>1.更新源.<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># apt-get update</span><br></pre></td></tr></table></figure></li>
<li>2.安装 ntp .<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># apt-get install ntp</span><br></pre></td></tr></table></figure></li>
<li>3.备份 localtime .<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># mv &#x2F;etc&#x2F;localtime &#x2F;etc&#x2F;localtime.back</span><br></pre></td></tr></table></figure></li>
<li>4.建立链接.<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># ln -s &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;PRC &#x2F;etc&#x2F;localtime</span><br></pre></td></tr></table></figure></li>
<li>5.重启 ntp.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#service ntp restart</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h5 id="2-查看当前的时间"><a href="#2-查看当前的时间" class="headerlink" title="2.查看当前的时间"></a>2.查看当前的时间</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@Tim_s_Server2:&#x2F;etc# date</span><br><span class="line">Wed Nov 15 13:52:41 CST 2017</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="4-设置中文环境-1"><a href="#4-设置中文环境-1" class="headerlink" title="4.设置中文环境"></a>4.设置中文环境<a name="set_language"/></h2><blockquote>
<p>背景:在安装debian 时选择了中文的安装环境，然后在安装完成后发现有一些文字会显示菱形.<br><img src="http://upload-images.jianshu.io/upload_images/2079545-83a305a0ea246acb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ScreenShot2017-10-18_09.42.32.png"></p>
</blockquote>
<ul>
<li>在网络上找到解决的方法:<ul>
<li>1.<a href="http://www.cnblogs.com/pengdonglin137/p/3280663.html">debian添加中文支持</a></li>
<li>2.<a href="https://www.cyberciti.biz/faq/perl-warning-setting-locale-failed-in-debian-ubuntu/">Perl: warning: Setting locale failed in Debian and Ubuntu</a></li>
<li>3.<a href="https://my.oschina.net/mickelfeng/blog/95871">Linux之Debian夸平台时文件名乱码</a></li>
<li>4.<a href="https://www.macapp.so/tips/Transmit%E4%B8%8D%E8%83%BD%E6%98%BE%E7%A4%BA%E4%B8%AD%E6%96%87%20%E4%B8%AD%E6%96%87%E6%98%BE%E7%A4%BA%E6%88%90%E4%BA%86%E4%B9%B1%E7%A0%81%20%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/">Mac 上 FTP 工具 Transmit 不能显示中文 中文显示成了乱码 解决方法</a><ul>
<li>解决方法:<code>将Transmit菜单VIEW中的text encoding里设置为UTF-8就可以显示中文文件名了。</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h3 id="1-步骤"><a href="#1-步骤" class="headerlink" title="1.步骤:"></a>1.步骤:</h3><ul>
<li>1.在 sudo 下运行 dpkg-reconfigure locales，选择上以下选项：</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">en_US ISO-8859-1</span><br><span class="line">zh_CN GB2312</span><br><span class="line">zh_CN.GBK GBK</span><br><span class="line">zh_CN.UTF-8 UTF-8</span><br><span class="line">zh_TW BIG5</span><br><span class="line">zh_TW.UTF-8 UTF-8</span><br></pre></td></tr></table></figure>

<ul>
<li>2.然后安装字体(前面两个是简体的，后面两个是繁体的)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># apt-get install fonts-arphic-gbsn00lp</span><br><span class="line"># apt-get install fonts-arphic-gkai00mp</span><br><span class="line"># apt-get install fonts-arphic-bsmi00lp</span><br><span class="line"># apt-get install fonts-arphic-bkai00mp</span><br></pre></td></tr></table></figure>

<ul>
<li><ol start="3">
<li>重新启动服务器: <code>reboot</code> .</li>
</ol>
</li>
</ul>
<blockquote>
<p>完成后相关截图:</p>
</blockquote>
<p><img src="http://upload-images.jianshu.io/upload_images/2079545-deefad65e2deac17.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ScreenShot2017-10-18_10.14.05.png"></p>
<p><img src="http://upload-images.jianshu.io/upload_images/2079545-2e178829e9602b29.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ScreenShot2017-10-18_10.12.47.png"></p>
<ul>
<li>4.设置 LANG 为 中文.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># LANG&#x3D;en_US</span><br><span class="line"># echo $LANG</span><br><span class="line">en_US</span><br><span class="line">&#x2F;&#x2F;开始设置.</span><br><span class="line"># LANG&#x3D;zh_CN.UTF-8</span><br><span class="line"># echo $LANG</span><br></pre></td></tr></table></figure>


<hr>
<h2 id="5-设置-ssh-免密登录-1"><a href="#5-设置-ssh-免密登录-1" class="headerlink" title="5.设置 ssh 免密登录"></a>5.设置 ssh 免密登录<a name="no_password_login"/></h2><h4 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考:"></a>1.参考:</h4><ul>
<li><a href="https://www.jianshu.com/p/84b506ae2201">1.Linux 下 的ssh免密登录</a></li>
<li><a href="https://www.jianshu.com/p/0922095f69f3">2.ssh免密登录配置</a></li>
</ul>
<h4 id="2-相关的步骤"><a href="#2-相关的步骤" class="headerlink" title="2.相关的步骤:"></a>2.相关的步骤:</h4><ul>
<li>1.在 <code>客户端(如 Mac)</code> 生成私钥密钥对.<ul>
<li>1.生成方法:<a href="https://gitlab.com/help/ssh/README#generating-a-new-ssh-key-pair">Generating a new SSH key pair</a></li>
</ul>
</li>
<li>2.在 <code>服务器端(如 Debian)</code> 的用户的主目录下的 <code>.ssh/</code> 下新建一个文件 <code>authorized_keys</code> <ul>
<li>1.如果是 <code>root</code> 用户,相应的 <code>.ssh</code> 目录路径为 <code>/root/.ssh</code>,如果是 <code>tian</code> 用户,相应的 <code>.ssh</code> 目录路径为 <code>/home/tian/.ssh</code>.</li>
<li>2.如果没有 <code>.ssh</code> 目录,需要自己新建.</li>
<li>3.然后把需要免密登录的客户端的 <code>公钥</code> 添加到 <code>authorized_keys </code> 文件后面,如:</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@debian:~&#x2F;.ssh# cat authorized_keys</span><br><span class="line">ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDBhaX9ZlQtaunrVjNBDcmRIcinu8d9FkXahiXwBPu6vn7TQXfmb7ozRAp5OD7&#x2F;OYXlIF2L9MBCMynIyysIzcAIX0tJ47Q9pIjAEM1z89KFx2w58&#x2F;U95wWZ0dyO1D2dkMa0bJCNoGt2EimgElUxCAi3Svr&#x2F;ygOScGdF7TiALL&#x2F;EQR0A6dIeWEw&#x2F;OziCI1Smds4HKe82FegQ7Ywj5Bm&#x2F;LknvGF8tmehZJ&#x2F;0Tf4I4wgSdjT0GH8tAnSbzb3ZuNUBlUOaRfnBkNjApsPClFAqbp29IQ4WcWea3MdMiQAU4s9S22Yuc5Dv97oGfhcEE9vLmRGY5NsCM6cIDQYYineVvNq3F683oYfMy3bgbFiWwOtTB2bWLgDgG0cCoLt9Z9Rgh0bJsvI2fyBHc7WFOrumaK&#x2F;hTb+fkv85q8+NR9XKiH3t1eSflJzqSpkthqjT8wDZ8HYLk0G4ktXg7qCFK5aMyycjO675&#x2F;anygXe&#x2F;mnGW5iOCDXnWSkXerKYcnf0RUx+V9JpBjezbgRmNUEXmQfC6IJeVoaAM7WcuwnXiAgfQGYKY1JdQMEzyj5CcvWYxiQsU8NWTGcwHqsQkszW6rRW86Z3HVlB2SJZzS1NAyTMh6GMFGE61pm17KNBh8nHskgy&#x2F;AhRSPdgUxDqXEblVdnF74DsGrx+8DVAIcuhS0dTT7gFB8rw&#x3D;&#x3D; abcd@163.com(GLB MBP)</span><br></pre></td></tr></table></figure>

<ul>
<li>3.在登录时，只要在客户端的 <code>terminal</code> 上输入命令 <code>ssh yourUserName@ip_address</code> ,即可远程免密登录.</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>debian系统的安装及下载</title>
    <url>/2018/09/07/debian%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%AE%89%E8%A3%85%E5%8F%8A%E4%B8%8B%E8%BD%BD/</url>
    <content><![CDATA[<h1 id="debian系统的安装及下载"><a href="#debian系统的安装及下载" class="headerlink" title="debian系统的安装及下载"></a>debian系统的安装及下载</h1><blockquote>
<p>在本地的旧机器上面安装 debian 系统的过程记录.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-下载"><a href="#1-下载" class="headerlink" title="1.下载"></a><a href="#download">1.下载</a></h2><h2 id="2-U-盘安装盘的制作"><a href="#2-U-盘安装盘的制作" class="headerlink" title="2.U 盘安装盘的制作"></a><a href="#make_u_installer">2.U 盘安装盘的制作</a></h2><h2 id="3-debian-系统的安装"><a href="#3-debian-系统的安装" class="headerlink" title="3.debian 系统的安装"></a><a href="#debian_install">3.debian 系统的安装</a></h2><hr>
<hr>
<hr>
<h2 id="1-下载-1"><a href="#1-下载-1" class="headerlink" title="1.下载"></a>1.下载<a name="download"/></h2><ul>
<li>1.在 <a href="http://cdimage.debian.org/debian-cd/">http://cdimage.debian.org/debian-cd/</a> 上下载最新的 debian 系统.<ul>
<li>1.要根据计算机的 CPU 支持的位数去下载相应的系统安装包.<ul>
<li><a href="https://www.opsdev.cn/post/chuliqijiagou.html">1.cpu处理器架构小知识</a></li>
<li><a href="https://jingyan.baidu.com/article/09ea3edec9caa4c0aede392e.html">2.怎样查看计算机是32位还是64位操作系统</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="2-U-盘安装盘的制作-1"><a href="#2-U-盘安装盘的制作-1" class="headerlink" title="2.U 盘安装盘的制作"></a>2.U 盘安装盘的制作<a name="make_u_installer"/></h2><ul>
<li>1.Mac 系统上.<ul>
<li>1.参考: <a href="https://www.jianshu.com/p/8f99d190e6c3">Mac制作Linux启动盘</a></li>
<li>2.操作步骤:</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">debianinstaller user$ sudo diskutil unmountDisk &#x2F;dev&#x2F;disk2</span><br><span class="line">Password:</span><br><span class="line">Unmount of all volumes on disk2 was successful</span><br><span class="line"></span><br><span class="line">debianinstaller user$ sudo dd if&#x3D;&#x2F;Users&#x2F;user&#x2F;Downloads&#x2F;debian-8.8.0-amd64-netinst.iso&#x2F;debian-8.8.0-amd64-netinst.iso of&#x3D;&#x2F;dev&#x2F;disk2 bs&#x3D;1m</span><br><span class="line">Password:</span><br><span class="line">247+0 records in</span><br><span class="line">247+0 records out</span><br><span class="line">258998272 bytes transferred in 49.859634 secs (5194548 bytes&#x2F;sec)</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="3-debian-系统的安装-1"><a href="#3-debian-系统的安装-1" class="headerlink" title="3.debian 系统的安装"></a>3.debian 系统的安装<a name="debian_install"/></h2><ul>
<li>1.在bios中选择USB启动</li>
<li>2.按照提示安装 debian install(最小化安装)</li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>DNS服务器的搭建</title>
    <url>/2017/12/19/dns%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h3 id="DNS服务器的搭建"><a href="#DNS服务器的搭建" class="headerlink" title="DNS服务器的搭建"></a>DNS服务器的搭建</h3><ul>
<li>在 debian 中搭建 DNS 服务器.</li>
</ul>
<a id="more"></a>

<h4 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h4><blockquote>
<p>1.Debian下安装DNS服务器: <a href="http://blog.csdn.net/linyoujushi/article/details/6604965">http://blog.csdn.net/linyoujushi/article/details/6604965</a><br>2.<a href="https://wiki.debian.org/HowTo/dnsmasq">https://wiki.debian.org/HowTo/dnsmasq</a><br>3.Linux安装DNSmasq搭建自己的公共DNS: <a href="https://www.xiaoz.me/archives/8303">https://www.xiaoz.me/archives/8303</a></p>
</blockquote>
<hr>
<p>步骤:</p>
<h4 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h4><h4 id="2-添加指定的-ip-地址"><a href="#2-添加指定的-ip-地址" class="headerlink" title="2.添加指定的 ip 地址"></a>2.添加指定的 ip 地址</h4><h4 id="3-在路由器的-DNS-中添加-DNS-服务器的地址"><a href="#3-在路由器的-DNS-中添加-DNS-服务器的地址" class="headerlink" title="3.在路由器的 DNS 中添加 DNS 服务器的地址."></a>3.在路由器的 DNS 中添加 DNS 服务器的地址.</h4>]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>github项目上传</title>
    <url>/2018/01/25/github%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0/</url>
    <content><![CDATA[<ul>
<li>背景</li>
</ul>
<blockquote>
<p>本地有项目，需要上传到 github 去保存.</p>
</blockquote>
<a id="more"></a>

<hr>
<h1 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h1><h3 id="1-在本地的-project-中创建一个-git-仓库"><a href="#1-在本地的-project-中创建一个-git-仓库" class="headerlink" title="1.在本地的 project 中创建一个 git 仓库."></a>1.在本地的 project 中创建一个 git 仓库.</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin git@10.100.1.217:Tim&#x2F;newProject.git</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;Initial commit&quot;</span><br><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure>

<h3 id="2-错误-及解决的方法"><a href="#2-错误-及解决的方法" class="headerlink" title="2.错误 及解决的方法"></a>2.错误 及解决的方法</h3><ul>
<li>1.合并 pull 两个不同的项目</li>
</ul>
<blockquote>
<p>fatal: refusing to merge unrelated histories</p>
</blockquote>
<blockquote>
<p><a href="http://blog.csdn.net/lindexi_gd/article/details/52554159">解决方法 :</a></p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">git pull origin master ----allow-unrelated-histories</span><br></pre></td></tr></table></figure>

<ul>
<li>2.把一个 git 项目 1 复制到另外一个 git 项目 2 里面,</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 1.把 1 的 .git 文件删除掉</span><br><span class="line">* 2.运行 &#96;git rm --cached 1&#96;</span><br><span class="line">* 3.git add .</span><br><span class="line">* 4.git commit -m &quot;Add git1 to git2.&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-Git远程仓库的版本回退"><a href="#3-Git远程仓库的版本回退" class="headerlink" title="3.Git远程仓库的版本回退"></a>3.Git远程仓库的版本回退</h3><blockquote>
<p><a href="https://blog.csdn.net/ligang2585116/article/details/71094887">参考1:</a> </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">方式一：使用revert</span><br><span class="line"></span><br><span class="line">git revert HEAD</span><br><span class="line">git push origin master</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">方式二：使用reset</span><br><span class="line"></span><br><span class="line">git reset --hard HEAD^</span><br><span class="line">git push origin master -f</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">二者区别：</span><br><span class="line"></span><br><span class="line">revert是放弃指定提交的修改，但是会生成一次新的提交，需要填写提交注释，以前的历史记录都在；</span><br><span class="line">reset是指将HEAD指针指到指定提交，历史记录中不会出现放弃的提交记录。</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<ul>
<li>模板方案:<br><img src="/assets/imgs/github/ScreenShot2018-01-25_13.10.13.png"></li>
</ul>
]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title>Google Map 在 google play 中不显示的问题</title>
    <url>/2017/12/27/googleMap%E4%B8%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<blockquote>
<p>最近在开发 google map ,发现在本地下很正常(debug 和 release)(可以正常地显示),但是把 release 的 apk 上传到 google play 上面就一片空白，现在记录下解决的过程.</p>
</blockquote>
<a id="more"></a>

<h3 id="1-这个是-google-play-推出的-Google-Play-App-Signing-服务所导致的"><a href="#1-这个是-google-play-推出的-Google-Play-App-Signing-服务所导致的" class="headerlink" title="1.这个是 google play 推出的 Google Play App Signing 服务所导致的."></a><a href="#issues">1.这个是 google play 推出的 Google Play App Signing 服务所导致的.</a></h3><h3 id="2-解决"><a href="#2-解决" class="headerlink" title="2.解决"></a><a href="#solves">2.解决</a></h3><hr>
<hr>
<hr>
<h2 id="1-这个是-google-play-推出的-Google-Play-App-Signing-服务所导致的-1"><a href="#1-这个是-google-play-推出的-Google-Play-App-Signing-服务所导致的-1" class="headerlink" title="1.这个是 google play 推出的 Google Play App Signing 服务所导致的."></a>1.这个是 google play 推出的 Google Play App Signing 服务所导致的.<a name="issues"/></h2><blockquote>
<p>开始发布应用时，自己手贱点击了<br><code>启用Google Play App Signing</code></p>
</blockquote>
<ul>
<li>参考</li>
</ul>
<blockquote>
<p>1.<a href="https://stackoverflow.com/questions/44671778/published-app-on-play-store-cant-communicate-with-google-maps-api-and-facebook">https://stackoverflow.com/questions/44671778/published-app-on-play-store-cant-communicate-with-google-maps-api-and-facebook</a></p>
<p>2.<a href="https://support.google.com/googleplay/android-developer/answer/7384423">https://support.google.com/googleplay/android-developer/answer/7384423</a></p>
</blockquote>
<hr>
<h2 id="2-解决-1"><a href="#2-解决-1" class="headerlink" title="2.解决"></a>2.解决<a name="solves"/></h2><ul>
<li>1.在 google play 中 APP 的 应用签名 处查看 google 新增的 SHA1</li>
</ul>
<p><img src="/assets/imgs/Android/Snip20171227_5.png"></p>
<ul>
<li>2.把 上面中的 SHA1 添加到 google map 的 API 密钥 的管理台中，然后保存即可.</li>
</ul>
<p><img src="/assets/imgs/Android/Snip20171227_6.png"></p>
<ul>
<li>3.前后的效果对比图.</li>
</ul>
<p><img src="/assets/imgs/Android/ScreenShot2017-12-27_15.41.29.png"><br><img src="/assets/imgs/Android/ScreenShot2017-12-27_15.41.18.png"></p>
]]></content>
      <categories>
        <category>google</category>
      </categories>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Homestead 的使用</title>
    <url>/2018/11/12/homestead%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
    <content><![CDATA[<blockquote>
<p>主要记录下 <code>Homestead</code> 的使用方法</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a><a href="#referances">1.参考</a></h2><h2 id="2-ssh-连接"><a href="#2-ssh-连接" class="headerlink" title="2.ssh 连接"></a><a href="#ssh_connect">2.ssh 连接</a></h2><h2 id="3-上传文件到服务器"><a href="#3-上传文件到服务器" class="headerlink" title="3.上传文件到服务器"></a><a href="#upload_file">3.上传文件到服务器</a></h2><h2 id="4-mysql-的操作"><a href="#4-mysql-的操作" class="headerlink" title="4.mysql 的操作"></a><a href="#mysql_usage">4.mysql 的操作</a></h2><h2 id="5-MongoDB-的安装"><a href="#5-MongoDB-的安装" class="headerlink" title="5.MongoDB 的安装"></a><a href="#mongoDB_install">5.MongoDB 的安装</a></h2><h2 id="6-相关的问题"><a href="#6-相关的问题" class="headerlink" title="6.相关的问题"></a><a href="#related_issues">6.相关的问题</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考<a name="referances"/></h2><ul>
<li><a href="https://laravel-china.org/docs/laravel/5.7/homestead/2245#8875b6">1.Laravel Homestead 5.7 中文文档</a></li>
</ul>
<hr>
<h2 id="2-ssh-连接-1"><a href="#2-ssh-连接-1" class="headerlink" title="2.ssh 连接"></a>2.ssh 连接<a name="ssh_connect"/></h2><ul>
<li>1.在项目的目录下面，可以用 <code>vagrant ssh</code> 去进入到 Linux 虚拟机下面.</li>
<li>2.在其他的路径的时候，通过 <code>ssh vagrant@192.168.10.10</code> 去连接,<a href="https://stackoverflow.com/questions/29450404/is-there-a-default-password-to-connect-to-vagrant-when-using-homestead-ssh-for">详细参考这里</a>.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh vagrant@192.168.10.10</span><br><span class="line">Welcome to Ubuntu 18.04.1 LTS (GNU&#x2F;Linux 4.15.0-32-generic x86_64)</span><br><span class="line"></span><br><span class="line"> * Documentation:  https:&#x2F;&#x2F;help.ubuntu.com</span><br><span class="line"> * Management:     https:&#x2F;&#x2F;landscape.canonical.com</span><br><span class="line"> * Support:        https:&#x2F;&#x2F;ubuntu.com&#x2F;advantage</span><br><span class="line"></span><br><span class="line">  System information as of Mon Nov 12 11:58:32 UTC 2018</span><br><span class="line"></span><br><span class="line">  System load:  0.0               Processes:           131</span><br><span class="line">  Usage of &#x2F;:   9.6% of 61.80GB   Users logged in:     1</span><br><span class="line">  Memory usage: 21%               IP address for eth0: 10.0.2.15</span><br><span class="line">  Swap usage:   0%                IP address for eth1: 192.168.10.10</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">285 packages can be updated.</span><br><span class="line">96 updates are security updates.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Last login: Mon Nov 12 11:32:02 2018 from 10.0.2.2</span><br><span class="line">vagrant@httpdocs:~$ exit</span><br><span class="line">logout</span><br><span class="line">Connection to 192.168.10.10 closed.</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h2 id="3-上传文件到服务器-1"><a href="#3-上传文件到服务器-1" class="headerlink" title="3.上传文件到服务器"></a>3.上传文件到服务器<a name="upload_file"/></h2><ul>
<li><a href="https://www.cnblogs.com/no7dw/archive/2012/07/07/2580307.html">1.利用 <code>scp</code> 去上传文件</a>:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ scp &#x2F;Users&#x2F;glb_gz&#x2F;Desktop&#x2F;smarttec.sql vagrant@192.168.10.10:&#x2F;tmp</span><br><span class="line">smarttec.sql                                  100% 1556KB  54.1MB&#x2F;s   00:00    </span><br><span class="line">glb-gzdeMacBook-Pro:~ glb_gz$ </span><br></pre></td></tr></table></figure>

<hr>
<h2 id="4-mysql-的操作-1"><a href="#4-mysql-的操作-1" class="headerlink" title="4.mysql 的操作"></a>4.mysql 的操作<a name="mysql_usage"/></h2><ul>
<li>1.用户名和密码分别为 <code>homestead</code>/<code>secret</code>,详见 <a href="https://laravel-china.org/docs/laravel/5.7/homestead/2245#connecting-via-ssh">连接数据库</a>,相关的操作例子:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">vagrant@httpdocs:~$ mysql -u homestead -p</span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection id is 5</span><br><span class="line">Server version: 5.7.23-0ubuntu0.18.04.1 (Ubuntu)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and&#x2F;or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and&#x2F;or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type &#39;help;&#39; or &#39;\h&#39; for help. Type &#39;\c&#39; to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; </span><br></pre></td></tr></table></figure>

<hr>
<h2 id="5-MongoDB-的安装-1"><a href="#5-MongoDB-的安装-1" class="headerlink" title="5.MongoDB 的安装"></a>5.MongoDB 的安装<a name="mongoDB_install"/></h2><h4 id="1-参考-目前主要用-homestead-vagrant-去安装-mongodb"><a href="#1-参考-目前主要用-homestead-vagrant-去安装-mongodb" class="headerlink" title="1.参考(目前主要用 homestead vagrant 去安装 mongodb):"></a>1.参考(目前主要用 homestead vagrant 去安装 mongodb):</h4><ul>
<li><p><a href="https://laravel-china.org/docs/laravel/5.7/homestead/2245#installing-mongodb">1.HomeStead 中安装 MongoDB</a></p>
</li>
<li><p><a href="https://medium.com/@williamvicary/installing-mongodb-on-homestead-3eb750dcc891">2.Installing MongoDB on Homestead</a></p>
</li>
<li><p><a href="http://www.runoob.com/mongodb/mongodb-intro.html">3.PHP7 MongDB 安装与使用</a></p>
</li>
<li><p><a href="https://silviu-s.com/mongodb-on-laravel-homestead-with-php-7/">4.MongoDB on Laravel Homestead with PHP 7(主要参考这个)</a></p>
</li>
<li><p>5.其他的一些信息</p>
<ul>
<li><a href="https://docs.mongodb.com/manual/tutorial/install-mongodb-enterprise-on-ubuntu/">1.Install MongoDB Enterprise on Ubuntu</a></li>
<li><a href="http://php.net/manual/zh/mongo.sqltomongo.php">2.SQL 到 Mongo 的对应表 </a></li>
<li><a href="http://php.net/manual/zh/set.mongodb.php">3.MongoDB driver ¶</a></li>
<li><a href="http://php.net/manual/en/mongodb.tutorial.library.php#mongodb.tutorial.library">4.Using the PHP Library for MongoDB (PHPLIB) ¶</a></li>
<li><a href="http://zetcode.com/db/mongodbphp/">5.MongoDB PHP tutorial</a></li>
<li><a href="https://medium.com/@matthagemann/how-to-install-mongodb-3-6-on-ubuntu-17-10-ac0bc225e648">6.How to Install and Secure MongoDB 3.6 on Ubuntu 17.10</a></li>
</ul>
</li>
</ul>
<h4 id="2-在-Homestead-yaml-中安装-mongodb"><a href="#2-在-Homestead-yaml-中安装-mongodb" class="headerlink" title="2.在 Homestead.yaml 中安装 mongodb :"></a>2.在 <code>Homestead.yaml</code> 中安装 <code>mongodb</code> :</h4><ul>
<li>1.在 <code>Homestead.yaml</code> 中修改文件的配置,如:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">ip: 192.168.10.10</span><br><span class="line">memory: 2048</span><br><span class="line">cpus: 1</span><br><span class="line">provider: virtualbox</span><br><span class="line">authorize: ~&#x2F;.ssh&#x2F;id_rsa.pub</span><br><span class="line">keys:</span><br><span class="line">    - ~&#x2F;.ssh&#x2F;id_rsa</span><br><span class="line">folders:</span><br><span class="line">    -</span><br><span class="line">        map: &#x2F;Users&#x2F;glb_gz&#x2F;Documents&#x2F;php_workplace&#x2F;Test</span><br><span class="line">        to: &#x2F;home&#x2F;vagrant&#x2F;code</span><br><span class="line">sites:</span><br><span class="line">    -</span><br><span class="line">        map: homestead.test</span><br><span class="line">        to: &#x2F;home&#x2F;vagrant&#x2F;code&#x2F;public</span><br><span class="line"></span><br><span class="line">databases:</span><br><span class="line">    - homestead</span><br><span class="line"></span><br><span class="line">name: test</span><br><span class="line">hostname: test</span><br><span class="line">mongodb : true</span><br></pre></td></tr></table></figure>


<hr>
<h4 id="3-SSH-进入-vagrant-后，执行下面的操作-就可以顺利安装好-MongoDB-了"><a href="#3-SSH-进入-vagrant-后，执行下面的操作-就可以顺利安装好-MongoDB-了" class="headerlink" title="3.SSH 进入 vagrant  后，执行下面的操作,就可以顺利安装好 MongoDB 了:"></a>3.SSH 进入 <code>vagrant </code> 后，执行下面的操作,就可以顺利安装好 <code>MongoDB</code> 了:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ ssh vagrant@192.168.10.10</span><br><span class="line">vagrant@test:&#x2F;usr&#x2F;local$ sudo apt-key adv --keyserver hkp:&#x2F;&#x2F;keyserver.ubuntu.com:80 --recv 7F0CEB10</span><br><span class="line">Executing: &#x2F;tmp&#x2F;apt-key-gpghome.raLrEy2Bnr&#x2F;gpg.1.sh --keyserver hkp:&#x2F;&#x2F;keyserver.ubuntu.com:80 --recv 7F0CEB10</span><br><span class="line">gpg: key 5F8F93707F0CEB10: public key &quot;Totally Legit Signing Key &lt;mallory@example.org&gt;&quot; imported</span><br><span class="line">gpg: key 9ECBEC467F0CEB10: 1 signature not checked due to a missing key</span><br><span class="line">gpg: key 9ECBEC467F0CEB10: public key &quot;Richard Kreuter &lt;richard@10gen.com&gt;&quot; imported</span><br><span class="line">gpg: Total number processed: 2</span><br><span class="line">gpg:               imported: 2</span><br><span class="line"></span><br><span class="line">vagrant@test:&#x2F;usr&#x2F;local$ echo &quot;deb http:&#x2F;&#x2F;repo.mongodb.org&#x2F;apt&#x2F;ubuntu &quot;$(lsb_release -sc)&quot;&#x2F;mongodb-org&#x2F;3.0 multiverse&quot; | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;mongodb-org-3.0.list</span><br><span class="line">deb http:&#x2F;&#x2F;repo.mongodb.org&#x2F;apt&#x2F;ubuntu bionic&#x2F;mongodb-org&#x2F;3.0 multiverse</span><br><span class="line">vagrant@test:&#x2F;usr&#x2F;local$ sudo apt-get update</span><br><span class="line">Hit:1 https:&#x2F;&#x2F;deb.nodesource.com&#x2F;node_8.x bionic InRelease</span><br><span class="line">vagrant@test:&#x2F;usr&#x2F;local$ sudo apt-get install -y mongodb-org</span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree       </span><br><span class="line">Reading state information... Done</span><br><span class="line">mongodb-org is already the newest version (3.6.9).</span><br><span class="line">0 upgraded, 0 newly installed, 0 to remove and 221 not upgraded.</span><br><span class="line">vagrant@test:&#x2F;usr&#x2F;local$ sudo pecl install mongodb</span><br><span class="line">WARNING: channel &quot;pecl.php.net&quot; has updated its protocols, use &quot;pecl channel-update pecl.php.net&quot; to update</span><br><span class="line">downloading mongodb-1.5.3.tgz ...</span><br><span class="line">...</span><br><span class="line">Build complete.</span><br><span class="line">Don&#39;t forget to run &#39;make test&#39;.</span><br><span class="line"></span><br><span class="line">running: make INSTALL_ROOT&#x3D;&quot;&#x2F;tmp&#x2F;pear&#x2F;temp&#x2F;pear-build-rootLH757y&#x2F;install-mongodb-1.5.3&quot; install</span><br><span class="line">Installing shared extensions:     &#x2F;tmp&#x2F;pear&#x2F;temp&#x2F;pear-build-rootLH757y&#x2F;install-mongodb-1.5.3&#x2F;usr&#x2F;lib&#x2F;php&#x2F;20170718&#x2F;</span><br><span class="line">running: find &quot;&#x2F;tmp&#x2F;pear&#x2F;temp&#x2F;pear-build-rootLH757y&#x2F;install-mongodb-1.5.3&quot; | xargs ls -dils</span><br><span class="line">539331    4 drwxr-xr-x 3 root root    4096 Nov 16 07:00 &#x2F;tmp&#x2F;pear&#x2F;temp&#x2F;pear-build-rootLH757y&#x2F;install-mongodb-1.5.3</span><br><span class="line">539739    4 drwxr-xr-x 3 root root    4096 Nov 16 07:00 &#x2F;tmp&#x2F;pear&#x2F;temp&#x2F;pear-build-rootLH757y&#x2F;install-mongodb-1.5.3&#x2F;usr</span><br><span class="line">539740    4 drwxr-xr-x 3 root root    4096 Nov 16 07:00 &#x2F;tmp&#x2F;pear&#x2F;temp&#x2F;pear-build-rootLH757y&#x2F;install-mongodb-1.5.3&#x2F;usr&#x2F;lib</span><br><span class="line">539741    4 drwxr-xr-x 3 root root    4096 Nov 16 07:00 &#x2F;tmp&#x2F;pear&#x2F;temp&#x2F;pear-build-rootLH757y&#x2F;install-mongodb-1.5.3&#x2F;usr&#x2F;lib&#x2F;php</span><br><span class="line">539742    4 drwxr-xr-x 2 root root    4096 Nov 16 07:00 &#x2F;tmp&#x2F;pear&#x2F;temp&#x2F;pear-build-rootLH757y&#x2F;install-mongodb-1.5.3&#x2F;usr&#x2F;lib&#x2F;php&#x2F;20170718</span><br><span class="line">539738 5796 -rwxr-xr-x 1 root root 5934296 Nov 16 07:00 &#x2F;tmp&#x2F;pear&#x2F;temp&#x2F;pear-build-rootLH757y&#x2F;install-mongodb-1.5.3&#x2F;usr&#x2F;lib&#x2F;php&#x2F;20170718&#x2F;mongodb.so</span><br><span class="line"></span><br><span class="line">Build process completed successfully</span><br><span class="line">Installing &#39;&#x2F;usr&#x2F;lib&#x2F;php&#x2F;20170718&#x2F;mongodb.so&#39;</span><br><span class="line">install ok: channel:&#x2F;&#x2F;pecl.php.net&#x2F;mongodb-1.5.3</span><br><span class="line">configuration option &quot;php_ini&quot; is not set to php.ini location</span><br><span class="line">You should add &quot;extension&#x3D;mongodb.so&quot; to php.ini</span><br><span class="line">Segmentation fault</span><br><span class="line">#然后在 php.ini 中写入 extension &#x3D; mongodb.so</span><br><span class="line">vagrant@test:&#x2F;usr&#x2F;local$ sudo find &#x2F; -name &#39;php.ini&#39;</span><br><span class="line">&#x2F;etc&#x2F;php&#x2F;7.1&#x2F;fpm&#x2F;php.ini</span><br><span class="line">&#x2F;etc&#x2F;php&#x2F;7.1&#x2F;cli&#x2F;php.ini</span><br><span class="line">&#x2F;etc&#x2F;php&#x2F;5.6&#x2F;fpm&#x2F;php.ini</span><br><span class="line">&#x2F;etc&#x2F;php&#x2F;5.6&#x2F;cli&#x2F;php.ini</span><br><span class="line">&#x2F;etc&#x2F;php&#x2F;7.3&#x2F;fpm&#x2F;php.ini</span><br><span class="line">&#x2F;etc&#x2F;php&#x2F;7.3&#x2F;cli&#x2F;php.ini</span><br><span class="line">&#x2F;etc&#x2F;php&#x2F;7.2&#x2F;fpm&#x2F;php.ini</span><br><span class="line">&#x2F;etc&#x2F;php&#x2F;7.2&#x2F;cli&#x2F;php.ini</span><br><span class="line">&#x2F;etc&#x2F;php&#x2F;7.0&#x2F;fpm&#x2F;php.ini</span><br><span class="line">&#x2F;etc&#x2F;php&#x2F;7.0&#x2F;cli&#x2F;php.ini</span><br><span class="line">vagrant@test:&#x2F;usr&#x2F;local$ php -v</span><br><span class="line">PHP 7.2.12-1+ubuntu18.04.1+deb.sury.org+1 (cli) (built: Nov 12 2018 09:55:44) ( NTS )</span><br><span class="line">Copyright (c) 1997-2018 The PHP Group</span><br><span class="line">Zend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies</span><br><span class="line">    with Zend OPcache v7.2.12-1+ubuntu18.04.1+deb.sury.org+1, Copyright (c) 1999-2018, by Zend Technologies</span><br><span class="line">    with blackfire v1.22.0~linux-x64-non_zts72, https:&#x2F;&#x2F;blackfire.io, by Blackfire</span><br><span class="line">vagrant@test:&#x2F;usr&#x2F;local$ sudo vi &#x2F;etc&#x2F;php&#x2F;7.2&#x2F;fpm&#x2F;php.ini</span><br><span class="line">vagrant@test:&#x2F;usr&#x2F;local$ sudo vi &#x2F;etc&#x2F;php&#x2F;7.2&#x2F;cli&#x2F;php.ini</span><br><span class="line">vagrant@test:&#x2F;usr&#x2F;local$ sudo service php7.2-fpm restart &amp;&amp; sudo service nginx restart</span><br><span class="line"></span><br></pre></td></tr></table></figure>




<h2 id="6-相关的问题-1"><a href="#6-相关的问题-1" class="headerlink" title="6.相关的问题"></a>6.相关的问题<a name="related_issues"/></h2><ul>
<li>1.在 Mac 上运行 <code>$ composer require mongodb/mongodb</code> ,出现以下问题:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Problem 1</span><br><span class="line">  - mongodb&#x2F;mongodb 1.4.2 requires ext-mongodb ^1.5.0 -&gt; the requested PHP extension mongodb is missing from your system.</span><br><span class="line">  - mongodb&#x2F;mongodb 1.4.1 requires ext-mongodb ^1.5.0 -&gt; the requested PHP extension mongodb is missing from your system.</span><br><span class="line">  - mongodb&#x2F;mongodb 1.4.0 requires ext-mongodb ^1.5.0 -&gt; the requested PHP extension mongodb is missing from your system.</span><br><span class="line">  - Installation request for mongodb&#x2F;mongodb ^1.4 -&gt; satisfiable by mongodb&#x2F;mongodb[1.4.0, 1.4.1, 1.4.2].</span><br></pre></td></tr></table></figure>

<ul>
<li>1.1 解决方法 <a href="https://github.com/jenssegers/laravel-mongodb/issues/797">Composer can’t find mongodb extension</a>,运行 <code>$ composer require jenssegers/mongodb --ignore-platform-reqs</code></li>
</ul>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS_APP基本组件</title>
    <url>/2018/08/14/iOS_APP%E5%9F%BA%E6%9C%AC%E7%BB%84%E4%BB%B6/</url>
    <content><![CDATA[<h1 id="iOS-APP基本组件"><a href="#iOS-APP基本组件" class="headerlink" title="iOS_APP基本组件"></a>iOS_APP基本组件</h1><blockquote>
<p>整理以前用到的  iOS APP 常见的基本组件.</p>
</blockquote>
<a id="more"></a>

<h2 id="0-参考"><a href="#0-参考" class="headerlink" title="0.参考"></a>0.参考</h2><ul>
<li><a href="https://www.raywenderlich.com/259-top-10-libraries-for-ios-developers">1.Top 10 Libraries for iOS Developers</a></li>
</ul>
<h2 id="1-第三方组件"><a href="#1-第三方组件" class="headerlink" title="1.第三方组件"></a><a href="#third_component">1.第三方组件</a></h2><hr>
<hr>
<hr>
<h2 id="1-第三方组件-1"><a href="#1-第三方组件-1" class="headerlink" title="1.第三方组件"></a>1.第三方组件<a name="third_component"/></h2><ul>
<li><p>1.状态提示框</p>
<ul>
<li><a href="https://github.com/jdg/MBProgressHUD">1.MBProgressHUD 弹框组件</a></li>
<li><a href="https://github.com/SVProgressHUD/SVProgressHUD">2.SVProgressHUD</a></li>
</ul>
</li>
<li><p><a href="https://github.com/emotality/ATNavBarButton">2.ATNavBarButton,Bar 上的 Button</a></p>
</li>
<li><p><a href="https://gitee.com/yybz/JQIndicatorView">3.等待转圈图 JQIndicatorView</a></p>
</li>
<li><p><a href="https://github.com/rs/SDWebImage">4.SDWebImage</a></p>
<ul>
<li>1.图片加载框架.</li>
</ul>
</li>
<li><p><a href="https://github.com/Flipboard/FLAnimatedImage">5.Flipboard/FLAnimatedImage</a></p>
<ul>
<li>1.GIF 动画加载框架.</li>
</ul>
</li>
<li><p><a href="https://github.com/CoderMJLee/MJRefresh">6.MJRefresh</a></p>
</li>
<li><p>[7.Bugly]</p>
</li>
<li><p><a href="https://github.com/cezarywojcik/CWStatusBarNotification">8.自定义 通知栏 信息: CWStatusBarNotification</a></p>
</li>
<li><p><a href="https://github.com/hackiftekhar/IQKeyboardManager">9.软键盘弹出，智能调整与 TextField 的距离.IQKeyboardManager</a></p>
</li>
<li><p><a href="https://github.com/tonymillion/Reachability">10.检测网络状态,Reachability</a></p>
</li>
<li><p>11.FMDB 数据库处理</p>
<ul>
<li><a href="https://github.com/ccgus/fmdb">1.GitHub 地址</a></li>
<li><a href="http://www.imlifengfeng.com/blog/?p=512">2.iOS FMDB详解</a></li>
<li><a href="https://github.com/ghzjtian/FMDB_TEST">3.简单的 DEMO</a></li>
</ul>
</li>
<li><p>12.网络请求</p>
<ul>
<li>1.AFNetworking (Object-C)<ul>
<li><a href="https://github.com/AFNetworking/AFNetworking">1.GitHub 地址+DEMO(但是 DEMO 的 URL 有问题.)</a> </li>
<li><a href="https://www.raywenderlich.com/2516-afnetworking-2-0-tutorial">2.Weather APP(一个使用 AFNetWorking 的例子.From raywenderlich)</a></li>
</ul>
</li>
<li>2.Alamofire/Alamofire(Switch)<ul>
<li><a href="https://github.com/Alamofire/Alamofire">1.GitHub 地址</a></li>
</ul>
</li>
</ul>
</li>
<li><p><a href="https://github.com/CoderMJLee/MJExtension">13.CoderMJLee/MJExtension</a></p>
<ul>
<li>1.字典模型相互转换.</li>
</ul>
</li>
<li><p>14.CocoaLumberjack/CocoaLumberjack</p>
<ul>
<li><a href="https://github.com/CocoaLumberjack/CocoaLumberjack">0.GitHub 源代码(包括文档)</a><ul>
<li>1.可以把 log 保存到 文件/数据库.</li>
<li><a href="https://github.com/CocoaLumberjack/CocoaLumberjack/blob/master/Documentation/XcodeColors.md">2.在 Xcode 用不同的颜色显示.</a></li>
<li>3.Debug 和 Release 的 Log 有不同的输出.</li>
</ul>
</li>
<li>1.一个 Logging 框架,相关教程参考:<ul>
<li><a href="https://www.jianshu.com/p/7b799bef0107">1.CocoaLumberjack：简单好用的Log库</a></li>
<li><a href="https://www.jianshu.com/p/d8bad0e2683c">2.深入解析iOS日志库CocoaLumberjack</a></li>
</ul>
</li>
<li>2.打印保存的 log 的路径的命令为 : <code>DDLogVerbose(@&quot;%@&quot;,[[[NSFileManager defaultManager]URLsForDirectory:NSLibraryDirectory inDomains:NSUserDomainMask] lastObject]);</code><ul>
<li>4.保存的 file 的路径为: <code>/Users/user/Library/Developer/CoreSimulator/Devices/A656FEC2-922B-4D92-BB56-F42EDDD0BD18/data/Containers/Data/Application/E1BE1827-1DEA-48E8-B5E6-7F76E0837FE8/Library/Caches/Logs/com.deusty.iOSLibStaticTest 2018-09-13--14-53-34-390.log</code></li>
</ul>
</li>
</ul>
</li>
<li><p>15.CocoaLumberjack/CocoaLumberjack</p>
<ul>
<li>0.让 Xcode 的 Log 输出不同的颜色.</li>
<li><a href="https://github.com/robbiehanson/XcodeColors">1.GitHub 源码    </a></li>
<li><a href="https://github.com/robbiehanson/XcodeColors/issues/91">2.Can’t work Xcode9?</a></li>
<li><a href="https://medium.com/gk-blog/making-xcode-colors-work-with-xcode-8-1-f67da74ad83f">3.Making Xcode-Colors work with Xcode 8.1 — Xcode 9</a></li>
</ul>
</li>
<li><p>16.代码实现 AutoLayout 复杂的布局效果.</p>
<ul>
<li><a href="https://github.com/SnapKit/Masonry">1.SnapKit/Masonry</a></li>
</ul>
</li>
<li><p>17.<a href="https://github.com/meili/MGJRouter">MGJRouter 路由</a></p>
</li>
<li><p>18.<a href="https://github.com/Friend-LGA/LGAlertView">LGAlertView 状态提示 View</a></p>
</li>
<li><p>19.<a href="https://github.com/ReactiveCocoa/ReactiveCocoa">ReactiveCocoa</a></p>
<ul>
<li>1.<a href="https://www.jianshu.com/p/87ef6720a096">最快让你上手ReactiveCocoa之基础篇</a></li>
<li>2.<a href="https://www.jianshu.com/p/148075efc2c9">iOS ReactiveCocoa框架的简单使用</a></li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS_学习</title>
    <url>/2018/08/14/iOS_%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="iOS-学习"><a href="#iOS-学习" class="headerlink" title="iOS 学习"></a>iOS 学习</h1><blockquote>
<p>整理以前用到的一些 开发的资料.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-视频"><a href="#1-视频" class="headerlink" title="1.视频"></a><a href="#video_learn">1.视频</a></h2><h2 id="2-各个名词的理解"><a href="#2-各个名词的理解" class="headerlink" title="2.各个名词的理解"></a><a href="#some_property">2.各个名词的理解</a></h2><h2 id="3-用到的开发的方法"><a href="#3-用到的开发的方法" class="headerlink" title="3.用到的开发的方法."></a><a href="#develop_related">3.用到的开发的方法.</a></h2><h2 id="4-相关的技术网站或博客"><a href="#4-相关的技术网站或博客" class="headerlink" title="4.相关的技术网站或博客"></a><a href="#tech_blog">4.相关的技术网站或博客</a></h2><hr>
<hr>
<hr>
<h2 id="1-视频-1"><a href="#1-视频-1" class="headerlink" title="1.视频"></a>1.视频<a name="video_learn"/></h2><ul>
<li><a href="https://itunes.apple.com/WebObjects/DZR.woa/wa/viewArtist?id=384228265">1.StanFord Video(会用 iTunes 打开)</a></li>
<li><a href="https://www.youtube.com/channel/UCxYl0ECy6PM11VzsW943cQA">2.Youtube</a></li>
<li><a href="https://www.jianshu.com/p/5765e9dba738">3.iOS 学习资料整理{非常有用,强烈推荐}</a></li>
<li><a href="https://www.jianshu.com/p/ebd5a3452667">4.iOS 开发的正确入坑姿势</a></li>
<li><a href="http://open.163.com/special/School/stanford.html">5.网易公开课</a></li>
</ul>
<hr>
<h2 id="2-各个名词的理解-1"><a href="#2-各个名词的理解-1" class="headerlink" title="2.各个名词的理解"></a>2.各个名词的理解<a name="some_property"/></h2><ul>
<li><a href="https://stackoverflow.com/questions/2255861/property-retain-assign-copy-nonatomic-in-objective-c">1.property retain, assign, copy, nonatomic in Objective-C</a></li>
<li><a href="https://stackoverflow.com/questions/11013587/differences-between-strong-and-weak-in-objective-c">2.Differences between strong and weak in Objective-C</a></li>
<li><a href="https://www.jianshu.com/p/d9759dd1fb2e">3.OC属性的setter和getter方法</a><ul>
<li><a href="https://www.jianshu.com/p/c883687c6405">1.iOS @property、@synthesize和@dynamic</a></li>
</ul>
</li>
<li><a href="https://stackoverflow.com/questions/1210047/cocoa-whats-the-difference-between-the-frame-and-the-bounds">4.Cocoa: What’s the difference between the frame and the bounds?</a></li>
<li><a href="http://www.imlifengfeng.com/blog/?p=455">5.typedef和#define的用法与区别</a></li>
<li>6.沙盒机制<ul>
<li><a href="https://developer.apple.com/library/archive/documentation/FileManagement/Conceptual/FileSystemProgrammingGuide/FileSystemOverview/FileSystemOverview.html">1.File System Basics</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="3-用到的开发的方法-1"><a href="#3-用到的开发的方法-1" class="headerlink" title="3.用到的开发的方法."></a>3.用到的开发的方法.<a name="develop_related"/></h2><ul>
<li><p><a href="https://www.jianshu.com/p/f23d11e87af3">1.iOS开发之给项目添加PCH文件</a></p>
</li>
<li><p>2.Xcode 中 蓝色 和 黄色 文件夹的不同点</p>
<ul>
<li><a href="https://stackoverflow.com/questions/10353274/why-are-there-some-blue-folders-in-my-xcode-project">1.Why are there some blue folders in my Xcode project?</a></li>
<li><a href="http://struct.ca/2010/xcode-folder-references/">2.Xcode Folder References</a></li>
<li><a href="https://stackoverrun.com/cn/q/3066119">3.UIImage imageNamed：在蓝色引用的Xcode文件夹中找不到图像</a></li>
</ul>
</li>
<li><p><a href="https://blog.csdn.net/joonsheng/article/details/41362499">3.自定义iOS的Back按钮(backBarButtonItem）和pop交互手势(interactivepopgesturerecognizer)</a>    </p>
</li>
<li><p><a href="https://blog.csdn.net/ios_wq/article/details/51285953">4.iOS程序猿之JSONKit的使用</a></p>
</li>
<li><p>5.iOS APP 之间内容的分享</p>
<ul>
<li><a href="https://www.jianshu.com/p/88a08d66894f">1.iOS实现App之间的内容分享</a></li>
<li><a href="https://www.jianshu.com/p/3f03897cf98a">2.通过UIDocumentInteractionController预览和分享”史蒂夫•乔布斯传”</a></li>
<li><a href="https://www.jianshu.com/p/a1c9621a3f4e">3.通过UIActivityViewController实现更多分享服务</a></li>
</ul>
</li>
<li><p>6.iOS 宏相关</p>
<ul>
<li><a href="https://www.jianshu.com/p/213b3b96cafe">1.iOS 日常工作之常用宏定义大全</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="4-相关的技术网站或博客-1"><a href="#4-相关的技术网站或博客-1" class="headerlink" title="4.相关的技术网站或博客"></a>4.相关的技术网站或博客<a name="tech_blog"/></h2><ul>
<li><p>1.<a href="http://www.imlifengfeng.com/blog/?cat=1">imlifengfeng</a></p>
<ul>
<li><a href="http://www.imlifengfeng.com/blog/?p=548">1.iOS Core Animation详解</a></li>
<li><a href="http://www.imlifengfeng.com/blog/?p=538">2.iOS NSURLSession详解</a></li>
<li><a href="http://www.imlifengfeng.com/blog/?p=543">3.iOS CALayer详解</a></li>
<li><a href="http://www.imlifengfeng.com/blog/?p=533">4.iOS多线程详解</a></li>
</ul>
</li>
<li><p>2.<a href="https://www.raywenderlich.com/">Raywenderlich</a></p>
<ul>
<li>1.强大的教学网站，更新速度快.</li>
</ul>
</li>
<li><p>3.<a href="https://useyourloaf.com/">Use your loaf</a></p>
<ul>
<li>1.该网站主要讲解 iOS 相关的特性及操作知识.</li>
<li>2.<a href="https://github.com/kharrison/CodeExamples">GitHub 上源码地址</a></li>
<li>2.包括:<ul>
<li><a href="https://useyourloaf.com/blog/ib-designable-custom-views-in-interface-builder/">1.IB_DESIGNABLE Custom Views in Interface Builder 自定义 View 的实时开发查看</a></li>
<li><a href="https://useyourloaf.com/blog/xcode-9-vector-images/">2.Xcode 9 Vector Images 用 PDF 文件代替 PNG@x 图片文件,使得使用方便</a></li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS国际化</title>
    <url>/2018/10/12/iOS%E5%9B%BD%E9%99%85%E5%8C%96/</url>
    <content><![CDATA[<h1 id="1-iOS-的国际化"><a href="#1-iOS-的国际化" class="headerlink" title="1.iOS 的国际化"></a>1.iOS 的国际化</h1><blockquote>
<p>参考:<a href="https://www.jianshu.com/p/f5e0d91a78ce">iOS-应用名称和内容国际化</a></p>
</blockquote>
<a id="more"></a>

<h2 id="1-iOS-的国际化有-名称国际化-，内容国际化"><a href="#1-iOS-的国际化有-名称国际化-，内容国际化" class="headerlink" title="1.iOS 的国际化有 名称国际化 ，内容国际化"></a>1.iOS 的国际化有 名称国际化 ，内容国际化</h2><h2 id="2-内容国际化分为-xib-storyboard-的国际化-，-m-文件的国际化"><a href="#2-内容国际化分为-xib-storyboard-的国际化-，-m-文件的国际化" class="headerlink" title="2.内容国际化分为: .xib/storyboard 的国际化 ，.m 文件的国际化"></a>2.内容国际化分为: .xib/storyboard 的国际化 ，.m 文件的国际化</h2><ul>
<li>1.下面详细说说 .m 文件的国际化,及其步骤:</li>
</ul>
<h3 id="3-m文件国际化的步骤"><a href="#3-m文件国际化的步骤" class="headerlink" title="3.m文件国际化的步骤"></a>3.m文件国际化的步骤</h3><ul>
<li>1.新建一个 繁体中文 的目录<img src="/assets/imgs/iOS/Snip20181012_5.png"></li>
<li>2.新建后，可以在项目的目录中看到新建了一个 <code>zh-Hant.lproj</code> 文件.<img src="/assets/imgs/iOS/Snip20181012_6.png"></li>
<li>3.如果是只要跟随系统语言的翻译，就可以直接用下面的代码去获取:<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSString *alertTitle &#x3D; NSLocalizedString(@&quot;BasicAlertTitle&quot;, @&quot;Basic Alert Style&quot;);</span><br></pre></td></tr></table></figure></li>
<li>4.如果系统的语言为 <code>en</code> ,但是我想 APP 显示 <code>zh-Hant</code> 中文繁体,可以这样设置:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSString *bundlePath &#x3D; [[NSBundle mainBundle] pathForResource:@&quot;zh-Hant&quot; ofType:@&quot;lproj&quot;];</span><br><span class="line"></span><br><span class="line">NSString *languageStr &#x3D; [[NSBundle bundleWithPath:bundlePath] localizedStringForKey:(key) value:nil table:@&quot;Localizable&quot;];</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS图形的描绘</title>
    <url>/2018/10/10/iOS%E5%9B%BE%E5%BD%A2%E7%9A%84%E6%8F%8F%E7%BB%98/</url>
    <content><![CDATA[<h1 id="1-简单线条的描绘"><a href="#1-简单线条的描绘" class="headerlink" title="1.简单线条的描绘"></a><a href="#simple_line">1.简单线条的描绘</a></h1><h1 id="2-简单的形状绘制"><a href="#2-简单的形状绘制" class="headerlink" title="2.简单的形状绘制"></a><a href="#simple_shape">2.简单的形状绘制</a></h1><h1 id="3-自定义-View"><a href="#3-自定义-View" class="headerlink" title="3.自定义 View"></a><a href="#custom_view">3.自定义 View</a></h1><a id="more"></a>

<hr>
<hr>
<hr>
<h1 id="1-简单线条的描绘-1"><a href="#1-简单线条的描绘-1" class="headerlink" title="1.简单线条的描绘"></a>1.简单线条的描绘<a name="simple_line"/></h1><h3 id="1-画一条直线-从点-10-10-到-100-100-的蓝色的线"><a href="#1-画一条直线-从点-10-10-到-100-100-的蓝色的线" class="headerlink" title="1.画一条直线(从点 (10,10) 到 (100,100) 的蓝色的线)"></a>1.画一条直线(从点 (10,10) 到 (100,100) 的蓝色的线)</h3><ul>
<li>1.先把笔头移到指定的位置.</li>
<li>2.再画一条线到指定的点.</li>
<li>3.设置线的宽度和颜色.<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (void)drawRect:(CGRect)rect &#123;</span><br><span class="line">    UIBezierPath *linePath &#x3D; [UIBezierPath bezierPath];</span><br><span class="line">    [linePath moveToPoint:CGPointMake(10.0, 10.0)];</span><br><span class="line">    [linePath addLineToPoint:CGPointMake(100.0, 100.0)];</span><br><span class="line">    linePath.lineWidth &#x3D; 3;</span><br><span class="line">    [[UIColor blueColor] setStroke];</span><br><span class="line">    [linePath stroke];</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<img src="/assets/imgs/iOS/ScreenShot_2018-10-10_13.55.10.png">

</li>
</ul>
<h3 id="2-画一条-sin-曲线"><a href="#2-画一条-sin-曲线" class="headerlink" title="2.画一条 sin 曲线."></a>2.画一条 sin 曲线.</h3><ul>
<li>0.<a href="https://www.jianshu.com/p/dbcf833eeaa2">iOS_三角函数</a></li>
<li>1.先理解 <code>弧长等于半径的圆弧所对应的圆心角为1弧度</code>,即 <code>角度 = 弧度 * (180/PI)</code>,<code>弧度 = 角度 * (PI/180)</code></li>
<li>2.iOS  中的 <code>double sin(double);</code> 函数中的参数是弧度,即 <code>sin(30*(M_PI/180))=0.5</code> <code>sin(90*(M_PI/180))=1</code></li>
<li>3.sin 曲线的形状<img src="/assets/imgs/iOS/sin_svg.png"></li>
<li>4.<a href="https://www.shuxuele.com/algebra/amplitude-period-frequency-phase-shift.html">sin 函数中的 <code>振幅 amplitude、周期 cycle、相移 hori_move 和频率 frequency</code> 概念的理解</a></li>
<li>5.了解了以上的那些，就可以开始描绘出我们的 <code>sin</code> 曲线了:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (void)drawRect:(CGRect)rect &#123;</span><br><span class="line">    </span><br><span class="line">    UIBezierPath *linePath &#x3D; [UIBezierPath bezierPath];</span><br><span class="line">    [linePath moveToPoint:CGPointMake(0, 100.0)];</span><br><span class="line">    </span><br><span class="line">    float amplitude &#x3D; 20;    &#x2F;&#x2F;振幅</span><br><span class="line">&#x2F;&#x2F;    float cycle &#x3D; 2*M_PI&#x2F;self.frame.size.width;&#x2F;&#x2F;self.frame.size.width&#x2F;(2*M_PI);        &#x2F;&#x2F; 一个周期为控件的宽度,弧度计算</span><br><span class="line">    float cycle &#x3D; 360 &#x2F; self.frame.size.width * 2;  &#x2F;&#x2F; 一个周期为 控件的宽度&#x2F;2 ,用角度计算</span><br><span class="line">    float hori_move &#x3D; 0;    &#x2F;&#x2F;相移为 0</span><br><span class="line">    float ver_move &#x3D; 100;   &#x2F;&#x2F;垂直位移为 100</span><br><span class="line">    </span><br><span class="line">    for (float x&#x3D;0.0; x&lt;self.frame.size.width; x++) &#123;</span><br><span class="line">        &#x2F;&#x2F;         float y &#x3D; amplitude * sin(cycle*x+hori_move) + ver_move; &#x2F;&#x2F;弧度计算</span><br><span class="line">        float y &#x3D; amplitude * sin(cycle * (x*(M_PI&#x2F;180))+hori_move) + ver_move; &#x2F;&#x2F;角度计算</span><br><span class="line">        [linePath addLineToPoint:CGPointMake(x, y)];</span><br><span class="line">    &#125;</span><br><span class="line">    linePath.lineWidth &#x3D; 1;</span><br><span class="line">    [[UIColor blueColor] setStroke];</span><br><span class="line">    [linePath stroke];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>6.效果图<ul>
<li>1.至于为什么波峰先向下，是因为手机屏幕的 Y 轴是倒转的. <img src="/assets/imgs/iOS/ScreenShot_2018-10-10_15.26.20.png">


</li>
</ul>
</li>
</ul>
<ul>
<li><p>7.如果是需要动图，如示波器那种，就只需一直增加 相移和定时更新 View 即可,如:</p>
<img src="/assets/imgs/iOS/wave7.gif">

<ul>
<li>1.相关的代码:</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F;  LineView.m</span><br><span class="line">&#x2F;&#x2F;  TestWaveView</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F;  Created by tian zeng on 2018&#x2F;10&#x2F;10.</span><br><span class="line">&#x2F;&#x2F;  Copyright © 2018年 GLB. All rights reserved.</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line"></span><br><span class="line">#import &quot;LineView.h&quot;</span><br><span class="line">@interface LineView()</span><br><span class="line">@property (nonatomic, strong) CADisplayLink *displayLink;</span><br><span class="line">@property (nonatomic,assign) CGFloat offsetX;</span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation LineView</span><br><span class="line"></span><br><span class="line">-(void)awakeFromNib&#123;</span><br><span class="line">    [super awakeFromNib];</span><br><span class="line">    self.backgroundColor &#x3D; [UIColor yellowColor];</span><br><span class="line">    [self addDisplayLinkAction];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (instancetype)initWithFrame:(CGRect)frame&#123;</span><br><span class="line">    if(self&#x3D;[super initWithFrame:frame])&#123;</span><br><span class="line">        self.backgroundColor &#x3D; [UIColor purpleColor];</span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (void)addDisplayLinkAction</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;添加到刷新的 LOOP 中，刷新的频率与屏幕刷新的频率一样</span><br><span class="line">    _displayLink &#x3D; [CADisplayLink displayLinkWithTarget:self selector:@selector(displayLinkAction)];</span><br><span class="line">    [_displayLink addToRunLoop:[NSRunLoop mainRunLoop] forMode:NSRunLoopCommonModes];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)displayLinkAction</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    _offsetX +&#x3D; 0.1;</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F;完成,移除刷新 LOOP</span><br><span class="line">    if (_offsetX &gt;&#x3D; 1000)  [self removeDisplayLinkAction];</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F; 通知更新 VIEW</span><br><span class="line">    [self setNeedsDisplay];</span><br><span class="line">&#125;</span><br><span class="line">- (void)removeDisplayLinkAction</span><br><span class="line">&#123;</span><br><span class="line">    [_displayLink invalidate];</span><br><span class="line">    _displayLink &#x3D; nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Only override drawRect: if you perform custom drawing.</span><br><span class="line">&#x2F;&#x2F; An empty implementation adversely affects performance during animation.</span><br><span class="line">- (void)drawRect:(CGRect)rect &#123;</span><br><span class="line">    </span><br><span class="line">    UIBezierPath *linePath &#x3D; [UIBezierPath bezierPath];</span><br><span class="line">    [linePath moveToPoint:CGPointMake(0, 100.0)];</span><br><span class="line">    </span><br><span class="line">    float amplitude &#x3D; 20;    &#x2F;&#x2F;振幅</span><br><span class="line">&#x2F;&#x2F;    float cycle &#x3D; 2*M_PI&#x2F;self.frame.size.width;&#x2F;&#x2F;self.frame.size.width&#x2F;(2*M_PI);        &#x2F;&#x2F; 一个周期为控件的宽度,弧度计算</span><br><span class="line">    float cycle &#x3D; 360 &#x2F; self.frame.size.width * 2;  &#x2F;&#x2F; 一个周期为 控件的宽度&#x2F;2 ,用角度计算</span><br><span class="line">    float hori_move &#x3D; 0;    &#x2F;&#x2F;相移为 0</span><br><span class="line">    float ver_move &#x3D; 100;   &#x2F;&#x2F;垂直位移为 100</span><br><span class="line">    </span><br><span class="line">    for (float x&#x3D;0.0; x&lt;self.frame.size.width; x++) &#123;</span><br><span class="line">        &#x2F;&#x2F;         float y &#x3D; amplitude * sin(cycle*x+hori_move+_offsetX) + ver_move; &#x2F;&#x2F;弧度计算</span><br><span class="line">        float y &#x3D; amplitude * sin(cycle * (x*(M_PI&#x2F;180))+hori_move+_offsetX) + ver_move; &#x2F;&#x2F;角度计算</span><br><span class="line">        [linePath addLineToPoint:CGPointMake(x, y)];</span><br><span class="line">    &#125;</span><br><span class="line">    linePath.lineWidth &#x3D; 1;</span><br><span class="line">    [[UIColor blueColor] setStroke];</span><br><span class="line">    [linePath stroke];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@end</span><br></pre></td></tr></table></figure>


<hr>
<h1 id="2-简单的形状绘制-1"><a href="#2-简单的形状绘制-1" class="headerlink" title="2.简单的形状绘制"></a>2.简单的形状绘制<a name="simple_shape"/></h1><ul>
<li>1.简单的三角形<ul>
<li>1.与线的不同主要为最后调用 <code>fill</code> 方法,会自动连接终点与起点，然后围成一个图形.</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">- (void)drawRect:(CGRect)rect &#123;</span><br><span class="line">    UIBezierPath *linePath &#x3D; [UIBezierPath bezierPath];</span><br><span class="line">    [linePath moveToPoint:CGPointMake(10, 10.0)];</span><br><span class="line">    [linePath addLineToPoint:CGPointMake(50, 10)];</span><br><span class="line">    [linePath addLineToPoint:CGPointMake(60, 112)];</span><br><span class="line">    [[UIColor blueColor] set];</span><br><span class="line">    [linePath fill];</span><br></pre></td></tr></table></figure>
<pre><code>* 2.效果图</code></pre>
<img src="/assets/imgs/iOS/ScreenShot_2018-10-10_16.28.50.png">

<ul>
<li>2.动态波浪图<ul>
<li>1.根据上一步的波浪线条，改装一下即可</li>
</ul>
</li>
</ul>
<img src="/assets/imgs/iOS/wave8.gif">
    * 2.相关的代码
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F;  LineView.m</span><br><span class="line">&#x2F;&#x2F;  TestWaveView</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line">&#x2F;&#x2F;  Created by tian zeng on 2018&#x2F;10&#x2F;10.</span><br><span class="line">&#x2F;&#x2F;  Copyright © 2018年 GLB. All rights reserved.</span><br><span class="line">&#x2F;&#x2F;</span><br><span class="line"></span><br><span class="line">#import &quot;ShapeView.h&quot;</span><br><span class="line">@interface ShapeView()</span><br><span class="line">@property (nonatomic, strong) CADisplayLink *displayLink;</span><br><span class="line">@property (nonatomic,assign) CGFloat offsetX;</span><br><span class="line">@property (nonatomic,assign) CGFloat offsetY;</span><br><span class="line">@end</span><br><span class="line"></span><br><span class="line">@implementation ShapeView</span><br><span class="line"></span><br><span class="line">-(void)awakeFromNib&#123;</span><br><span class="line">    [super awakeFromNib];</span><br><span class="line">    self.backgroundColor &#x3D; [UIColor yellowColor];</span><br><span class="line">    _offsetY &#x3D; 100;</span><br><span class="line">    [self addDisplayLinkAction];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (instancetype)initWithFrame:(CGRect)frame&#123;</span><br><span class="line">    if(self&#x3D;[super initWithFrame:frame])&#123;</span><br><span class="line">        self.backgroundColor &#x3D; [UIColor purpleColor];</span><br><span class="line">    &#125;</span><br><span class="line">    return self;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">- (void)addDisplayLinkAction</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;添加到刷新的 LOOP 中，刷新的频率与屏幕刷新的频率一样</span><br><span class="line">    _displayLink &#x3D; [CADisplayLink displayLinkWithTarget:self selector:@selector(displayLinkAction)];</span><br><span class="line">    [_displayLink addToRunLoop:[NSRunLoop mainRunLoop] forMode:NSRunLoopCommonModes];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)displayLinkAction</span><br><span class="line">&#123;</span><br><span class="line">    </span><br><span class="line">    _offsetX +&#x3D; 0.1;</span><br><span class="line">    _offsetY -&#x3D; 0.1;</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F;完成,移除刷新 LOOP</span><br><span class="line">    if (_offsetX &gt;&#x3D; 1000||_offsetY&lt;0)&#123;</span><br><span class="line">        [self removeDisplayLinkAction];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#x2F;&#x2F; 通知更新 VIEW</span><br><span class="line">    [self setNeedsDisplay];</span><br><span class="line">&#125;</span><br><span class="line">- (void)removeDisplayLinkAction</span><br><span class="line">&#123;</span><br><span class="line">    [_displayLink invalidate];</span><br><span class="line">    _displayLink &#x3D; nil;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; Only override drawRect: if you perform custom drawing.</span><br><span class="line">&#x2F;&#x2F; An empty implementation adversely affects performance during animation.</span><br><span class="line">- (void)drawRect:(CGRect)rect &#123;</span><br><span class="line">    </span><br><span class="line">    UIBezierPath *linePath &#x3D; [UIBezierPath bezierPath];</span><br><span class="line">    [linePath moveToPoint:CGPointMake(0, _offsetY)];</span><br><span class="line">    </span><br><span class="line">    float amplitude &#x3D; 10;    &#x2F;&#x2F;振幅</span><br><span class="line">    &#x2F;&#x2F;    float cycle &#x3D; 2*M_PI&#x2F;self.frame.size.width;&#x2F;&#x2F;self.frame.size.width&#x2F;(2*M_PI);        &#x2F;&#x2F; 一个周期为控件的宽度,弧度计算</span><br><span class="line">    float cycle &#x3D; 360 &#x2F; self.frame.size.width * 5;  &#x2F;&#x2F; 一个周期为 控件的宽度&#x2F;2 ,用角度计算</span><br><span class="line">    float hori_move &#x3D; 0;    &#x2F;&#x2F;相移为 0</span><br><span class="line">&#x2F;&#x2F;    float ver_move &#x3D; 100;   &#x2F;&#x2F;垂直位移为 100</span><br><span class="line"></span><br><span class="line">    for (float x&#x3D;0.0; x&lt;self.frame.size.width; x++) &#123;</span><br><span class="line">        &#x2F;&#x2F;         float y &#x3D; amplitude * sin(cycle*x+hori_move+_offsetX) + ver_move; &#x2F;&#x2F;弧度计算</span><br><span class="line">        float y &#x3D; amplitude * sin(cycle * (x*(M_PI&#x2F;180))+hori_move+_offsetX) + _offsetY; &#x2F;&#x2F;角度计算</span><br><span class="line">        [linePath addLineToPoint:CGPointMake(x, y)];</span><br><span class="line">    &#125;</span><br><span class="line">    [linePath addLineToPoint:CGPointMake(self.frame.size.width, self.frame.size.height)];</span><br><span class="line">    [linePath addLineToPoint:CGPointMake(0, self.bounds.size.height)];</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    [[UIColor blueColor] set];</span><br><span class="line">    [linePath fill];</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@end</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h1 id="3-自定义-View-1"><a href="#3-自定义-View-1" class="headerlink" title="3.自定义 View"></a>3.自定义 View<a name="custom_view"/></h1><ul>
<li>1.让自定义 View 可以在 <code>Interface Builder</code> 中查看及实时编辑.<ul>
<li><a href="https://useyourloaf.com/blog/ib-designable-custom-views-in-interface-builder/">1.IB_DESIGNABLE Custom Views in Interface Builder</a><ul>
<li><a href="https://github.com/kharrison/CodeExamples/tree/master/Designable">1.Source Code</a></li>
</ul>
</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS地图</title>
    <url>/2018/09/11/iOS%E5%9C%B0%E5%9B%BE/</url>
    <content><![CDATA[<blockquote>
<p>记录 iOS 地图开发相关的知识</p>
</blockquote>
<a id="more"></a>
<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a><a href="#references">1.参考</a></h2><h2 id="2-Google-Map"><a href="#2-Google-Map" class="headerlink" title="2.Google Map"></a><a href="#google_map">2.Google Map</a></h2><h2 id="3-国内国外地图切换"><a href="#3-国内国外地图切换" class="headerlink" title="3.国内国外地图切换"></a><a href="#map_switch">3.国内国外地图切换</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考:"></a>1.参考:<a name="references"/></h2><ul>
<li><a href="https://zhuanlan.zhihu.com/p/22057348">1.App定位和地图的那些坑</a></li>
<li><a href="https://www.jianshu.com/p/fc9dcf0a5d6e">2.iOS地图MapKit和定位CoreLocation(上) </a></li>
<li><a href="https://www.jianshu.com/p/9b44b05b9b5f">3.iOS 火星坐标相关整理及解决方案汇总</a></li>
<li><a href="https://lbs.amap.com/dev/demo/switch-map#Android">4.高德:国内国外地图切换</a></li>
</ul>
<hr>
<h2 id="2-Google-Map-1"><a href="#2-Google-Map-1" class="headerlink" title="2.Google Map"></a>2.Google Map<a name="google_map"/></h2><blockquote>
<p><a href="https://developers.google.com/maps/documentation/ios-sdk/start">参考: https://developers.google.com/maps/documentation/ios-sdk/start</a></p>
</blockquote>
<ul>
<li><p>1.下载 并安装Google Map Demo</p>
<ul>
<li><a href="https://github.com/googlemaps/maps-sdk-for-ios-samples">1.下载源码:https://github.com/googlemaps/maps-sdk-for-ios-samples</a></li>
</ul>
<p>  2.用 Pod 下载 Google SDK 并打开</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ cd GoogleMaps</span><br><span class="line">$ pod install</span><br><span class="line">$ open GoogleMapsDemos.xcworkspace</span><br></pre></td></tr></table></figure>

</li>
</ul>
<p>3.写入 API KEY</p>
<hr>
<h2 id="3-国内国外地图切换-1"><a href="#3-国内国外地图切换-1" class="headerlink" title="3.国内国外地图切换"></a>3.国内国外地图切换<a name="map_switch"/></h2><ul>
<li><a href="https://lbs.amap.com/dev/demo/switch-map#iOS">1.高德地图/苹果地图 切换的例子</a></li>
<li><a href="https://lbs.amap.com/api/ios-location-sdk/guide/additional-func/amap-calculate-tool">2.高德:位置区域判断</a></li>
</ul>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS多包名打包</title>
    <url>/2018/11/18/iOS%E5%A4%9A%E5%8C%85%E5%90%8D%E6%89%93%E5%8C%85/</url>
    <content><![CDATA[<h2 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a><a href="#background_ifo">1.背景</a></h2><a id="more"></a>
<h2 id="2-在-workspace-下建立多个-Projects"><a href="#2-在-workspace-下建立多个-Projects" class="headerlink" title="2.在 workspace 下建立多个 Projects"></a><a href="#multi_project">2.在 workspace 下建立多个 Projects</a></h2><h2 id="3-根据环境的不同，打包多个版本的-app"><a href="#3-根据环境的不同，打包多个版本的-app" class="headerlink" title="3.根据环境的不同，打包多个版本的 app"></a><a href="#multi_configuration">3.根据环境的不同，打包多个版本的 app</a></h2><h2 id="4-根据环境不同，新建多个-Target"><a href="#4-根据环境不同，新建多个-Target" class="headerlink" title="4.根据环境不同，新建多个 Target"></a><a href="#multi_target">4.根据环境不同，新建多个 Target</a></h2><h2 id="5-相关的源码地址为"><a href="#5-相关的源码地址为" class="headerlink" title="5.相关的源码地址为:"></a>5.相关的源码地址为:</h2><ul>
<li>1.<a href="git@github.com:ghzjtian/generated_multi_iOS.git">https://github.com/ghzjtian/generated_multi_iOS</a></li>
</ul>
<h2 id="6-多人共用一个证书"><a href="#6-多人共用一个证书" class="headerlink" title="6.多人共用一个证书"></a><a href="#multi_user_public">6.多人共用一个证书</a></h2><hr>
<hr>
<hr>
<h2 id="1-背景-1"><a href="#1-背景-1" class="headerlink" title="1.背景"></a>1.背景<a name="background_ifo"/></h2><ul>
<li>1.相同的 <code>Project</code> 源码 ,想要打包多个 APP , APP 间有 icon,主题，相关的 label 的不同，其他的逻辑代码都一样.</li>
</ul>
<hr>
<h2 id="2-在-workspace-下建立多个-Projects-1"><a href="#2-在-workspace-下建立多个-Projects-1" class="headerlink" title="2.在 workspace 下建立多个 Projects"></a>2.在 workspace 下建立多个 Projects<a name="multi_project"/></h2><h4 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考:"></a>1.参考:</h4><ul>
<li><a href="https://www.jianshu.com/p/e3cfae830985">1.iOS用workspace和cocoapods管理多个项目</a></li>
</ul>
<hr>
<h2 id="3-根据环境的不同，打包多个版本的-app-1"><a href="#3-根据环境的不同，打包多个版本的-app-1" class="headerlink" title="3.根据环境的不同，打包多个版本的 app"></a>3.根据环境的不同，打包多个版本的 app<a name="multi_configuration"/></h2><h4 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考:"></a>1.参考:</h4><ul>
<li>1.<a href="https://medium.com/@kavithakumarasamy89/xcode-build-settings-user-defined-settings-manage-multiple-environments-with-single-target-3e5c1a307999">Xcode Build Settings — User Defined Settings — iOS Manage multiple configuration and environments with Single target</a></li>
</ul>
<h4 id="2-详细的过程"><a href="#2-详细的过程" class="headerlink" title="2.详细的过程:"></a>2.详细的过程:</h4><ul>
<li>1.先添加一个 <code>配置环境</code> <ul>
<li>1.如这里就在  <code>Project/Info</code> 的 <code>Configurations</code> 下,添加了一个 <code>Testing</code> 测试环境的配置.</li>
</ul>
</li>
</ul>
<img src="/assets/imgs/iOS/multi_package/Snip20181119_11.png" width="70%" height="70%">

<ul>
<li><p>2.在 <code>Target/BuildSettings</code> 下添加用户自定义的信息.</p>
<ul>
<li>1.在 <code>APP/TARGETS/Build Settings</code> 中，添加一个 <code>User-Defined Settings</code>,如这里就添加了 <code>mAPP_BUILD_NUMBER</code>,<code>mAPP_BUNDLE_IDNETIFIER</code>,<code>mAPP_SERVER_URL</code> 等等的信息资料.</li>
</ul>
</li>
</ul>
<img src="/assets/imgs/iOS/multi_package/Snip20181119_10.png" width="70%" height="70%">

<ul>
<li>3.在 <code>Info.plist</code> 中，把相关的在 <code>BuildSettings</code> 下的设置做关联:</li>
</ul>
<img src="/assets/imgs/iOS/multi_package/Snip20181119_13.png" width="70%" height="70%">

<ul>
<li>4.同理在 <code>TARGETS/General/Identity </code> 下也一样要与 <code>BuildSettings </code> 关联:</li>
</ul>
<img src="/assets/imgs/iOS/multi_package/Snip20181119_5.png" width="70%" height="70%">

<pre><code>* 注意 `Bundle Identifier` 在这里关联没用，要在 `Build Settings/Product Bundle Identifier` 做关联才行 !! 如下图:</code></pre>
<img src="/assets/imgs/iOS/multi_package/Snip20181119_2.png" width="70%" height="70%">
<img src="/assets/imgs/iOS/multi_package/Snip20181119_14.png" width="70%" height="70%">

<pre><code>* 可以看到有所改变，如果没有的话，点去其他页面再点回来，这样刷新一下即可</code></pre>
<img src="/assets/imgs/iOS/multi_package/Snip20181119_8.png" width="70%" height="70%">

<ul>
<li>5.在 <code>ViewController</code> 中，获取设置的值:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">NSBundle *bundle &#x3D; [NSBundle mainBundle];</span><br><span class="line"> &#x2F;&#x2F;bundle identifier</span><br><span class="line"> NSString *bundleIdentifier &#x3D; [bundle bundleIdentifier];</span><br><span class="line"> &#x2F;&#x2F;display name</span><br><span class="line"> NSString *displayName &#x3D; [bundle objectForInfoDictionaryKey:@&quot;CFBundleDisplayName&quot;];</span><br><span class="line"> &#x2F;&#x2F;Version String</span><br><span class="line"> NSString *versionStr &#x3D; [bundle objectForInfoDictionaryKey:@&quot;CFBundleShortVersionString&quot;];</span><br><span class="line"> &#x2F;&#x2F;Version Build number</span><br><span class="line"> NSString *buildNumber &#x3D; [bundle objectForInfoDictionaryKey:@&quot;CFBundleVersion&quot;];</span><br><span class="line"> &#x2F;&#x2F;APP SERVER URL</span><br><span class="line"> NSString *serverUrl &#x3D; [bundle objectForInfoDictionaryKey:@&quot;ServerURL&quot;];</span><br><span class="line">  </span><br><span class="line"> _titleLb.text&#x3D;[NSString stringWithFormat:@&quot;%@&quot;,displayName];</span><br><span class="line"> _showLb.text &#x3D; [NSString stringWithFormat:@&quot;bundle ID:%@,\nversionStr:%@,\nbuildNumber:%@,\nserverUrl:%@&quot;,bundleIdentifier,versionStr,buildNumber,serverUrl];</span><br><span class="line"> </span><br><span class="line"> NSLog(@&quot;bundle ID:%@,\ndisplayName:%@,\nversionStr:%@,\nbuildNumber:%@,\nserverUrl:%@&quot;,bundleIdentifier,displayName,versionStr,buildNumber,serverUrl);</span><br><span class="line"> </span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>6.在运行前，先到 <code>Edit Scheme</code> 中，选择不同的 <code>Build Configuration</code>,然后运行查看效果图:</li>
</ul>
<img src="/assets/imgs/iOS/multi_package/Snip20181119_6.png" width="70%" height="70%">
<img src="/assets/imgs/iOS/multi_package/Snip20181119_7.png" width="70%" height="70%">
    * 在手机上的效果图
<img src="/assets/imgs/iOS/multi_package/Snip20181119_19.png" width="70%" height="70%">
        *  ~
<img src="/assets/imgs/iOS/multi_package/Snip20181119_16.png" width="70%" height="70%">
        *  ~
<img src="/assets/imgs/iOS/multi_package/Snip20181119_17.png" width="70%" height="70%">
        *  ~
<img src="/assets/imgs/iOS/multi_package/Snip20181119_18.png" width="70%" height="70%">



<hr>
<h2 id="4-根据环境不同，新建多个-Target-1"><a href="#4-根据环境不同，新建多个-Target-1" class="headerlink" title="4.根据环境不同，新建多个 Target"></a>4.根据环境不同，新建多个 Target<a name="multi_target"/></h2><blockquote>
<p>上一步基本结决了不同的环境下，释放出不同的 APP (如 Debug,Test,Release) 版本，但是如果是想要改变不同的 icon,device orientation 等等的参数，可能就后劲不足了,下面主要讲解通过新建 <code>Target</code> 解决这种问题.</p>
</blockquote>
<h4 id="1-参考-2"><a href="#1-参考-2" class="headerlink" title="1.参考:"></a>1.参考:</h4><ul>
<li><a href="https://medium.com/@andersongusmao/xcode-targets-with-multiples-build-configuration-90a575ddc687">1.Xcode “Targets” with multiple build configurations</a><ul>
<li>1.<a href="https://github.com/heuristisk/hkScopum">相关的 Source code</a></li>
</ul>
</li>
</ul>
<h4 id="2-步骤"><a href="#2-步骤" class="headerlink" title="2.步骤:"></a>2.步骤:</h4><ul>
<li>1.右键点击,新建一个 <code>Target</code> 为 <code>Green</code></li>
</ul>
<img src="/assets/imgs/iOS/multi_package/Snip20181119_22.png" width="70%" height="70%">

<ul>
<li>2.设置 <code>Green</code> 的 <code>General</code> 和  <code>Build Settings</code> 的信息:</li>
</ul>
<img src="/assets/imgs/iOS/multi_package/Snip20181119_13.png" width="70%" height="70%">
<img src="/assets/imgs/iOS/multi_package/Snip20181119_30.png" width="70%" height="70%">
<img src="/assets/imgs/iOS/multi_package/Snip20181119_31.png" width="70%" height="70%">

<ul>
<li>3.效果图:</li>
</ul>
<img src="/assets/imgs/iOS/multi_package/Snip20181119_29.png" width="70%" height="70%">

<hr>
<img src="/assets/imgs/iOS/multi_package/Snip20181119_26.png" width="70%" height="70%">

<hr>
<img src="/assets/imgs/iOS/multi_package/Snip20181119_27.png" width="70%" height="70%">

<hr>
<img src="/assets/imgs/iOS/multi_package/Snip20181119_28.png" width="70%" height="70%">

<ul>
<li>4.如果需要在代码中判断是哪个 APP ,可以设置一个 <code>Macro</code> ,然后在需要的地方判断即可,如:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;定义一个判断的 宏</span><br><span class="line">#define IS_GREEN_APP [[[NSBundle mainBundle] bundleIdentifier] containsString:@&quot;com.glb.Green&quot;]</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;在有需要的地方判断</span><br><span class="line">if(IS_GREEN_APP)&#123;</span><br><span class="line">    NSLog(@&quot;The APP is Green Guide APP&quot;);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    NSLog(@&quot;The APP is Cramer APP&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="6-多人共用一个证书-1"><a href="#6-多人共用一个证书-1" class="headerlink" title="6.多人共用一个证书"></a>6.多人共用一个证书<a name="multi_user_public"/></h2><ul>
<li>1.参考 <a href="https://www.jianshu.com/p/837d64356dac">如何导出 p12 文件</a></li>
<li>2.通过安装了导出来的 <code>.p12</code> 文件，即可在本电脑打包并发布 APP. </li>
</ul>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>iOS 问题及解决</title>
    <url>/2018/11/12/iOS%E9%97%AE%E9%A2%98%E5%8F%8A%E8%A7%A3%E5%86%B3/</url>
    <content><![CDATA[<h2 id="1-遇到的问题"><a href="#1-遇到的问题" class="headerlink" title="1.遇到的问题"></a>1.遇到的问题</h2><a id="more"></a>

<h2 id="1-遇到的问题-1"><a href="#1-遇到的问题-1" class="headerlink" title="1.遇到的问题"></a>1.遇到的问题</h2><h4 id="1-动态设置-ScrollView-滚动的高度"><a href="#1-动态设置-ScrollView-滚动的高度" class="headerlink" title="1.动态设置 ScrollView 滚动的高度"></a>1.<a href="https://www.jianshu.com/p/400fa268c2c8">动态设置 ScrollView 滚动的高度</a></h4><ul>
<li>1.遇到了在 <code>Storyboard</code> 中添加了 <code>ScrollView</code> 和相应的 <code>contentView</code>,并设置了 <code>contentView</code> 的约束的高度,但这样是固定的高度，不会动态改变高度.<ul>
<li>1.在代码中设置下面这样，就解决了动态适配高度的问题:</li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">-(void)viewDidAppear:(BOOL)animated&#123;</span><br><span class="line">    [super viewDidAppear:animated];</span><br><span class="line">     &#x2F;&#x2F;[动态设置 ScrollView 滚动的高度]( https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;400fa268c2c8 )</span><br><span class="line">     &#x2F;&#x2F; _next_bt 为最底下的一个控件</span><br><span class="line">    CGFloat height &#x3D; _next_bt.frame.origin.y+_next_bt.frame.size.height+44;</span><br><span class="line">    _contentViewHC.constant &#x3D; height;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h4 id="2-导航栏显示和隐藏的坑-https-www-jianshu-com-p-60e2369bbe0e"><a href="#2-导航栏显示和隐藏的坑-https-www-jianshu-com-p-60e2369bbe0e" class="headerlink" title="2.[导航栏显示和隐藏的坑] ( https://www.jianshu.com/p/60e2369bbe0e )"></a>2.[导航栏显示和隐藏的坑] ( <a href="https://www.jianshu.com/p/60e2369bbe0e">https://www.jianshu.com/p/60e2369bbe0e</a> )</h4><ul>
<li>1.在没有 <code>Navigation bar</code> 的页面 push 到有 <code>Navigation bar</code> 的页面，然后按返回,会发生突然不见 <code>Navigation bar</code> 的现象,解决如下.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">-(void)viewWillAppear:(BOOL)animated&#123;</span><br><span class="line">    [super viewWillAppear:animated];</span><br><span class="line">    &#x2F;&#x2F;显示导航条,</span><br><span class="line">    &#x2F;&#x2F;[导航栏显示和隐藏的坑] ( https:&#x2F;&#x2F;www.jianshu.com&#x2F;p&#x2F;60e2369bbe0e )</span><br><span class="line">    [self.navigationController setNavigationBarHidden:NO animated:animated];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>iOS</category>
      </categories>
      <tags>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title>laravel项目的部署</title>
    <url>/2018/07/23/laravel%E9%A1%B9%E7%9B%AE%E7%9A%84%E9%83%A8%E7%BD%B2/</url>
    <content><![CDATA[<h1 id="laravel项目的部署"><a href="#laravel项目的部署" class="headerlink" title="laravel项目的部署"></a>laravel项目的部署</h1><ul>
<li>1.记录把服务器部署在 远程服务器的过程.</li>
</ul>
<a id="more"></a>


<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a><a href="#references">1.参考</a></h2><h2 id="2-安装过程"><a href="#2-安装过程" class="headerlink" title="2.安装过程"></a><a href="#install_step">2.安装过程</a></h2><ul>
<li>1.mysql 的安装(安装最新版)</li>
</ul>
<h2 id="3-遇到的问题"><a href="#3-遇到的问题" class="headerlink" title="3.遇到的问题"></a><a href="#issues">3.遇到的问题</a></h2><ul>
<li>1.<code>Specified key was too long error</code>错误</li>
<li>2.<code>public/index.php</code>主页显示没问题, 但 <code>login</code>,<code>register</code> 等等就显示 <code>404</code> 错误</li>
</ul>
<h2 id="4-项目的部署"><a href="#4-项目的部署" class="headerlink" title="4.项目的部署"></a><a href="#project_install">4.项目的部署</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考:"></a>1.参考:<a name="references"/></h2><ul>
<li>0.服务器(配置支持中文)需要安装的软件(nginx+php+mysql+composer+git+PhpMyAdmin)</li>
<li>1.<a href="https://www.jianshu.com/p/6038191ef4fe">LAMP环境下的Laravel项目部署</a></li>
<li><a href="https://www.zhihu.com/question/35537084">2.请问laravel5项目部署到生产环境的最佳实践？</a></li>
<li><a href="https://www.rosehosting.com/blog/how-to-install-laravel-on-debian-9/">3.How to Install Laravel on Debian 9</a></li>
<li><a href="https://hackernoon.com/a-step-by-step-guide-to-setup-php-laravel-environment-linux-50b55a4fd15e">4.A step by step guide to setup PHP (Laravel) environment (Linux).</a></li>
<li><a href="https://laravel-china.org/articles/5012/gitlab-webhooks-implements-automated-server-project-deployment">5.【GitLab】：Webhooks 实现自动化服务器项目部署</a></li>
<li><a href="https://medium.com/@grmcameron/deploying-your-laravel-web-app-1faaa66f3302">6.Deploying a Laravel 5.6 Web App on Ubuntu</a></li>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-use-composer-on-debian-8">7.How To Install and Use Composer on Debian 8</a></li>
</ul>
<hr>
<h2 id="2-安装过程-1"><a href="#2-安装过程-1" class="headerlink" title="2.安装过程"></a>2.安装过程<a name="install_step"/></h2><h4 id="1-mysql-的安装-安装最新版"><a href="#1-mysql-的安装-安装最新版" class="headerlink" title="1.mysql 的安装(安装最新版)."></a>1.mysql 的安装(安装最新版).</h4><ul>
<li><a href="https://www.linode.com/docs/databases/mariadb/mariadb-setup-debian/">1.How to Set Up MariaDB on Debian 9</a></li>
<li><a href="https://www.tecmint.com/install-mariadb-in-ubuntu-and-debian/">2.How to Install MariaDB 10 on Debian and Ubuntu</a></li>
<li><a href="https://www.londonappdeveloper.com/how-to-completely-uninstall-mariadb-from-a-debian-7-server/">3.uninstall MariaDB</a></li>
<li><a href="https://www.jianshu.com/p/8fc90e518e2c">4.开启远程访问的权限</a><ul>
<li>1.在服务器端进入 mysql ,然后运行命令 <code>grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;remove1112300&#39;;</code> , <code>flush privileges;</code></li>
<li>2.注释文件 <code> vi /etc/mysql/my.cnf</code>  中的 <code>bind-address = 127.0.0.1</code><ul>
<li>1.如果是 MariaDB, <code>bind-address</code> 在 <code>/etc/mysql/mariadb.conf.d/50-server.cnf</code>处</li>
<li>2.参考: <a href="https://dba.stackexchange.com/questions/164929/where-is-my-bind-address/164932">Where is my bind address?</a></li>
<li>3.记得提前查看 mysql 端口的状态是否在监听 3306,<code>netstat -tulpen</code>.</li>
</ul>
</li>
<li>3.重启服务. <code>service mysql restart</code></li>
</ul>
</li>
</ul>
<h4 id="2-PHP-的安装"><a href="#2-PHP-的安装" class="headerlink" title="2.PHP 的安装."></a>2.PHP 的安装.</h4><ul>
<li>0.参考: <ul>
<li>   1.<a href="https://medium.com/@asked_io/how-to-install-php-7-2-x-nginx-1-10-x-laravel-5-6-f9e30ee30eff">How-to Install PHP 7.2.x, NGINX 1.10.x &amp; Laravel 5.6</a></li>
<li>2.<a href="https://www.chris-shaw.com/blog/installing-php-7.2-on-debian-8-jessie-and-debian-9-stretch">Installing Php 7.2 On Debian 8 Jessie And Debian 9 Stretch</a></li>
</ul>
</li>
<li>1.需要安装的 php 的插件有:<ul>
<li>1.<code>php7.0-zip</code></li>
<li>2.<code>php7.2-gd</code></li>
<li>3.<code>php7.2-fpm</code></li>
</ul>
</li>
</ul>
<hr>
<h2 id="3-遇到的问题-1"><a href="#3-遇到的问题-1" class="headerlink" title="3.遇到的问题"></a>3.遇到的问题<a name="issues"/></h2><h4 id="1-服务器做-php-artisan-migrate-时，出现-Specified-key-was-too-long-error-错误"><a href="#1-服务器做-php-artisan-migrate-时，出现-Specified-key-was-too-long-error-错误" class="headerlink" title="1.服务器做 php artisan migrate 时，出现 Specified key was too long error 错误"></a>1.服务器做 <code>php artisan migrate</code> 时，出现 <code>Specified key was too long error</code> 错误</h4><ul>
<li><a href="https://laravel-news.com/laravel-5-4-key-too-long-error">解决方法1:Laravel 5.4: Specified key was too long error</a></li>
<li><a href="https://segmentfault.com/a/1190000008416200">同样的方法2:</a></li>
<li>3.安装新版的 mariaDB(经测试，10.3.8-MariaDB 可以)</li>
</ul>
<h4 id="2-public-index-php主页显示没问题-但-login-register-等等就显示-404-错误"><a href="#2-public-index-php主页显示没问题-但-login-register-等等就显示-404-错误" class="headerlink" title="2.public/index.php主页显示没问题, 但 login,register 等等就显示 404 错误"></a>2.<code>public/index.php</code>主页显示没问题, 但 <code>login</code>,<code>register</code> 等等就显示 <code>404</code> 错误</h4><ul>
<li><a href="https://laravel-china.org/docs/laravel/5.6/installation/1352">1.配置链接</a><ul>
<li>1.需要把 <code>/etc/nginx/sites-available/default</code> 中的 <code>root</code>路径设置到 <code>public</code> 中.    </li>
</ul>
</li>
</ul>
<h4 id="3-执行-composer-install-时，遇到-composer-the-zip-extension-and-unzip-command-are-both-missing-skipping-的问题"><a href="#3-执行-composer-install-时，遇到-composer-the-zip-extension-and-unzip-command-are-both-missing-skipping-的问题" class="headerlink" title="3.执行 composer install  时，遇到 composer the zip extension and unzip command are both missing skipping 的问题"></a>3.执行 <code>composer install </code> 时，遇到 <code>composer the zip extension and unzip command are both missing skipping</code> 的问题</h4><ul>
<li><a href="https://stackoverflow.com/questions/41274829/php-error-the-zip-extension-and-unzip-command-are-both-missing-skipping">1.解决方法<code>(sudo) apt install zip unzip php7.0-zip</code></a></li>
</ul>
<h4 id="4-只能显示首页，其它页面显示-404-ERROR。"><a href="#4-只能显示首页，其它页面显示-404-ERROR。" class="headerlink" title="4.只能显示首页，其它页面显示 404 ERROR。"></a>4.只能显示首页，其它页面显示 <code>404 ERROR</code>。</h4><ul>
<li><a href="https://laravel-china.org/docs/laravel/5.6/deployment/1357">1.需要配置 nginx 的 <code>/etc/nginx/sites-available/default</code> 文件(先 cp 备份好)</a><ul>
<li>1.配置完成后，重启 <code>nginx</code>.<ul>
<li>1.检查是否有错误,<code>nginx -t</code>.</li>
<li>2.重启 <code>nginx</code>,<code>service nginx restart</code></li>
</ul>
</li>
</ul>
</li>
</ul>
<h4 id="5-在后台增加图片时，显示Impossible-to-create-the-root-directory-quot-home-tian-www-html-frontend-storage-app-public-users-August2018-quot"><a href="#5-在后台增加图片时，显示Impossible-to-create-the-root-directory-quot-home-tian-www-html-frontend-storage-app-public-users-August2018-quot" class="headerlink" title="5.在后台增加图片时，显示Impossible to create the root directory &quot;/home/tian/www/html/frontend/storage/app/public/users/August2018&quot;."></a>5.在后台增加图片时，显示<code>Impossible to create the root directory &quot;/home/tian/www/html/frontend/storage/app/public/users/August2018&quot;.</code></h4><ul>
<li>1.在 项目的上级目录下，如 <code>/home/tian/www/html</code> , 运行一下命令: <code>chown -R www-data:root .</code></li>
</ul>
<h4 id="6-在运行-composer-install-时，出现-mmap-failed-12-Cannot-allocate-memory-错误"><a href="#6-在运行-composer-install-时，出现-mmap-failed-12-Cannot-allocate-memory-错误" class="headerlink" title="6.在运行 composer install 时，出现 mmap() failed: [12] Cannot allocate memory 错误"></a>6.在运行 <code>composer install</code> 时，出现 <code>mmap() failed: [12] Cannot allocate memory</code> 错误</h4><ul>
<li>1.<a href="https://stackoverflow.com/questions/18116261/php-composer-update-cannot-allocate-memory-error-using-laravel-4">PHP Composer update “cannot allocate memory” error </a><ul>
<li>解决的方法，运行 <figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;bin&#x2F;dd if&#x3D;&#x2F;dev&#x2F;zero of&#x3D;&#x2F;var&#x2F;swap.1 bs&#x3D;1M count&#x3D;1024</span><br><span class="line">&#x2F;sbin&#x2F;mkswap &#x2F;var&#x2F;swap.1</span><br><span class="line">&#x2F;sbin&#x2F;swapon &#x2F;var&#x2F;swap.1</span><br></pre></td></tr></table></figure>



</li>
</ul>
</li>
</ul>
<hr>
<h2 id="4-项目的部署-1"><a href="#4-项目的部署-1" class="headerlink" title="4.项目的部署"></a>4.项目的部署<a name="project_install"/></h2><ul>
<li><p>1.把代码放到 <code>GitLab</code> 中(因为 <code>GitLab</code> 可以创建私人的仓库,而且日本服务器 <code>clone</code> 的速度比国内的 <code>Gitee</code> 快 n 倍)</p>
</li>
<li><p>2.把 <code>nginx</code> 的 <code>root</code> 路径改为当前 laravel 项目的 public 目录.</p>
<ul>
<li>1.<code>vi /etc/nginx/sites-available/default</code></li>
<li>2.修改 <code>root /var/www/html/FastCloud_Server/public/</code></li>
<li>3.重启 <code>nginx</code>(记得 nginx 要有 phpXX-fpm 的支持才行)<ul>
<li>1.<code>nginx -t</code></li>
<li><pre><code>2.`service nginx restart`</code></pre>
</li>
</ul>
</li>
</ul>
</li>
<li><p>3.到项目路径下，执行 <code>composer install</code>,安装依赖.</p>
<ul>
<li>1.国内的服务器，最好是更改 <code>composer</code> 的源:<ul>
<li>1.<a href="https://pkg.phpcomposer.com/">Packagist 镜像使用方法</a><ul>
<li>1.运行 <code>composer config -g repo.packagist composer https://packagist.phpcomposer.com</code></li>
</ul>
</li>
<li>2.<a href="https://laravel-china.org/composer">Composer 中文镜像 / Packagist 中国全量镜像正式发布！</a><ul>
<li>1.运行: <code>composer config -g repo.packagist composer https://packagist.laravel-china.org</code></li>
</ul>
</li>
</ul>
</li>
<li>2.如果是在本地 Mac 下运行出现 <code>In PDOConnection.php line 50:SQLSTATE[HY000] [2002] Connection refused </code> ,就记得打开 Mac 上的 <code>Mysql</code>,否则后续的操作可能会出现问题.</li>
</ul>
</li>
<li><p>4.部署配置</p>
<ul>
<li><p>1.生成 <code>.env</code> 文件    ,命令: <code>cp .env.example.product .env</code></p>
</li>
<li><p>2.生成 <code>APP_KEY</code> ,命令: <code>php artisan key:generate</code></p>
</li>
<li><p>3.设置文件夹的权限:</p>
<p>  <code>chmod -R 777 storage</code><br>  <code>chmod -R 777 bootstrap/cache</code></p>
</li>
<li><p>4.运行数据库的迁移:</p>
<ul>
<li>1.<code>php artisan migrate</code></li>
</ul>
</li>
<li><p>5.安装 voyager</p>
<ul>
<li>1.安装<code>php artisan voyager:install --with-dummy</code></li>
</ul>
</li>
<li><p>6.设置 <code>storage</code> 连接.</p>
<ul>
<li>0.到服务器项目目录运行: <code>php artisan storage:link</code></li>
<li>1.或手动链接: <code>ln -s /var/www/html/FastCloud_Server/storage/app/public /var/www/html/FastCloud_Server/public/storage</code> </li>
</ul>
</li>
<li><p>7.<a href="http://jwt-auth.readthedocs.io/en/develop/laravel-installation/">生成 JWT 认证的 KEY</a> ,<code>php artisan jwt:secret</code></p>
<ul>
<li>1.如果不生成，在取得 <code>API</code> 数据的时候，会有 500 错误弹出.</li>
</ul>
</li>
<li><p>8.暂时如果服务器有更新的步骤:</p>
<ul>
<li>1.先在本地 push 到 GitLab</li>
<li>2.ssh 登录到服务器，执行 <code>php artisan down (--message=&quot;Upgrading Database&quot; --retry=60)</code>，命令，让服务器<a href="https://laravel-china.org/docs/laravel/5.6/configuration/1353">进入 维护 模式</a>.</li>
<li>3.<code>git pull origin master</code> ,把源码下载下来.</li>
<li>4.修改好一些依赖后，就执行 <code>php artisan up</code> 上线.</li>
</ul>
</li>
<li><p>9.数据的迁移及保存</p>
<ul>
<li>1.Mysql 数据库的内容就用 Sequel Pro 把数据导出或导入.<ul>
<li>1.一般需要导出的数据库为:<code>abouts,events,permission_role,permissions,pictures,products,users</code></li>
</ul>
</li>
<li>2.其它的 <code>public</code> 中的数据就通过 <a href="https://unix.stackexchange.com/questions/188285/how-to-copy-a-file-from-a-remote-server-to-a-local-machine"><code>scp</code></a> 命令去导出和导入.<ul>
<li>1.下载,如在本地电脑运行以下的命令: <code>scp -r tian@10.100.0.1:/home/tian/www/html/frontend/storage/app/public /Users/tianzeng/Desktop</code></li>
<li>2.Logs 的下载,<code>scp -r tian@10.100.1.217:/home/tian/www/html/frontend/storage/logs/laravel.log /Users/tianzeng/Desktop</code></li>
<li>3.数据的上传,在本地电脑运行一下命令: <code>scp -r /Users/tianzeng/Desktop/public tian@10.100.1.217:/home/tian/www/html/GLB/storage/app</code></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<hr>
<hr>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>ngrok的搭建</title>
    <url>/2018/09/04/ngrok%E7%9A%84%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h1 id="ngrok的搭建"><a href="#ngrok的搭建" class="headerlink" title="ngrok的搭建"></a>ngrok的搭建</h1><blockquote>
<p>内网穿透工具 ngrok 的搭建 。</p>
</blockquote>
<a id="more"></a>

<h3 id="1-参考链接"><a href="#1-参考链接" class="headerlink" title="1.参考链接"></a><a href="#references">1.参考链接</a></h3><h3 id="2-搭建步骤"><a href="#2-搭建步骤" class="headerlink" title="2.搭建步骤"></a><a href="#deploy_step">2.搭建步骤</a></h3><h3 id="3-安装-screen"><a href="#3-安装-screen" class="headerlink" title="3.安装 screen"></a><a href="#screen_install">3.安装 screen</a></h3><hr>
<hr>
<hr>
<h3 id="1-参考链接-1"><a href="#1-参考链接-1" class="headerlink" title="1.参考链接"></a>1.参考链接<a name="references"/></h3><ul>
<li>1.官网：<a href="https://ngrok.com/">https://ngrok.com/</a></li>
<li>2.源码：<a href="https://github.com/inconshreveable/ngrok">https://github.com/inconshreveable/ngrok</a></li>
</ul>
<hr>
<h3 id="2-搭建步骤-1"><a href="#2-搭建步骤-1" class="headerlink" title="2.搭建步骤"></a>2.搭建步骤<a name="deploy_step"/></h3><h4 id="1-使用-ngrok-的免费服务"><a href="#1-使用-ngrok-的免费服务" class="headerlink" title="1.使用 ngrok 的免费服务."></a>1.使用 ngrok 的免费服务.</h4><ul>
<li><a href="https://dashboard.ngrok.com/get-started">1.Setup &amp; Installation</a></li>
<li>2.但是这个免费版的不能 自定义 域名,如出现一下提示.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Mac Tian$ .&#x2F;ngrok http -subdomain&#x3D;tiantestdomain 80</span><br><span class="line">Tunnel session failed: Only paid plans may bind custom subdomains.</span><br><span class="line">Failed to bind the custom subdomain &#39;tiantestdomain&#39; for the account &#39;JingTianZeng&#39;.</span><br><span class="line">This account is on the &#39;Free&#39; plan.</span><br><span class="line"></span><br><span class="line">Upgrade to a paid plan at: https:&#x2F;&#x2F;dashboard.ngrok.com&#x2F;billing&#x2F;plan</span><br><span class="line"></span><br><span class="line">ERR_NGROK_313</span><br></pre></td></tr></table></figure>

<h4 id="2-因为这个-ngrok-是个开源的项目，所以可以自己搭建一个内网穿透服务"><a href="#2-因为这个-ngrok-是个开源的项目，所以可以自己搭建一个内网穿透服务" class="headerlink" title="2.因为这个 ngrok 是个开源的项目，所以可以自己搭建一个内网穿透服务."></a>2.因为这个 ngrok 是个开源的项目，所以可以自己搭建一个内网穿透服务.</h4><h5 id="1-参考："><a href="#1-参考：" class="headerlink" title="1.参考："></a>1.参考：</h5><ul>
<li>1.<a href="https://www.jianshu.com/p/d35962b0dba4">VPS自搭建Ngrok内网穿透服务()</a></li>
<li>2.<a href="https://github.com/inconshreveable/ngrok/blob/master/docs/SELFHOSTING.md">How to run your own ngrokd server</a></li>
<li>3.<a href="https://www.svenbit.com/2014/09/run-ngrok-on-your-own-server/">Run Ngrok on Your Own Server Using Self-Signed SSL Certificate (主要参考这个 !!!)</a></li>
</ul>
<h5 id="2-具体过程-位于公网的服务器端-有唯一的-Address-负责-DNS-的转换"><a href="#2-具体过程-位于公网的服务器端-有唯一的-Address-负责-DNS-的转换" class="headerlink" title="2.具体过程(位于公网的服务器端,有唯一的 Address,负责 DNS 的转换.):"></a>2.具体过程(位于公网的服务器端,有唯一的 Address,负责 DNS 的转换.):</h5><ul>
<li>1.按照 3 的教程,一步一步来就可以了 !!!</li>
<li>2.主要的代码有:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	user@JapanServer:~# ls</span><br><span class="line">	go  go1.8.1.linux-amd64.tar.gz	ngrok  ngrok_server</span><br><span class="line">	</span><br><span class="line">	user@JapanServer:~# cd ngrok_server</span><br><span class="line">	</span><br><span class="line">	user@JapanServer:~&#x2F;ngrok_server# ls</span><br><span class="line">	ngrokd	server.crt  server.key</span><br><span class="line">	</span><br><span class="line">	# 开启 ngrokd</span><br><span class="line">.&#x2F;ngrokd -tlsKey&#x3D;server.key -tlsCrt&#x3D;server.crt -domain&#x3D;&quot;ngrok.tianlovezhen.site&quot; -httpAddr&#x3D;&quot;:80&quot; -httpsAddr&#x3D;&quot;:443&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li><p>3.让 ngrokd 在后台运行(参考 3 的评论区.)</p>
<ul>
<li>1.因为按照 3 的教程, ngrokd 在 ssh 关闭后，也会自动关闭.所以需要让它在后台自动运行.</li>
<li>2.运行命令 <code>./ngrokd -log=stdout -tlsKey=device.key -tlsCrt=device.crt -domain=&quot;something.tunnel.com&quot; -httpAddr=&quot;:80&quot; -httpsAddr=&quot;:443&quot; &gt; /dev/null &amp;</code></li>
<li>3.如果需要关闭，就运行 <code>ps -ef | grep &quot;ngrokd&quot;</code> 或 <code>netstat -ntlp</code> 查找出 <code>ngrok</code> 的 PID ，然后运行 <code>kill -9 [PID]</code> 去关闭 <code>ngrokd</code></li>
</ul>
</li>
<li><p>4.让 ngrokd 在后台运行(用 screen 去实现)</p>
<ul>
<li>1.具体用法请参考 <a href="https://www.vpser.net/manage/screen.html"> SSH远程会话管理工具 - screen使用教程</a></li>
</ul>
</li>
</ul>
<h5 id="3-客户端-位于内网的服务器，负责网页的内容"><a href="#3-客户端-位于内网的服务器，负责网页的内容" class="headerlink" title="3.客户端(位于内网的服务器，负责网页的内容)"></a>3.客户端(位于内网的服务器，负责网页的内容)</h5><ul>
<li>1.下载上一步 <code>make release-server release-client</code> 后生成的客户端程序 <code>ngrok</code>,在所运行命令路径的 <code>bin</code> 中.<ul>
<li>1.下载 <code>Linux:~ user$ scp user@1.2.3.4:/user/ngrok/bin/ngrok /Users/user/Desktop</code></li>
<li>2.生成一个配置文件如: <code>ngrok.cfg</code> ,在里面写上: </li>
</ul>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">server_addr: [NGROK_BASE_DOMAIN]:4443</span><br><span class="line">trust_host_root_certs: false</span><br></pre></td></tr></table></figure>

<ul>
<li><p>3.运行命令开始内网穿透,如: <code>./ngrok -subdomain testing -config=ngrok.cfg 80</code></p>
</li>
<li><p>4.后台运行(需要借助 screen 去实现)</p>
<ul>
<li>1.具体用法请参考 <a href="https://www.vpser.net/manage/screen.html"> SSH远程会话管理工具 - screen使用教程</a></li>
</ul>
</li>
</ul>
<hr>
<h3 id="3-安装-screen-1"><a href="#3-安装-screen-1" class="headerlink" title="3.安装 screen"></a>3.安装 screen<a name="screen_install"/></h3><ul>
<li>1.参考:<ul>
<li><a href="https://www.vpser.net/manage/screen.html">1.SSH远程会话管理工具 - screen使用教程</a></li>
</ul>
</li>
<li>2.怎样在 linux 启动时开启 screen ,并自动打开 ngrokd 或 ngrok ???</li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>NodePackageManager(NPM) 的 registry 设置</title>
    <url>/2019/09/05/npm-setup-registry/</url>
    <content><![CDATA[<blockquote>
<p>配置 npm 的源</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a><a href="#references">1.参考</a></h2><h2 id="2-过程"><a href="#2-过程" class="headerlink" title="2.过程"></a><a href="#steps">2.过程</a></h2><h2 id="3-错误处理"><a href="#3-错误处理" class="headerlink" title="3.错误处理"></a><a href="#error_process">3.错误处理</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考<a name="references"/></h2><ul>
<li>1.<a href="https://npm.taobao.org/">淘宝 NPM 镜像</a></li>
<li>2.<a href="https://gist.github.com/52cik/c1de8926e20971f415dd">npm 淘宝镜像配置</a></li>
<li>3.<a href="http://blog.pgyjz.cn/2019/09/05/npm%E8%AE%BE%E7%BD%AE/">配置cnpm</a></li>
</ul>
<h2 id="2-过程-1"><a href="#2-过程-1" class="headerlink" title="2.过程"></a>2.过程<a name="steps"/></h2><ul>
<li>1.切换源(官方源 &lt;-&gt; 淘宝源)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># npm 官方源</span><br><span class="line">npm set registry https:&#x2F;&#x2F;registry.npmjs.org&#x2F;</span><br><span class="line"></span><br><span class="line"># 淘宝源</span><br><span class="line"># 注册模块镜像</span><br><span class="line">npm set registry https:&#x2F;&#x2F;r.npm.taobao.org</span><br><span class="line"># 注册模块镜像</span><br><span class="line">npm set disturl https:&#x2F;&#x2F;npm.taobao.org&#x2F;dist</span><br><span class="line"></span><br><span class="line"># 清空缓存</span><br><span class="line">npm cache clean --force</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.查看源</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ npm config list</span><br><span class="line">; cli configs</span><br><span class="line">metrics-registry &#x3D; &quot;https:&#x2F;&#x2F;r.npm.taobao.org&#x2F;&quot;</span><br><span class="line">scope &#x3D; &quot;&quot;</span><br><span class="line">user-agent &#x3D; &quot;npm&#x2F;6.9.0 node&#x2F;v12.6.0 darwin x64&quot;</span><br><span class="line"></span><br><span class="line">; userconfig &#x2F;Users&#x2F;glb_gz&#x2F;.npmrc</span><br><span class="line">disturl &#x3D; &quot;https:&#x2F;&#x2F;npm.taobao.org&#x2F;dist&quot;</span><br><span class="line">registry &#x3D; &quot;https:&#x2F;&#x2F;r.npm.taobao.org&#x2F;&quot;</span><br><span class="line"></span><br><span class="line">; builtin config undefined</span><br><span class="line">prefix &#x3D; &quot;&#x2F;usr&#x2F;local&quot;</span><br><span class="line"></span><br><span class="line">; node bin location &#x3D; &#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;node&#x2F;12.6.0&#x2F;bin&#x2F;node</span><br><span class="line">; cwd &#x3D; &#x2F;Users&#x2F;glb_gz&#x2F;Documents&#x2F;Angular_workplace&#x2F;Github&#x2F;ng-zorro-antd</span><br><span class="line">; HOME &#x3D; &#x2F;Users&#x2F;glb_gz</span><br><span class="line">; &quot;npm config ls -l&quot; to show all defaults.</span><br></pre></td></tr></table></figure>

<h2 id="3-错误处理-1"><a href="#3-错误处理-1" class="headerlink" title="3.错误处理"></a>3.错误处理<a name="error_process"/></h2><h4 id="1-Angular-运行命令ng-test-出现jasminerequire-not-defined-解决-ng-test-jasminerequire-not-defined问题"><a href="#1-Angular-运行命令ng-test-出现jasminerequire-not-defined-解决-ng-test-jasminerequire-not-defined问题" class="headerlink" title="1.Angular 运行命令ng test, [出现jasminerequire not defined](解决 ng test jasminerequire not defined问题)"></a>1.Angular 运行命令<code>ng test</code>, [出现<code>jasminerequire not defined</code>](解决 ng test jasminerequire not defined问题)</h4><ul>
<li>1.删除 <code>node_modules</code> 文件夹，然后运行以下命令 <code>npm install --registry=https://registry.npm.taobao.org</code>;</li>
</ul>
<h4 id="2-使用淘宝镜像的后遗症及解决方法-npm-ERR-Unexpected-end-of-JSON-input-while-parsing-near-‘"><a href="#2-使用淘宝镜像的后遗症及解决方法-npm-ERR-Unexpected-end-of-JSON-input-while-parsing-near-‘" class="headerlink" title="2.使用淘宝镜像的后遗症及解决方法: npm ERR! Unexpected end of JSON input while parsing near ‘"></a>2.使用淘宝镜像的后遗症及解决方法: <a href="https://github.com/vuejs-templates/webpack/issues/990#issuecomment-343736884">npm ERR! Unexpected end of JSON input while parsing near ‘</a></h4>]]></content>
      <categories>
        <category>node</category>
      </categories>
      <tags>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>postman 用法</title>
    <url>/2019/06/24/postman%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<blockquote>
<p>介绍自己用 PostMan(Version 7.2.2 (7.2.2)) 的心得</p>
</blockquote>
<a id="more"></a>

<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a><a href="#references">1.参考</a></h2><h2 id="2-变量的使用"><a href="#2-变量的使用" class="headerlink" title="2.变量的使用"></a><a href="#variable_usage">2.变量的使用</a></h2><h2 id="3-代理的设置"><a href="#3-代理的设置" class="headerlink" title="3.代理的设置"></a><a href="#set_proxy_server">3.代理的设置</a></h2><h2 id="4-Mock-Server-的使用"><a href="#4-Mock-Server-的使用" class="headerlink" title="4.Mock Server 的使用"></a><a href="#mock_usage">4.Mock Server 的使用</a></h2><hr>
<hr>
<hr>
<h2 id="1-参考-1"><a href="#1-参考-1" class="headerlink" title="1.参考"></a>1.参考<a name="references"/></h2><ul>
<li>1.<a href="https://segmentfault.com/a/1190000011991458">postman 的基础使用篇(一)</a></li>
<li>2.<a href="https://segmentfault.com/a/1190000012024844">postman的代理使用篇(四)</a></li>
<li>3.<a href="https://segmentfault.com/a/1190000012077563">postman 变量使用篇(六)</a></li>
<li>4.<a href="https://learning.getpostman.com/docs/postman/scripts/postman_sandbox_api_reference/">Postman Sandbox API reference</a></li>
</ul>
<h2 id="2-变量的使用-1"><a href="#2-变量的使用-1" class="headerlink" title="2.变量的使用"></a>2.变量的使用<a name="variable_usage"/></h2><h4 id="1-变量的增加和使用"><a href="#1-变量的增加和使用" class="headerlink" title="1.变量的增加和使用"></a>1.变量的增加和使用</h4><blockquote>
<p>点击 <code>setting 图标</code> -&gt; <code>相应的环境</code> 即可查看或编辑对应变量.</p>
</blockquote>
<p><img src="http://pic.pgyjz.cn/blog/Mac/Snip20190624_2.png"><br><img src="http://pic.pgyjz.cn/blog/Mac/Snip20190624_3.png"></p>
<h4 id="2-脚本动态改变变量"><a href="#2-脚本动态改变变量" class="headerlink" title="2.脚本动态改变变量."></a>2.脚本动态改变变量.</h4><blockquote>
<p>1.PostMan 提供了丰富的脚本去实现运行时动态设置参数,详情可看 <a href="https://learning.getpostman.com/docs/postman/scripts/postman_sandbox_api_reference/">Postman Sandbox API reference</a> .</p>
<p>2.用的语言为 javascript, 同理也可以用 <code>Command + option + C</code> 打开控制台，即可看到 <code>console.log(&quot;&quot;);</code> 的输出.</p>
</blockquote>
<p><img src="http://pic.pgyjz.cn/blog/Mac/Snip20190624_5.png"><br><img src="http://pic.pgyjz.cn/blog/Mac/Snip20190624_6.png"></p>
<hr>
<h2 id="3-代理的设置-1"><a href="#3-代理的设置-1" class="headerlink" title="3.代理的设置"></a>3.代理的设置<a name="set_proxy_server"/></h2><ul>
<li>1.可以让 <code>PostMan</code> 走 ss 的代理.</li>
<li>2.但是我只选 <code>User System Proxy</code> 的话，代理没效果，不知道为什么.<br>![](<a href="http://pic.pgyjz.cn/blog/Mac/screenshot">http://pic.pgyjz.cn/blog/Mac/screenshot</a> 2019-06-24 at 18.19.57.png)</li>
</ul>
<hr>
<h2 id="4-Mock-Server-的使用-1"><a href="#4-Mock-Server-的使用-1" class="headerlink" title="4.Mock Server 的使用"></a>4.Mock Server 的使用<a name="mock_usage"/></h2><blockquote>
<p>其实 PostMan 官方的这篇文章 <a href="https://learning.getpostman.com/docs/postman/mock_servers/setting_up_mock/">Setting up a mock server</a> 还有 APP <code>PostMan</code> 都有详细的教程，所以我这里只是用中文的形式把我理解的写出来.</p>
</blockquote>
<p><img src="http://pic.pgyjz.cn/blog/postman/postmanUsage/Snip20190628_2.png"></p>
<h4 id="1-在已有的-Collection-上增加一个-Mock-Server"><a href="#1-在已有的-Collection-上增加一个-Mock-Server" class="headerlink" title="1.在已有的 Collection 上增加一个 Mock Server."></a>1.在已有的 <code>Collection</code> 上增加一个 <code>Mock Server</code>.</h4><p><img src="http://pic.pgyjz.cn/blog/postman/postmanUsage/Snip20190628_3.png"></p>
<ul>
<li><p>environment 不设置也是可以的.<br><img src="http://pic.pgyjz.cn/blog/postman/postmanUsage/Snip20190628_4.png"></p>
</li>
<li><p>点击 <code>Create mock server</code>,就会创建一个 Mock Server 了.</p>
</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/postman/postmanUsage/Snip20190628_5.png"></p>
<ul>
<li>我们测试一下这个链接，可以运行，但是当然会返回错误信息，因为还没有配置返回的 <code>Sample API</code>.<br><img src="http://pic.pgyjz.cn/blog/postman/postmanUsage/Snip20190628_6.png"></li>
</ul>
<h4 id="2-增加一个返回示例"><a href="#2-增加一个返回示例" class="headerlink" title="2.增加一个返回示例"></a>2.增加一个返回示例</h4><p><img src="http://pic.pgyjz.cn/blog/postman/postmanUsage/Snip20190628_7.png"></p>
<p><img src="http://pic.pgyjz.cn/blog/postman/postmanUsage/Snip20190628_10.png"></p>
<ul>
<li><p>可以看到我们这里有两个 Mock Server(教程之前已经提前创建好了一个)<br><img src="http://pic.pgyjz.cn/blog/postman/postmanUsage/Snip20190628_11.png"></p>
</li>
<li><p>打开 URL，可以看到返回了我们之前设置好的返回示例.</p>
</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/postman/postmanUsage/Snip20190628_13.png"></p>
<ul>
<li>在 外部的浏览器去运行这个 URL , 可以看到也是返回一样的结果</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/postman/postmanUsage/Snip20190628_15.png"></p>
<ul>
<li>但是因为我的账号是免费版，所以 Mock 的适用有一定的限额，一个月才 1000 次.</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/postman/postmanUsage/Snip20190628_16.png"></p>
]]></content>
      <categories>
        <category>postman</category>
      </categories>
      <tags>
        <tag>postman</tag>
      </tags>
  </entry>
  <entry>
    <title>电脑配置 Route</title>
    <url>/2020/04/22/route-setup/</url>
    <content><![CDATA[<blockquote>
<p>电脑手动 配置 Route 的方法</p>
</blockquote>
<a id="more"></a>

<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows:"></a>Windows:</h2><p>需要以管理员身份运行 cmd ，  然后输入以下命令:<br>route  add  10.0.0.0  mask  255.255.0.0    123.456.789.012</p>
<h2 id="Linux-还没验证"><a href="#Linux-还没验证" class="headerlink" title="Linux(还没验证):"></a>Linux(还没验证):</h2><p>sudo route add -net 10.0.0.0/16 gw 123.456.789.012</p>
<h2 id="Mac"><a href="#Mac" class="headerlink" title="Mac:"></a>Mac:</h2><h4 id="1-查看-route-list-命令-netstat-nr"><a href="#1-查看-route-list-命令-netstat-nr" class="headerlink" title="1.查看 route list 命令:  netstat -nr"></a>1.查看 route list 命令:  <code>netstat -nr</code></h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ netstat -nr</span><br><span class="line">Routing tables</span><br><span class="line"></span><br><span class="line">Internet:</span><br><span class="line">Destination        Gateway            Flags        Refs      Use   Netif Expire</span><br><span class="line">default            10.0.1.1         UGSc          115        0     en0       </span><br><span class="line">10&#x2F;16              123.456.789.012     UGSc            0        0     en0       </span><br><span class="line">10.100.1&#x2F;24        link#8             UCS            11        0     en0      !</span><br><span class="line">10.100.1.1&#x2F;32      link#8             UCS             1        0     en0      !</span><br></pre></td></tr></table></figure>

<h4 id="2-添加"><a href="#2-添加" class="headerlink" title="2.添加"></a>2.添加</h4><ul>
<li>1.添加 default</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo route add  default   10.0.1.1</span><br></pre></td></tr></table></figure>

<ul>
<li>2.添加特殊的 route(一直设置不成功!!)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo route -n add -net 10.0.0.0&#x2F;16 123.456.789.012</span><br></pre></td></tr></table></figure>


<h4 id="3-删除"><a href="#3-删除" class="headerlink" title="3.删除"></a>3.删除</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo route -n delete 10&#x2F;16  123.456.789.012</span><br></pre></td></tr></table></figure>

<h4 id="4-查看"><a href="#4-查看" class="headerlink" title="4.查看"></a>4.查看</h4><blockquote>
<p>查看到达指定 IP 地址路由的情况</p>
</blockquote>
<ul>
<li>1.Windows:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">tracert 192.168.1.1</span><br></pre></td></tr></table></figure>

<ul>
<li>2.Mac</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">traceroute 192.168.1.1</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>speedtest-cli测速工具</title>
    <url>/2018/09/04/speedtest_cli%E6%B5%8B%E9%80%9F%E5%B7%A5%E5%85%B7/</url>
    <content><![CDATA[<h1 id="speedtest-cli测速工具"><a href="#speedtest-cli测速工具" class="headerlink" title="speedtest-cli测速工具"></a>speedtest-cli测速工具</h1><h5 id="服务器网络测试工具"><a href="#服务器网络测试工具" class="headerlink" title="服务器网络测试工具."></a>服务器网络测试工具.</h5><blockquote>
<p>安装: <a href="https://www.howtoforge.com/tutorial/check-internet-speed-with-speedtest-cli-on-ubuntu/">https://www.howtoforge.com/tutorial/check-internet-speed-with-speedtest-cli-on-ubuntu/</a></p>
</blockquote>
<a id="more"></a>

<h3 id="1-用法"><a href="#1-用法" class="headerlink" title="1.用法"></a><a href="#usage">1.用法</a></h3><h3 id="2-效果"><a href="#2-效果" class="headerlink" title="2.效果:"></a><a href="#result">2.效果:</a></h3><h3 id="3-安装"><a href="#3-安装" class="headerlink" title="3.安装"></a><a href="#install">3.安装</a></h3><h3 id="4-外网速度测试-到长沙-6132"><a href="#4-外网速度测试-到长沙-6132" class="headerlink" title="4.外网速度测试,到长沙(6132)"></a><a href="#out_net">4.外网速度测试,到长沙(6132)</a></h3><h3 id="5-安装了-bbr-后"><a href="#5-安装了-bbr-后" class="headerlink" title="5.安装了 bbr 后"></a><a href="#after_install_bbr">5.安装了 bbr 后</a></h3><hr>
<hr>
<hr>
<h3 id="1-用法-1"><a href="#1-用法-1" class="headerlink" title="1.用法"></a>1.用法<a name="usage"/></h3><ul>
<li>1.<a href="http://www.ttlsa.com/linux/use-speedtest-cli-test-internet-speed/">http://www.ttlsa.com/linux/use-speedtest-cli-test-internet-speed/</a></li>
<li>2.<a href="https://fiveyellowmice.com/posts/2016/12/bbr-congestion-algorithm-dark-science.html">https://fiveyellowmice.com/posts/2016/12/bbr-congestion-algorithm-dark-science.html</a></li>
</ul>
<hr>
<h3 id="2-效果-1"><a href="#2-效果-1" class="headerlink" title="2.效果:"></a>2.效果:<a name="result"/></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># speedtest-cli</span><br><span class="line">Retrieving speedtest.net configuration...</span><br><span class="line">Testing from China Telecom Guangdong (183.6.115.218)...</span><br><span class="line">Retrieving speedtest.net server list...</span><br><span class="line">Selecting best server based on ping...</span><br><span class="line">Hosted by CSL (Tai Po) [120.14 km]: 62.55 ms</span><br><span class="line">Testing download speed................................................................................</span><br><span class="line">Download: 9.51 Mbit&#x2F;s</span><br><span class="line">Testing upload speed................................................................................................</span><br><span class="line">Upload: 6.56 Mbit&#x2F;s</span><br><span class="line"></span><br><span class="line"># speedtest-cli --bytes</span><br><span class="line">Retrieving speedtest.net configuration...</span><br><span class="line">Testing from China Telecom Guangdong (183.6.115.218)...</span><br><span class="line">Retrieving speedtest.net server list...</span><br><span class="line">Selecting best server based on ping...</span><br><span class="line">Hosted by CSL (Tai Po) [120.14 km]: 16.276 ms</span><br><span class="line">Testing download speed................................................................................</span><br><span class="line">Download: 1.19 Mbyte&#x2F;s</span><br><span class="line">Testing upload speed................................................................................................</span><br><span class="line">Upload: 0.83 Mbyte&#x2F;s</span><br><span class="line"></span><br><span class="line"># speedtest-cli --simple</span><br><span class="line">Ping: 16.259 ms</span><br><span class="line">Download: 8.11 Mbit&#x2F;s</span><br><span class="line">Upload: 6.60 Mbit&#x2F;s</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;Share</span><br><span class="line"># speedtest-cli --share</span><br><span class="line">Retrieving speedtest.net configuration...</span><br><span class="line">Testing from China Telecom Guangdong (183.6.115.218)...</span><br><span class="line">Retrieving speedtest.net server list...</span><br><span class="line">Selecting best server based on ping...</span><br><span class="line">Hosted by MTel (Macau) [106.14 km]: 26.26 ms</span><br><span class="line">Testing download speed................................................................................</span><br><span class="line">Download: 9.62 Mbit&#x2F;s</span><br><span class="line">Testing upload speed................................................................................................</span><br><span class="line">Upload: 6.60 Mbit&#x2F;s</span><br><span class="line">Share results: http:&#x2F;&#x2F;www.speedtest.net&#x2F;result&#x2F;6775155371.png</span><br><span class="line"></span><br></pre></td></tr></table></figure>




<hr>
<h3 id="3-安装-1"><a href="#3-安装-1" class="headerlink" title="3.安装"></a>3.安装<a name="install"/></h3><ul>
<li>1.这次用的是第二种的方法去安装 speedtest-cli</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># cd &#x2F;tmp</span><br><span class="line"># wget https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;sivel&#x2F;speedtest-cli&#x2F;master&#x2F;speedtest.py</span><br><span class="line">--2017-11-08 09:05:52--  https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;sivel&#x2F;speedtest-cli&#x2F;master&#x2F;speedtest.py</span><br><span class="line">Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.52.133</span><br><span class="line">Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.52.133|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 47441 (46K) [text&#x2F;plain]</span><br><span class="line">Saving to: &#96;speedtest.py&#39;</span><br><span class="line"></span><br><span class="line">100%[&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&gt;] 47,441      --.-K&#x2F;s   in 0.002s  </span><br><span class="line"></span><br><span class="line">2017-11-08 09:05:53 (18.4 MB&#x2F;s) - &#96;speedtest.py&#39; saved [47441&#x2F;47441]</span><br><span class="line"></span><br><span class="line"># ls</span><br><span class="line">master.zip  speedtest-cli-master  speedtest.py</span><br><span class="line"># chmod 755 speedtest.py</span><br><span class="line"># mv speedtest.py &#x2F;usr&#x2F;local&#x2F;bin&#x2F;speedtest-cli</span><br><span class="line"># speedtest-cli</span><br><span class="line">Retrieving speedtest.net configuration...</span><br><span class="line">Testing from Choopa, LLC (104.238.115.218)...</span><br><span class="line">Retrieving speedtest.net server list...</span><br><span class="line">Selecting best server based on ping...</span><br><span class="line">Hosted by Comcast (Seattle, WA) [1.51 km]: 1.355 ms</span><br><span class="line">Testing download speed................................................................................</span><br><span class="line">Download: 4493.23 Mbit&#x2F;s</span><br><span class="line">Testing upload speed................................................................................................</span><br><span class="line">Upload: 1697.58 Mbit&#x2F;s</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<hr>
<h3 id="4-外网速度测试-到长沙-6132-1"><a href="#4-外网速度测试-到长沙-6132-1" class="headerlink" title="4.外网速度测试,到长沙(6132)"></a>4.外网速度测试,到长沙(6132)<a name="out_net"/></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># speedtest-cli --bytes --server&#x3D;6132 --share</span><br><span class="line">Retrieving speedtest.net configuration...</span><br><span class="line">Testing from Choopa, LLC (104.238.115.218)...</span><br><span class="line">Retrieving speedtest.net server list...</span><br><span class="line">Selecting best server based on ping...</span><br><span class="line">Hosted by ChinaTelecom.Hunan (Changsha) [9937.81 km]: 333.483 ms</span><br><span class="line">Testing download speed................................................................................</span><br><span class="line">Download: 2.67 Mbyte&#x2F;s</span><br><span class="line">Testing upload speed................................................................................................</span><br><span class="line">Upload: 0.60 Mbyte&#x2F;s</span><br><span class="line">Share results: http:&#x2F;&#x2F;www.speedtest.net&#x2F;result&#x2F;6775344464.png</span><br><span class="line"># </span><br></pre></td></tr></table></figure>
<p><img src="/assets/imgs/net/6775344464.png"></p>
<hr>
<h3 id="5-安装了-bbr-后-1"><a href="#5-安装了-bbr-后-1" class="headerlink" title="5.安装了 bbr 后"></a>5.安装了 bbr 后<a name="after_install_bbr"/></h3><blockquote>
<p>20171108,18:00</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># speedtest-cli --bytes --server&#x3D;6132 --share</span><br><span class="line">Retrieving speedtest.net configuration...</span><br><span class="line">Testing from Choopa, LLC (104.238.115.218)...</span><br><span class="line">Retrieving speedtest.net server list...</span><br><span class="line">Selecting best server based on ping...</span><br><span class="line">Hosted by ChinaTelecom.Hunan (Changsha) [9937.81 km]: 408.372 ms</span><br><span class="line">Testing download speed................................................................................</span><br><span class="line">Download: 1.90 Mbyte&#x2F;s</span><br><span class="line">Testing upload speed................................................................................................</span><br><span class="line">Upload: 0.71 Mbyte&#x2F;s</span><br><span class="line">Share results: http:&#x2F;&#x2F;www.speedtest.net&#x2F;result&#x2F;6775434818.png</span><br><span class="line"># </span><br></pre></td></tr></table></figure>
<p><img src="/assets/imgs/net/6775434818.png"></p>
<blockquote>
<p>20171108,22:00</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># speedtest-cli --bytes --server&#x3D;6132 --share</span><br><span class="line">Retrieving speedtest.net configuration...</span><br><span class="line">Testing from Choopa, LLC (104.238.115.218)...</span><br><span class="line">Retrieving speedtest.net server list...</span><br><span class="line">Selecting best server based on ping...</span><br><span class="line">Hosted by ChinaTelecom.Hunan (Changsha) [9937.81 km]: 506.287 ms</span><br><span class="line">Testing download speed................................................................................</span><br><span class="line">Download: 1.53 Mbyte&#x2F;s</span><br><span class="line">Testing upload speed................................................................................................</span><br><span class="line">Upload: 1.40 Mbyte&#x2F;s</span><br><span class="line">Share results: http:&#x2F;&#x2F;www.speedtest.net&#x2F;result&#x2F;6775983072.png</span><br></pre></td></tr></table></figure>
<p><img src="/assets/imgs/net/6775983072.png"></p>
]]></content>
      <categories>
        <category>speedtest</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Shadowsocks web-gui 的搭建及使用</title>
    <url>/2018/09/04/ss-web-gui_Deploy/</url>
    <content><![CDATA[<blockquote>
<p>关于 Shadowsocks web-gui 的搭建及使用</p>
</blockquote>
<a id="more"></a>



<h1 id="ss-manager"><a href="#ss-manager" class="headerlink" title="ss-manager"></a>ss-manager</h1><blockquote>
<p>通过网页管理 SS 的工具</p>
</blockquote>
<h2 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h2><ul>
<li>1.<a href="https://github.com/shadowsocks/shadowsocks-manager">shadowsocks-manager</a></li>
<li>2.<a href="https://shadowsocks.github.io/shadowsocks-manager/#/install?id=%e6%99%ae%e9%80%9a%e6%96%b9%e5%bc%8f">安装方式</a></li>
<li>3.<a href="https://frank2019.me/articles/2019/09/04/1567580175121.html">安装SHADOWSCOCKS-MANAGER</a></li>
</ul>
<h2 id="2-安装步骤"><a href="#2-安装步骤" class="headerlink" title="2.安装步骤"></a>2.安装步骤</h2><h3 id="1-安装-Node-js"><a href="#1-安装-Node-js" class="headerlink" title="1.安装 Node.js "></a>1.安装 <code>Node.js </code></h3><ul>
<li>1.<a href="https://github.com/nodesource/distributions">NodeSource Node.js Binary Distributions</a></li>
<li>2.Node 的版本一定要为 <code>12.*</code> !!!.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Using Debian, as root</span><br><span class="line">curl -sL https:&#x2F;&#x2F;deb.nodesource.com&#x2F;setup_12.x | bash -</span><br><span class="line">apt-get install -y nodejs</span><br><span class="line"></span><br><span class="line">$:&#x2F;etc&#x2F;shadowsocks-libev# node -v</span><br><span class="line">v12.19.0</span><br><span class="line">$:&#x2F;etc&#x2F;shadowsocks-libev# npm -v</span><br><span class="line">6.14.8</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="2-安装-sqlite"><a href="#2-安装-sqlite" class="headerlink" title="2.安装 sqlite"></a>2.安装 <code>sqlite</code></h3><ul>
<li>1.<a href="https://www.spinup.com/how-to-install-sqlite-on-debian-10/">How to Install SQLite3 On Debian</a></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># apt-get update</span><br><span class="line"></span><br><span class="line"># apt install sqlite3</span><br><span class="line"></span><br><span class="line"># sqlite3 --version</span><br><span class="line">3.16.2 2017-01-06 16:32:41</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-安装-Redis"><a href="#3-安装-Redis" class="headerlink" title="3.安装 Redis"></a>3.安装 <code>Redis</code></h3><h5 id="1-How-To-Install-and-Secure-Redis-on-Ubuntu-18-04"><a href="#1-How-To-Install-and-Secure-Redis-on-Ubuntu-18-04" class="headerlink" title="1.How To Install and Secure Redis on Ubuntu 18.04"></a>1.<a href="https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-redis-on-ubuntu-18-04">How To Install and Secure Redis on Ubuntu 18.04</a></h5><h5 id="2-安装"><a href="#2-安装" class="headerlink" title="2.安装"></a>2.安装</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt install redis-server</span><br></pre></td></tr></table></figure>

<h5 id="3-修改配置"><a href="#3-修改配置" class="headerlink" title="3.修改配置"></a>3.修改配置</h5><ul>
<li>1.修改 1</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">$ sudo nano &#x2F;etc&#x2F;redis&#x2F;redis.conf</span><br><span class="line"></span><br><span class="line"># If you run Redis from upstart or systemd, Redis can interact with your</span><br><span class="line"># supervision tree. Options:</span><br><span class="line">#   supervised no      - no supervision interaction</span><br><span class="line">#   supervised upstart - signal upstart by putting Redis into SIGSTOP mode</span><br><span class="line">#   supervised systemd - signal systemd by writing READY&#x3D;1 to $NOTIFY_SOCKET</span><br><span class="line">#   supervised auto    - detect upstart or systemd method based on</span><br><span class="line">#                        UPSTART_JOB or NOTIFY_SOCKET environment variables</span><br><span class="line"># Note: these supervision methods only signal &quot;process is ready.&quot;</span><br><span class="line">#       They do not enable continuous liveness pings back to your supervisor.</span><br><span class="line">supervised systemd</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<ul>
<li>2.修改 2<ul>
<li>1.Binding to localhost</li>
<li>2.Configuring a Redis Password</li>
</ul>
</li>
</ul>
<h5 id="4-重启-Redis"><a href="#4-重启-Redis" class="headerlink" title="4.重启 Redis"></a>4.重启 Redis</h5><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">$ sudo systemctl restart redis.service</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-安装-ss-manager"><a href="#3-安装-ss-manager" class="headerlink" title="3.安装 ss-manager"></a>3.安装 <code>ss-manager</code></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#安装 ssmgr</span><br><span class="line">npm i -g shadowsocks-manager</span><br><span class="line"></span><br><span class="line">#若出现权限相关的错误提示，则需要尝试：</span><br><span class="line">sudo npm i -g shadowsocks-manager --unsafe-perm</span><br><span class="line"></span><br><span class="line">#安装完成后，使用ssmgr命令来运行程序</span><br></pre></td></tr></table></figure>

<h3 id="4-安装-pm2"><a href="#4-安装-pm2" class="headerlink" title="4.安装 pm2"></a>4.安装 <code>pm2</code></h3><blockquote>
<p>PM2 is a daemon process manager that will help you manage and keep your application online 24/7</p>
</blockquote>
<ul>
<li>1.<a href="https://pm2.keymetrics.io/">pm2</a></li>
</ul>
<h3 id="5-配置-ss-manager"><a href="#5-配置-ss-manager" class="headerlink" title="5.配置 ss-manager"></a>5.配置 <code>ss-manager</code></h3><h4 id="1-节点"><a href="#1-节点" class="headerlink" title="1.节点"></a>1.节点</h4><ul>
<li>1.节点配置文件: <code>ss1.json</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;type&quot;: &quot;s&quot;,</span><br><span class="line">  &quot;shadowsocks&quot;: &#123;</span><br><span class="line">    &quot;address&quot;: &quot;127.0.0.1:6001&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;manager&quot;: &#123;</span><br><span class="line">    &quot;address&quot;: &quot;127.0.0.1:6002&quot;,</span><br><span class="line">    &quot;password&quot;: &quot;xxx&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;db&quot;: &quot;db.sqlite&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.节点运行</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 运行 节点</span><br><span class="line"></span><br><span class="line">$ pm2 --name ss01 -f start ssmgr -x -- -c &#x2F;root&#x2F;.ssmgr&#x2F;ss1.json -r  </span><br><span class="line"># pm2 delete ss01</span><br><span class="line"></span><br><span class="line">$ pm2 startup #将pm2写入系统service开机启动  </span><br><span class="line"># pm2 unstartup</span><br><span class="line"></span><br><span class="line">$ pm2 save #保存pm2当前守护进程的列表</span><br><span class="line"># pm2 unsave</span><br></pre></td></tr></table></figure>

<h4 id="2-服务器"><a href="#2-服务器" class="headerlink" title="2.服务器"></a>2.服务器</h4><ul>
<li>3.<code>web-gui.json</code> 服务器配置文件(把 <code>xxxx</code> 换成自己的参数)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    &quot;type&quot;: &quot;m&quot;,</span><br><span class="line">    &quot;manager&quot;: &#123;</span><br><span class="line">      &quot;address&quot;: &quot;x,x,x,x:6002&quot;,</span><br><span class="line">      &quot;password&quot;: &quot;xxx&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;plugins&quot;: &#123;</span><br><span class="line">      &quot;flowSaver&quot;: &#123;</span><br><span class="line">        &quot;use&quot;: true</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;user&quot;: &#123;</span><br><span class="line">        &quot;use&quot;: true</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;account&quot;: &#123;</span><br><span class="line">        &quot;use&quot;: true</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;email&quot;: &#123;</span><br><span class="line">        &quot;use&quot;: true,</span><br><span class="line">        &quot;type&quot;: &quot;smtp&quot;,</span><br><span class="line">        &quot;username&quot;: &quot;12345678xxx@qq.com&quot;,</span><br><span class="line">        &quot;password&quot;: &quot;xxxxx&quot;,</span><br><span class="line">        &quot;host&quot;: &quot;smtp.qq.com&quot;,</span><br><span class="line">        &quot;port&quot;: &quot;587&quot;,</span><br><span class="line">        &quot;secure&quot;: false</span><br><span class="line">      &#125;,</span><br><span class="line">      &quot;webgui&quot;: &#123;</span><br><span class="line">        &quot;use&quot;: true,</span><br><span class="line">        &quot;host&quot;: &quot;0.0.0.0&quot;,</span><br><span class="line">        &quot;port&quot;: &quot;8x&quot;,</span><br><span class="line">        &quot;admin_username&quot;: &quot;xxx@qq.com&quot;,</span><br><span class="line">        &quot;admin_password&quot;: &quot;xxx&quot;,</span><br><span class="line">        &quot;skin&quot;: &quot;myskin&quot;,</span><br><span class="line">        &quot;language&quot;: &quot;en-US&quot;,</span><br><span class="line">        &quot;site&quot;: &quot;http:&#x2F;&#x2F;-1,-1,-1,-1&quot;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;db&quot;: &quot;webgui.sqlite&quot;,</span><br><span class="line">    &quot;redis&quot;: &#123;</span><br><span class="line">      &quot;host&quot;: &quot;localhost&quot;,</span><br><span class="line">      &quot;port&quot;: xxx,</span><br><span class="line">      &quot;password&quot;: &quot;xxxxxxx&quot;,</span><br><span class="line">      &quot;db&quot;: 0</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>

<ul>
<li>2.运行服务器</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 运行服务器</span><br><span class="line"># ssmgr -c &#x2F;root&#x2F;.ssmgr&#x2F;web-gui.json</span><br><span class="line"></span><br><span class="line">pm2 --name ss-web-gui -f start ssmgr -x -- -c &#x2F;root&#x2F;.ssmgr&#x2F;web-gui.json</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<h3 id="6-Web-gui使用方法"><a href="#6-Web-gui使用方法" class="headerlink" title="6.Web gui使用方法"></a>6.Web gui使用方法</h3><h4 id="1-创建用户"><a href="#1-创建用户" class="headerlink" title="1.创建用户."></a>1.创建用户.</h4><h4 id="2-创建账号"><a href="#2-创建账号" class="headerlink" title="2.创建账号"></a>2.创建账号</h4><blockquote>
<p>账号的意思就是创建一个可使用的端口号，以供用户使用.</p>
</blockquote>
<ul>
<li>1.创建时 指定用户.</li>
</ul>
]]></content>
      <categories>
        <category>ss</category>
      </categories>
      <tags>
        <tag>ss</tag>
      </tags>
  </entry>
  <entry>
    <title>voyager学习</title>
    <url>/2018/08/02/voyager%E5%AD%A6%E4%B9%A0/</url>
    <content><![CDATA[<h1 id="voyager学习"><a href="#voyager学习" class="headerlink" title="voyager学习"></a>voyager学习</h1><blockquote>
<p>1.laravel 中 voyager 框架的学习和使用.</p>
<p>2.voyager 是一个后台管理系统，功能强大.</p>
</blockquote>
<a id="more"></a>

<h2 id="1-voyager-相关的资料"><a href="#1-voyager-相关的资料" class="headerlink" title="1.voyager 相关的资料"></a><a href="#voyager_references">1.voyager 相关的资料</a></h2><h2 id="2-voyager-相关的功能记录"><a href="#2-voyager-相关的功能记录" class="headerlink" title="2.voyager 相关的功能记录"></a><a href="#some_functions">2.voyager 相关的功能记录</a></h2><h2 id="3-voyager-的扩展"><a href="#3-voyager-的扩展" class="headerlink" title="3.voyager 的扩展"></a><a href="#extend_voyager">3.voyager 的扩展</a></h2><h2 id="4-voyager-自动化"><a href="#4-voyager-自动化" class="headerlink" title="4.voyager 自动化"></a><a href="#auto_make_bread">4.voyager 自动化</a></h2><h2 id="5-voyager-的部署"><a href="#5-voyager-的部署" class="headerlink" title="5.voyager 的部署"></a><a href="#voyager_deploy">5.voyager 的部署</a></h2><hr>
<hr>
<hr>
<h2 id="1-voyager-相关的资料-1"><a href="#1-voyager-相关的资料-1" class="headerlink" title="1.voyager 相关的资料"></a>1.voyager 相关的资料<a name="voyager_references"/></h2><ul>
<li><a href="https://voyager.readme.io/docs">1.voyager 开发文档</a></li>
<li><a href="https://github.com/the-control-group/voyager">2.GitHub 地址</a></li>
<li><a href="https://laravelvoyager.com/">3.voyager 官网</a></li>
</ul>
<hr>
<h2 id="2-voyager-相关的功能记录-1"><a href="#2-voyager-相关的功能记录-1" class="headerlink" title="2.voyager 相关的功能记录"></a>2.voyager 相关的功能记录<a name="some_functions"/></h2><h4 id="2-1作为一个-APP-的版本管理后台"><a href="#2-1作为一个-APP-的版本管理后台" class="headerlink" title="2.1作为一个 APP 的版本管理后台."></a>2.1作为一个 APP 的版本管理后台.</h4><ul>
<li>1.进入管理台的 <code>settings</code> 页后，可以增加一个特别的功能,就是返回 APP 的版本信息,如:</li>
</ul>
<img src="/assets/imgs/laravel/ScreenShot_2018-08-02_22.56.43.png" width="50%" height="50%">

<pre><code> * 1.相关的 `Route` 的代码，这样就能通过浏览器访问，返回一个 json 格式的 APP 版本信息:</code></pre>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Route::any(&#39;app_version&#39;, function () &#123;</span><br><span class="line">    return response(setting(&#39;site.app_version_code&#39;));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

<img src="/assets/imgs/laravel/ScreenShot_2018-08-02_23.00.39.png" width="50%" height="50%">
* 2.APP 端根据 [下载安装APK(兼容Android7.0)](https://www.jianshu.com/p/577816c3ce93) 去配置下载功能

<ul>
<li><p>3.APP 放在 fir.im 中，根据 <a href="https://fir.im/docs/install">教程 去获取下载链接</a></p>
</li>
<li><p>4.用 <code>com.loopj.android:android-async-http</code> 去做 APP 端的网络请求库.</p>
</li>
</ul>
<hr>
<h2 id="3-voyager-的扩展-1"><a href="#3-voyager-的扩展-1" class="headerlink" title="3.voyager 的扩展"></a>3.voyager 的扩展<a name="extend_voyager"/></h2><ul>
<li>1.pvtl/voyager-frontend<ul>
<li>1.用 Laravel 做底层, voyager 做 后台 的前台系统.</li>
<li><a href="https://github.com/pvtl/voyager-frontend">2.GitHub 源码</a></li>
</ul>
</li>
</ul>
<hr>
<h2 id="4-voyager-自动化-1"><a href="#4-voyager-自动化-1" class="headerlink" title="4.voyager 自动化"></a>4.voyager 自动化<a name="auto_make_bread"/></h2><h4 id="1-生成-BREAD-的数据"><a href="#1-生成-BREAD-的数据" class="headerlink" title="1.生成 BREAD 的数据."></a>1.生成 BREAD 的数据.</h4><ul>
<li>1.参考 voyager 的 post 的 <code>BREAD</code> 的生成的方式(seeds/PostsTableSeeder).</li>
<li>2.<code>About</code> 的 <code>BREAD</code> 的生成例子:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">use Illuminate\Database\Seeder;</span><br><span class="line">use TCG\Voyager\Models\DataRow;</span><br><span class="line">use TCG\Voyager\Models\DataType;</span><br><span class="line">use TCG\Voyager\Models\Menu;</span><br><span class="line">use TCG\Voyager\Models\MenuItem;</span><br><span class="line">use TCG\Voyager\Models\Permission;</span><br><span class="line">use App\About;</span><br><span class="line"></span><br><span class="line">class AboutsTableSeeder extends Seeder</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;**</span><br><span class="line">     * Run the database seeds.</span><br><span class="line">     *</span><br><span class="line">     * @return void</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public function run()</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;Data Type,数据类型</span><br><span class="line">        $dataType &#x3D; $this-&gt;dataType(&#39;slug&#39;, &#39;abouts&#39;);</span><br><span class="line">        if (!$dataType-&gt;exists) &#123;</span><br><span class="line">            $dataType-&gt;fill([</span><br><span class="line">                &#39;name&#39;                  &#x3D;&gt; &#39;abouts&#39;,</span><br><span class="line">                &#39;display_name_singular&#39; &#x3D;&gt; &#39;关于我们&#39;,</span><br><span class="line">                &#39;display_name_plural&#39;   &#x3D;&gt; &#39;关于我们&#39;,</span><br><span class="line">                &#39;icon&#39;                  &#x3D;&gt; &#39;voyager-people&#39;,</span><br><span class="line">                &#39;model_name&#39;            &#x3D;&gt; &#39;App\\About&#39;,</span><br><span class="line">                &#39;policy_name&#39;           &#x3D;&gt; &#39;&#39;,</span><br><span class="line">                &#39;controller&#39;            &#x3D;&gt; &#39;&#39;,</span><br><span class="line">                &#39;generate_permissions&#39;  &#x3D;&gt; 1,</span><br><span class="line">                &#39;description&#39;           &#x3D;&gt; &#39;关于我们 页的数据设置&#39;,</span><br><span class="line">            ])-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;Data Rows,每个字段的数据格式.</span><br><span class="line">        $postDataType &#x3D; DataType::where(&#39;slug&#39;, &#39;abouts&#39;)-&gt;firstOrFail();</span><br><span class="line">        $dataRow &#x3D; $this-&gt;dataRow($postDataType, &#39;id&#39;);</span><br><span class="line">        if (!$dataRow-&gt;exists) &#123;</span><br><span class="line">            $dataRow-&gt;fill([</span><br><span class="line">                &#39;type&#39;         &#x3D;&gt; &#39;number&#39;,</span><br><span class="line">                &#39;display_name&#39; &#x3D;&gt; &#39;自增 ID&#39;,</span><br><span class="line">                &#39;required&#39;     &#x3D;&gt; 1,</span><br><span class="line">                &#39;browse&#39;       &#x3D;&gt; 0,</span><br><span class="line">                &#39;read&#39;         &#x3D;&gt; 0,</span><br><span class="line">                &#39;edit&#39;         &#x3D;&gt; 0,</span><br><span class="line">                &#39;add&#39;          &#x3D;&gt; 0,</span><br><span class="line">                &#39;delete&#39;       &#x3D;&gt; 0,</span><br><span class="line">                &#39;details&#39;      &#x3D;&gt; json_encode([</span><br><span class="line">                    &#39;description&#39; &#x3D;&gt;&#39;自增 ID 的值.&#39;,</span><br><span class="line">                ]),</span><br><span class="line">                &#39;order&#39;        &#x3D;&gt; 1,</span><br><span class="line">            ])-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">        $dataRow &#x3D; $this-&gt;dataRow($postDataType, &#39;icon&#39;);</span><br><span class="line">        if (!$dataRow-&gt;exists) &#123;</span><br><span class="line">            $dataRow-&gt;fill([</span><br><span class="line">                &#39;type&#39;         &#x3D;&gt; &#39;text&#39;,</span><br><span class="line">                &#39;display_name&#39; &#x3D;&gt; &#39;图标,如(fa fa-address-book)&#39;,</span><br><span class="line">                &#39;required&#39;     &#x3D;&gt; 1,</span><br><span class="line">                &#39;browse&#39;       &#x3D;&gt; 1,</span><br><span class="line">                &#39;read&#39;         &#x3D;&gt; 1,</span><br><span class="line">                &#39;edit&#39;         &#x3D;&gt; 1,</span><br><span class="line">                &#39;add&#39;          &#x3D;&gt; 1,</span><br><span class="line">                &#39;delete&#39;       &#x3D;&gt; 1,</span><br><span class="line">                &#39;details&#39;      &#x3D;&gt; json_encode([</span><br><span class="line">                    &#39;description&#39; &#x3D;&gt;&#39;复制 https:&#x2F;&#x2F;www.w3schools.com&#x2F;icons&#x2F;fontawesome_icons_webapp.asp 中对应的 Description 的值到这里即可&#39;,</span><br><span class="line">                ]),</span><br><span class="line">                &#39;order&#39;        &#x3D;&gt; 2,</span><br><span class="line">            ])-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">        $dataRow &#x3D; $this-&gt;dataRow($postDataType, &#39;title&#39;);</span><br><span class="line">        if (!$dataRow-&gt;exists) &#123;</span><br><span class="line">            $dataRow-&gt;fill([</span><br><span class="line">                &#39;type&#39;         &#x3D;&gt; &#39;text&#39;,</span><br><span class="line">                &#39;display_name&#39; &#x3D;&gt; &#39;标题&#39;,</span><br><span class="line">                &#39;required&#39;     &#x3D;&gt; 1,</span><br><span class="line">                &#39;browse&#39;       &#x3D;&gt; 1,</span><br><span class="line">                &#39;read&#39;         &#x3D;&gt; 1,</span><br><span class="line">                &#39;edit&#39;         &#x3D;&gt; 1,</span><br><span class="line">                &#39;add&#39;          &#x3D;&gt; 1,</span><br><span class="line">                &#39;delete&#39;       &#x3D;&gt; 1,</span><br><span class="line">                &#39;details&#39;      &#x3D;&gt; &#39;&#39;,</span><br><span class="line">                &#39;order&#39;        &#x3D;&gt; 3,</span><br><span class="line">            ])-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">        $dataRow &#x3D; $this-&gt;dataRow($postDataType, &#39;ability&#39;);</span><br><span class="line">        if (!$dataRow-&gt;exists) &#123;</span><br><span class="line">            $dataRow-&gt;fill([</span><br><span class="line">                &#39;type&#39;         &#x3D;&gt; &#39;number&#39;,</span><br><span class="line">                &#39;display_name&#39; &#x3D;&gt; &#39;能力值(0-100)&#39;,</span><br><span class="line">                &#39;required&#39;     &#x3D;&gt; 1,</span><br><span class="line">                &#39;browse&#39;       &#x3D;&gt; 1,</span><br><span class="line">                &#39;read&#39;         &#x3D;&gt; 1,</span><br><span class="line">                &#39;edit&#39;         &#x3D;&gt; 1,</span><br><span class="line">                &#39;add&#39;          &#x3D;&gt; 1,</span><br><span class="line">                &#39;delete&#39;       &#x3D;&gt; 1,</span><br><span class="line">                &#39;details&#39;      &#x3D;&gt; json_encode([</span><br><span class="line">                    &#39;description&#39; &#x3D;&gt; &#39;范围为: 0 - 100 .&#39;,</span><br><span class="line">                ]),</span><br><span class="line">                &#39;order&#39;        &#x3D;&gt; 4,</span><br><span class="line">            ])-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">        $dataRow &#x3D; $this-&gt;dataRow($postDataType, &#39;show&#39;);</span><br><span class="line">        if (!$dataRow-&gt;exists) &#123;</span><br><span class="line">            $dataRow-&gt;fill([</span><br><span class="line">                &#39;type&#39;         &#x3D;&gt; &#39;radio_btn&#39;,</span><br><span class="line">                &#39;display_name&#39; &#x3D;&gt; &#39;是否显示&#39;,</span><br><span class="line">                &#39;required&#39;     &#x3D;&gt; 1,</span><br><span class="line">                &#39;browse&#39;       &#x3D;&gt; 1,</span><br><span class="line">                &#39;read&#39;         &#x3D;&gt; 1,</span><br><span class="line">                &#39;edit&#39;         &#x3D;&gt; 1,</span><br><span class="line">                &#39;add&#39;          &#x3D;&gt; 1,</span><br><span class="line">                &#39;delete&#39;       &#x3D;&gt; 1,</span><br><span class="line">                &#39;details&#39;      &#x3D;&gt; json_encode([</span><br><span class="line">                    &#39;default&#39; &#x3D;&gt; &#39;1&#39;,</span><br><span class="line">                    &#39;options&#39; &#x3D;&gt; [</span><br><span class="line">                                &#39;0&#39;&#x3D;&gt;&#39;否&#39;,</span><br><span class="line">                                &#39;1&#39; &#x3D;&gt;&#39;是&#39;,</span><br><span class="line">                    ],</span><br><span class="line">                ]),</span><br><span class="line">                &#39;order&#39;        &#x3D;&gt; 5,</span><br><span class="line">            ])-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">        $dataRow &#x3D; $this-&gt;dataRow($postDataType, &#39;created_at&#39;);</span><br><span class="line">        if (!$dataRow-&gt;exists) &#123;</span><br><span class="line">            $dataRow-&gt;fill([</span><br><span class="line">                &#39;type&#39;         &#x3D;&gt; &#39;timestamp&#39;,</span><br><span class="line">                &#39;display_name&#39; &#x3D;&gt; __(&#39;voyager::seeders.data_rows.created_at&#39;),</span><br><span class="line">                &#39;required&#39;     &#x3D;&gt; 0,</span><br><span class="line">                &#39;browse&#39;       &#x3D;&gt; 1,</span><br><span class="line">                &#39;read&#39;         &#x3D;&gt; 1,</span><br><span class="line">                &#39;edit&#39;         &#x3D;&gt; 0,</span><br><span class="line">                &#39;add&#39;          &#x3D;&gt; 0,</span><br><span class="line">                &#39;delete&#39;       &#x3D;&gt; 0,</span><br><span class="line">                &#39;details&#39;      &#x3D;&gt; &#39;&#39;,</span><br><span class="line">                &#39;order&#39;        &#x3D;&gt; 6,</span><br><span class="line">            ])-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        $dataRow &#x3D; $this-&gt;dataRow($postDataType, &#39;updated_at&#39;);</span><br><span class="line">        if (!$dataRow-&gt;exists) &#123;</span><br><span class="line">            $dataRow-&gt;fill([</span><br><span class="line">                &#39;type&#39;         &#x3D;&gt; &#39;timestamp&#39;,</span><br><span class="line">                &#39;display_name&#39; &#x3D;&gt; __(&#39;voyager::seeders.data_rows.updated_at&#39;),</span><br><span class="line">                &#39;required&#39;     &#x3D;&gt; 0,</span><br><span class="line">                &#39;browse&#39;       &#x3D;&gt; 0,</span><br><span class="line">                &#39;read&#39;         &#x3D;&gt; 0,</span><br><span class="line">                &#39;edit&#39;         &#x3D;&gt; 0,</span><br><span class="line">                &#39;add&#39;          &#x3D;&gt; 0,</span><br><span class="line">                &#39;delete&#39;       &#x3D;&gt; 0,</span><br><span class="line">                &#39;details&#39;      &#x3D;&gt; &#39;&#39;,</span><br><span class="line">                &#39;order&#39;        &#x3D;&gt; 7,</span><br><span class="line">            ])-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;Menu Item,在菜单项中添加 关于我们的栏目.</span><br><span class="line">        $menu &#x3D; Menu::where(&#39;name&#39;, &#39;admin&#39;)-&gt;firstOrFail();</span><br><span class="line">        $menuItem &#x3D; MenuItem::firstOrNew([</span><br><span class="line">            &#39;menu_id&#39; &#x3D;&gt; $menu-&gt;id,</span><br><span class="line">            &#39;title&#39;   &#x3D;&gt; &#39;关于我们&#39;,</span><br><span class="line">            &#39;url&#39;     &#x3D;&gt; &#39;&#39;,</span><br><span class="line">            &#39;route&#39;   &#x3D;&gt; &#39;voyager.abouts.index&#39;,</span><br><span class="line">        ]);</span><br><span class="line">        if (!$menuItem-&gt;exists) &#123;</span><br><span class="line">            $menuItem-&gt;fill([</span><br><span class="line">                &#39;target&#39;     &#x3D;&gt; &#39;_self&#39;,</span><br><span class="line">                &#39;icon_class&#39; &#x3D;&gt; &#39;voyager-people&#39;,</span><br><span class="line">                &#39;color&#39;      &#x3D;&gt; null,</span><br><span class="line">                &#39;parent_id&#39;  &#x3D;&gt; null,</span><br><span class="line">                &#39;order&#39;      &#x3D;&gt; 20,</span><br><span class="line">            ])-&gt;save();</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F;Permissions</span><br><span class="line">        Permission::generateFor(&#39;abouts&#39;);</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;新增测试的数据.</span><br><span class="line">        factory(About::class,5)-&gt;create();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * [post description].</span><br><span class="line">     *</span><br><span class="line">     * @param [type] $slug [description]</span><br><span class="line">     *</span><br><span class="line">     * @return [type] [description]</span><br><span class="line">     *&#x2F;</span><br><span class="line">    protected function findPost($slug)</span><br><span class="line">    &#123;</span><br><span class="line">        return About::firstOrNew([&#39;slug&#39; &#x3D;&gt; $slug]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * [dataRow description].</span><br><span class="line">     *</span><br><span class="line">     * @param [type] $type  [description]</span><br><span class="line">     * @param [type] $field [description]</span><br><span class="line">     *</span><br><span class="line">     * @return [type] [description]</span><br><span class="line">     *&#x2F;</span><br><span class="line">    protected function dataRow($type, $field)</span><br><span class="line">    &#123;</span><br><span class="line">        return DataRow::firstOrNew([</span><br><span class="line">            &#39;data_type_id&#39; &#x3D;&gt; $type-&gt;id,</span><br><span class="line">            &#39;field&#39;        &#x3D;&gt; $field,</span><br><span class="line">        ]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * [dataType description].</span><br><span class="line">     *</span><br><span class="line">     * @param [type] $field [description]</span><br><span class="line">     * @param [type] $for   [description]</span><br><span class="line">     *</span><br><span class="line">     * @return [type] [description]</span><br><span class="line">     *&#x2F;</span><br><span class="line">    protected function dataType($field, $for)</span><br><span class="line">    &#123;</span><br><span class="line">        return DataType::firstOrNew([$field &#x3D;&gt; $for]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<hr>
<h2 id="5-voyager-的部署-1"><a href="#5-voyager-的部署-1" class="headerlink" title="5.voyager 的部署"></a>5.voyager 的部署<a name="voyager_deploy"/></h2><ul>
<li>1.部署到 <code>homestead</code> 的步骤.<ul>
<li>1.运行 <code>php artisan migrate</code> ,去把数据库先添加了.</li>
<li>2.运行 <code>php artisan voyager:install --with-dummy</code> ,安装必要的 voyager 的信息(如 add user,add BREAD).</li>
<li>3.运行 <code>composer dump-autoload</code>,<code>php artisan db:seed --class=SettingsTableGLBSeeder</code> ,把 <code>Settings</code> 的模拟数据添加进去.</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>xdebug集成</title>
    <url>/2018/02/09/xdebug%E9%9B%86%E6%88%90/</url>
    <content><![CDATA[<h2 id="在-phpStorm-中集成-xdebug"><a href="#在-phpStorm-中集成-xdebug" class="headerlink" title="在 phpStorm 中集成 xdebug"></a>在 phpStorm 中集成 xdebug</h2><blockquote>
<p>参考: <a href="https://www.jianshu.com/p/8fb9ad0719c2">https://www.jianshu.com/p/8fb9ad0719c2</a></p>
</blockquote>
<a id="more"></a>

<p>##有两种方法(在用第二种方法)</p>
<h4 id="1-系统自带的-php-phpstorm-firefox-集成"><a href="#1-系统自带的-php-phpstorm-firefox-集成" class="headerlink" title="1.系统自带的 php + phpstorm + firefox 集成."></a><a href="#sys_php">1.系统自带的 php + phpstorm + firefox 集成.</a></h4><h4 id="2-MAMP-phpstorm-firefox-集成"><a href="#2-MAMP-phpstorm-firefox-集成" class="headerlink" title="2.MAMP + phpstorm + firefox 集成."></a><a href="#mamp">2.MAMP + phpstorm + firefox 集成.</a></h4><hr>
<hr>
<hr>
<h2 id="1-系统自带的-php-phpstorm-firefox-集成-1"><a href="#1-系统自带的-php-phpstorm-firefox-集成-1" class="headerlink" title="1.系统自带的 php + phpstorm + firefox 集成"></a>1.系统自带的 php + phpstorm + firefox 集成<a name="sys_php"/></h2><h3 id="1-确定要下载的-xdebug-的版本"><a href="#1-确定要下载的-xdebug-的版本" class="headerlink" title="1.确定要下载的 xdebug 的版本"></a>1.确定要下载的 xdebug 的版本</h3><blockquote>
<p>在 <a href="https://xdebug.org/wizard.php">https://xdebug.org/wizard.php</a> 中复制你的 phpinfo() 的信息进去，它就会自动判断(下面为我复制我的 PHPINFO 后，系统为我解析的结果).</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Summary</span><br><span class="line">Xdebug installed: no</span><br><span class="line">Server API: CGI&#x2F;FastCGI</span><br><span class="line">Windows: no</span><br><span class="line">Zend Server: no</span><br><span class="line">PHP Version: 7.1.1</span><br><span class="line">Zend API nr: 320160303</span><br><span class="line">PHP API nr: 20160303</span><br><span class="line">Debug Build: no</span><br><span class="line">Thread Safe Build: no</span><br><span class="line">Configuration File Path: &#x2F;Applications&#x2F;MAMP&#x2F;bin&#x2F;php&#x2F;php7.1.1&#x2F;conf</span><br><span class="line">Configuration File: &#x2F;Library&#x2F;Application Support&#x2F;appsolute&#x2F;MAMP PRO&#x2F;conf&#x2F;php7.1.1.ini</span><br><span class="line">Extensions directory: &#x2F;Applications&#x2F;MAMP&#x2F;bin&#x2F;php&#x2F;php7.1.1&#x2F;lib&#x2F;php&#x2F;extensions&#x2F;no-debug-non-zts-20160303</span><br><span class="line">Instructions</span><br><span class="line">Download xdebug-2.6.0.tgz</span><br><span class="line">Unpack the downloaded file with tar -xvzf xdebug-2.6.0.tgz</span><br><span class="line">Run: cd xdebug-2.6.0</span><br><span class="line">Run: phpize (See the FAQ if you don&#39;t have phpize.</span><br><span class="line"></span><br><span class="line">As part of its output it should show:</span><br><span class="line"></span><br><span class="line">Configuring for:</span><br><span class="line">...</span><br><span class="line">Zend Module Api No:      20160303</span><br><span class="line">Zend Extension Api No:   320160303</span><br><span class="line">If it does not, you are using the wrong phpize. Please follow this FAQ entry and skip the next step.</span><br><span class="line"></span><br><span class="line">Run: .&#x2F;configure</span><br><span class="line">Run: make</span><br><span class="line">Run: cp modules&#x2F;xdebug.so &#x2F;Applications&#x2F;MAMP&#x2F;bin&#x2F;php&#x2F;php7.1.1&#x2F;lib&#x2F;php&#x2F;extensions&#x2F;no-debug-non-zts-20160303</span><br><span class="line">Edit &#x2F;Library&#x2F;Application Support&#x2F;appsolute&#x2F;MAMP PRO&#x2F;conf&#x2F;php7.1.1.ini and add the line</span><br><span class="line">zend_extension &#x3D; &#x2F;Applications&#x2F;MAMP&#x2F;bin&#x2F;php&#x2F;php7.1.1&#x2F;lib&#x2F;php&#x2F;extensions&#x2F;no-debug-non-zts-20160303&#x2F;xdebug.so</span><br><span class="line">Restart the webserver</span><br><span class="line">If you like Xdebug, and thinks it saves you time and money, please have a look at the donation page.</span><br></pre></td></tr></table></figure>

<h3 id="2-下载-xdebug"><a href="#2-下载-xdebug" class="headerlink" title="2.下载 xdebug."></a>2.下载 xdebug.</h3><h3 id="3"><a href="#3" class="headerlink" title="3."></a>3.</h3><hr>
<h2 id="2-MAMP-phpstorm-firefox-集成-1"><a href="#2-MAMP-phpstorm-firefox-集成-1" class="headerlink" title="2.MAMP + phpstorm + firefox 集成."></a>2.MAMP + phpstorm + firefox 集成.<a name="mamp"/></h2><blockquote>
<p>参考: </p>
<p>1.<a href="https://www.jianshu.com/p/9de52bf4fc47">https://www.jianshu.com/p/9de52bf4fc47</a><br>2.<a href="http://blog.csdn.net/LiuMiao1128/article/details/68060678">http://blog.csdn.net/LiuMiao1128/article/details/68060678</a></p>
</blockquote>
<h4 id="2-1-所用的软件"><a href="#2-1-所用的软件" class="headerlink" title="2.1 所用的软件:"></a>2.1 所用的软件:</h4><ul>
<li>1.phpstorm</li>
<li>2.mamp pro</li>
<li>3.chrome</li>
</ul>
<h4 id="2-2详细步骤"><a href="#2-2详细步骤" class="headerlink" title="2.2详细步骤:"></a>2.2详细步骤:</h4><ul>
<li><p>1.mamp 自带 xdebug ,直接启动 </p>
</li>
<li><p><a href="http://localhost/MAMP/index.php?language=English&page=phpinfo">http://localhost/MAMP/index.php?language=English&amp;page=phpinfo</a></p>
<ul>
<li>1.2.mamp 配置的相关截图:<br><img src="/assets/imgs/web/ScreenShot2018-02-09_10.59.35.png"><br><img src="/assets/imgs/web/ScreenShot2018-02-09_10.59.55.png"></li>
<li>1.3.在 phpinfo 中,可以看到php的相关配置</li>
</ul>
</li>
</ul>
<p><img src="/assets/imgs/web/ScreenShot2018-02-09_11.05.33.png"></p>
<p><img src="/assets/imgs/web/ScreenShot2018-02-09_11.05.48.png"></p>
<ul>
<li>2.配置项目的运行环境(实际的操作步骤请以 <a href="https://www.jianshu.com/p/9de52bf4fc47">参考1</a> 的步骤为准,这里只是贴出我自己的配置截图)</li>
</ul>
<p><img src="/assets/imgs/web/ScreenShot2018-02-09_11.08.07.png"></p>
<p><img src="/assets/imgs/web/ScreenShot2018-02-09_11.08.32.png"></p>
<p><img src="/assets/imgs/web/ScreenShot2018-02-09_11.08.54.png"></p>
<p><img src="/assets/imgs/web/ScreenShot2018-02-09_11.09.03.png"></p>
<p><img src="/assets/imgs/web/ScreenShot2018-02-12_10.01.30.png"></p>
<p><img src="/assets/imgs/web/ScreenShot2018-02-09_11.09.23.png"></p>
<p><img src="/assets/imgs/web/ScreenShot2018-02-09_11.12.02.png"></p>
]]></content>
      <categories>
        <category>php</category>
      </categories>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>中国移动销户过程</title>
    <url>/2017/12/26/%E4%B8%AD%E5%9B%BD%E7%A7%BB%E5%8A%A8%E9%94%80%E6%88%B7%E8%BF%87%E7%A8%8B/</url>
    <content><![CDATA[<h1 id="中国移动销户过程"><a href="#中国移动销户过程" class="headerlink" title="中国移动销户过程"></a>中国移动销户过程</h1><blockquote>
<p>记录中国移动的电话卡的销户的过程</p>
</blockquote>
<a id="more"></a>

<h3 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a>1.背景</h3><ul>
<li>1.有一张 深圳 的移动全球通卡 58/Month，现在到广州工作，办理了一张广州移动全球通 58/Month ,现在需要把 深圳 的卡给注销(怕会产生信用的影响).</li>
</ul>
<h3 id="2-过程"><a href="#2-过程" class="headerlink" title="2.过程"></a>2.过程</h3><blockquote>
<p>打电话给 10086 ,问清楚了整个的销户的流程.</p>
</blockquote>
<ul>
<li>1.全球通的卡是先消费，后缴款的.</li>
<li>2.如果不销户，任由欠费停机(3个月后会欠费销户)，会导致对中国移动的信用的影响，可能会对银行的信用有影响.</li>
<li>3.注销可以委托，需要双方的身份证的原件,<a href="http://www.bj.10086.cn/support/businesshelp/number/sqwts/">委托书</a>,(/source/assets/office_word/中国移动销户委托书.docx),到所在地( 深圳 )的营业厅去销户(销户的过程为在营业厅先缴清了欠费的金额，然后再销户).</li>
</ul>
]]></content>
      <categories>
        <category>日杂</category>
      </categories>
      <tags>
        <tag>日杂</tag>
      </tags>
  </entry>
  <entry>
    <title>前端_css_调试</title>
    <url>/2018/08/13/%E5%89%8D%E7%AB%AF_css_%E8%B0%83%E8%AF%95/</url>
    <content><![CDATA[<h1 id="前端-css-调试"><a href="#前端-css-调试" class="headerlink" title="前端_css_调试"></a>前端_css_调试</h1><blockquote>
<p>这几天在做一个前端的页面，发现因为 墙 的问题，运行不了，在这里特地记录解决的方法.</p>
</blockquote>
<a id="more"></a>



<h2 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a>1.背景</h2><h2 id="2-解决方法"><a href="#2-解决方法" class="headerlink" title="2.解决方法"></a>2.解决方法</h2><hr>
<hr>
<hr>
<h2 id="1-背景-1"><a href="#1-背景-1" class="headerlink" title="1.背景"></a>1.背景</h2><ul>
<li>1.之前在网页上 css 写的是:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;www.w3schools.com&#x2F;w3css&#x2F;4&#x2F;w3.css&quot;&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;fonts.googleapis.com&#x2F;css?family&#x3D;Raleway&quot;&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;font-awesome&#x2F;4.7.0&#x2F;css&#x2F;font-awesome.min.css&quot;&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;stackpath.bootstrapcdn.com&#x2F;bootstrap&#x2F;4.1.3&#x2F;css&#x2F;bootstrap.min.css&quot; integrity&#x3D;&quot;sha384-MCw98&#x2F;SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO&quot; crossorigin&#x3D;&quot;anonymous&quot;&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>在自己的电脑上跑没问题，但是有小伙伴运行发现在他们的电脑上跑，一直 LOAD 不出来，很久后 LOAD 出来了，但是版面乱七八糟的，经过排查，发现是 墙的问题，我的电脑一直在 翻，所以没有察觉到.</p>
<h2 id="2-解决方法-1"><a href="#2-解决方法-1" class="headerlink" title="2.解决方法"></a>2.解决方法</h2><ul>
<li><p>1.到各个网站下载对应的 CSS 代码</p>
<ul>
<li>1.特别注意 <code>font-awesome.min.css</code> 的 CSS，要到 <a href="https://fontawesome.com/v4.7.0/get-started/">官网</a> 去下载完整的包导入才行,因为它同时还关联其它的 CSS/JS/FONT 包的，如果只是导入一个，显示的效果会不完整.</li>
</ul>
</li>
<li><p>2.导入到代码中，以 <a href="https://stackoverflow.com/questions/13433683/using-css-in-laravel-views">LARAVEL 为例</a>:</p>
<ul>
<li><p>1.把下载好的 CSS 放到 <code>public/css</code> 文件夹中.</p>
</li>
<li><p>2.在 <code>blade.php</code> 中导入,导入方法可以参考以下:</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">	&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&lt;?php echo asset(&#39;css&#x2F;w3.css&#39;)?&gt;&quot;&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&lt;?php echo asset(&#39;css&#x2F;raleway.css&#39;)?&gt;&quot;&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&#123;&#123; URL::asset(&#39;css&#x2F;font-awesome.min.css&#39;)&#125;&#125;&quot;&gt;</span><br><span class="line">&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;&lt;?php echo asset(&#39;css&#x2F;bootstrap.min.css&#39;)?&gt;&quot;&gt;</span><br></pre></td></tr></table></figure>

</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>frontend</category>
      </categories>
      <tags>
        <tag>frontend</tag>
      </tags>
  </entry>
  <entry>
    <title>奇葩事</title>
    <url>/2018/06/21/%E5%A5%87%E8%91%A9%E4%BA%8B/</url>
    <content><![CDATA[<h3 id="奇葩事"><a href="#奇葩事" class="headerlink" title="奇葩事"></a>奇葩事</h3><blockquote>
<p>记录日常生活中的奇葩事 <code>短信被封事件</code>.</p>
</blockquote>
<a id="more"></a>

<h4 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a>1.背景</h4><ul>
<li>1.广州同事的苹果手机收到一条垃圾短信，然后随手点击了举报。没想到后来发现手机的短信功能被停了.</li>
<li>2.经过多方的查证，终于发现是联通运营商停的. 而且被告知，如果需要恢复短信业务的话，就要到卡的所在地深圳的营业厅去解封，并且签订不再举报的协议!!!</li>
<li>3.跟联通客服沟通，客服可以补偿 19 块的月租费当补偿 !!!</li>
</ul>
<h4 id="2-看到类似的新闻"><a href="#2-看到类似的新闻" class="headerlink" title="2.看到类似的新闻"></a>2.看到类似的新闻</h4><ul>
<li><a href="http://tech.qq.com/a/20180621/006287.htm">1.举报垃圾短信为何反被运营商拉入黑名单？</a></li>
<li>2.为上述的新闻截屏,留档:</li>
</ul>
<img src="/assets/imgs/strange_things/ScreenShot_2018-06-21_13.12.33.png" width="50%" height="50%">
<img src="/assets/imgs/strange_things/ScreenShot_2018-06-21_13.12.40.png" width="50%" height="50%">
<img src="/assets/imgs/strange_things/ScreenShot_2018-06-21_13.12.47.png" width="50%" height="50%">

<h4 id="3-苹果的-iMessage-的快捷回复-惹的祸"><a href="#3-苹果的-iMessage-的快捷回复-惹的祸" class="headerlink" title="3.苹果的 iMessage 的快捷回复 惹的祸"></a><a href="http://daily.zhihu.com/story/8809571">3.苹果的 iMessage 的快捷回复 惹的祸</a></h4><ul>
<li>1.苹果手机收到短信后，长按，然后标注（爱心、赞、鄙视、哈哈、感叹号、问号） ，对方会收到你的标注的信息 !!!<img src="/assets/imgs/strange_things/ScreenShot_2018-06-22_11.43.01.png" width="50%" height="50%">
</li>
</ul>
]]></content>
      <categories>
        <category>日杂</category>
      </categories>
      <tags>
        <tag>日杂</tag>
      </tags>
  </entry>
  <entry>
    <title>本地端口映射</title>
    <url>/2018/02/21/%E6%9C%AC%E5%9C%B0%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84/</url>
    <content><![CDATA[<h3 id="使得外部可以访问没有固定-IP-地址的本地网络"><a href="#使得外部可以访问没有固定-IP-地址的本地网络" class="headerlink" title="使得外部可以访问没有固定 IP 地址的本地网络."></a>使得外部可以访问没有固定 IP 地址的本地网络.</h3><ul>
<li>因为需要，要把本地没有固定 IP 地址的网络让外部可以访问.使用 <a href="https://www.ngrok.cc/">ngrok.cc</a> 提供的服务.</li>
</ul>
<ul>
<li>参考:<ul>
<li>参考1. <a href="https://www.sunnyos.com/article-show-67.html">https://www.sunnyos.com/article-show-67.html</a></li>
<li>参考2.<a href="https://juejin.im/post/5a686d6ef265da3e484bfe8d">https://juejin.im/post/5a686d6ef265da3e484bfe8d</a></li>
</ul>
</li>
</ul>
<a id="more"></a>

<h2 id="1-详细流程"><a href="#1-详细流程" class="headerlink" title="1.详细流程"></a>1.详细流程</h2><pre><code>* 1.如参考 1 所示: </code></pre>
<h2 id="2-效果展示"><a href="#2-效果展示" class="headerlink" title="2.效果展示:"></a>2.效果展示:</h2><ul>
<li>1.到 ngrok.cc 中开通服务<br><img src="/assets/imgs/net/ScreenShot2018-02-21_11.04.09.png"></li>
<li>2.下载并启动映射服务(终端到指定的 sunny  下载目录)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.&#x2F;sunny clientid 1403abb42894027391</span><br></pre></td></tr></table></figure>

<p><img src="/assets/imgs/net/ScreenShot2018-02-21_11.10.08.png"></p>
<ul>
<li>3.效果展示<br><img src="/assets/imgs/net/ScreenShot2018-02-21_11.04.29.png"></li>
</ul>
]]></content>
      <categories>
        <category>Mac</category>
      </categories>
      <tags>
        <tag>Mac</tag>
      </tags>
  </entry>
  <entry>
    <title>海珠湿地</title>
    <url>/2018/01/13/%E6%B5%B7%E7%8F%A0%E6%B9%BF%E5%9C%B0/</url>
    <content><![CDATA[<ul>
<li>海珠湿地的景色</li>
</ul>
<blockquote>
<p>未来的房屋的花园风格.</p>
</blockquote>
<a id="more"></a>

<ul>
<li>1.藤:<br><img src="/assets/imgs/travel/HaiZhu/WechatIMG2239.jpeg"><br><img src="/assets/imgs/travel/HaiZhu/WechatIMG160.jpeg"></li>
</ul>
<p><img src="/assets/imgs/travel/HaiZhu/WechatIMG161.jpeg"></p>
<ul>
<li><p>2.墙:<br><img src="/assets/imgs/travel/HaiZhu/WechatIMG159.jpeg"></p>
</li>
<li><p>3.门:<br><img src="/assets/imgs/travel/HaiZhu/WechatIMG158.jpeg"></p>
</li>
<li><p>4.美景+美人<br><img src="/assets/imgs/travel/HaiZhu/WechatIMG156.jpeg"></p>
</li>
</ul>
<p><img src="/assets/imgs/travel/HaiZhu/WechatIMG157.jpeg"></p>
<p><img src="/assets/imgs/travel/HaiZhu/WechatIMG2250.jpeg"></p>
<p><img src="/assets/imgs/travel/HaiZhu/WechatIMG2247.jpeg"></p>
<p><img src="/assets/imgs/travel/HaiZhu/WechatIMG2248.jpeg"></p>
]]></content>
      <categories>
        <category>Travel</category>
      </categories>
      <tags>
        <tag>Travel</tag>
      </tags>
  </entry>
  <entry>
    <title>申请 外国的 AppleID</title>
    <url>/2019/03/04/%E7%94%B3%E8%AF%B7%E5%A4%96%E5%9B%BD%E7%9A%84AppleID/</url>
    <content><![CDATA[<blockquote>
<p>背景:项目需要用到国外的 APPLE ID 去做测试.</p>
</blockquote>
<a id="more"></a>

<h1 id="1-参考"><a href="#1-参考" class="headerlink" title="1.参考"></a>1.参考</h1><ul>
<li>1.<a href="https://www.fakeaddressgenerator.com/All_World_Address/get_jp_address">Fake Address Generator</a></li>
<li>2.<a href="https://www.douban.com/note/698692376/?type=like#sep">分享已购买小火箭的美国appid，只登陆appstore，不要登陆iCloud</a></li>
<li>3.<a href="https://www.jianshu.com/p/7f075c84f066">美区apple id最新注册方法</a></li>
</ul>
<h1 id="2-步骤-自申请-appID"><a href="#2-步骤-自申请-appID" class="headerlink" title="2.步骤(自申请 appID)"></a>2.步骤(自申请 appID)</h1><h3 id="1-新建-Apple-ID"><a href="#1-新建-Apple-ID" class="headerlink" title="1.新建 Apple ID"></a>1.新建 Apple ID</h3><ul>
<li>1.准备好一个接收 注册码的邮箱(QQ 邮箱亲测不可以)</li>
<li>2.按照 <code>美区apple id最新注册方法</code> 的方法.</li>
<li>3.只要第一次在 VPN 下打开 <code>App Store</code>,然后同意了条款，下次不需要 VPN 都可以正常下载被屏蔽了的内容.</li>
</ul>
<h3 id="2-已有的-Apple-ID-更改区域"><a href="#2-已有的-Apple-ID-更改区域" class="headerlink" title="2.已有的 Apple ID ,更改区域."></a>2.已有的 Apple ID ,更改区域.</h3><ul>
<li>1.到 <a href="https://appleid.apple.com/account/manage">https://appleid.apple.com/account/manage</a> 去更改 LANGUAGE 和 COUNTRY/REGION.同时最好把 <code>Payment&amp;Shipping</code> 也改了.用 <a href="https://www.fakeaddressgenerator.com/All_World_Address/get_jp_address">Fake Address Generator</a> 去生存假的地址信息.</li>
<li>2.iOS 用 VPN  做代理(全局代理，而且要代理到你想更改的目标的国家).</li>
<li>3.iOS 打开 App Store,然后搜索 facebook  ,点击下载，可能会弹出同意条款信息，点击同意，然后就可以了.</li>
<li>4.只要第一次在 VPN 下打开 <code>App Store</code>,然后同意了条款，下次不需要 VPN 都可以正常下载被屏蔽了的内容.</li>
</ul>
]]></content>
      <categories>
        <category>ss</category>
      </categories>
      <tags>
        <tag>ss</tag>
      </tags>
  </entry>
  <entry>
    <title>瑞典之行</title>
    <url>/2019/03/23/%E7%91%9E%E5%85%B8%E4%B9%8B%E8%A1%8C/</url>
    <content><![CDATA[<blockquote>
<p>公司的瑞典商务之行,工作那方面就不记录了，这里主要记录在出国和返国的过程，以供以后同事出国做参考(出行中会持续更新)，及工作的空闲时拍摄的照片.</p>
</blockquote>
<a id="more"></a>

<blockquote>
<p>下面记录的时间都是当地的时间!</p>
</blockquote>
<h2 id="1-出国的旅程"><a href="#1-出国的旅程" class="headerlink" title="1.出国的旅程"></a><a href="#going_abroad">1.出国的旅程</a></h2><h2 id="2-工作空闲时候拍摄的美景"><a href="#2-工作空闲时候拍摄的美景" class="headerlink" title="2.工作空闲时候拍摄的美景"></a><a href="#pictures">2.工作空闲时候拍摄的美景</a></h2><h2 id="3-购物相关"><a href="#3-购物相关" class="headerlink" title="3.购物相关"></a><a href="#shopping">3.购物相关</a></h2><h2 id="4-公司相关的活动"><a href="#4-公司相关的活动" class="headerlink" title="4.公司相关的活动"></a><a href="#activity">4.公司相关的活动</a></h2><h2 id="5-回国的旅程"><a href="#5-回国的旅程" class="headerlink" title="5.回国的旅程"></a><a href="#back_abroad">5.回国的旅程</a></h2><h2 id="6-相关参考文章"><a href="#6-相关参考文章" class="headerlink" title="[6.相关参考文章]"></a>[6.相关参考文章]</h2><ul>
<li>1.<a href="https://zhuanlan.zhihu.com/p/27967894">瑞典延雪平的生活</a><h2 id="7-出国必备物品相关"><a href="#7-出国必备物品相关" class="headerlink" title="7.出国必备物品相关"></a><a href="#going_abroad_related">7.出国必备物品相关</a></h2></li>
</ul>
<hr>
<hr>
<hr>
<h2 id="1-出国的旅程-1"><a href="#1-出国的旅程-1" class="headerlink" title="1.出国的旅程"></a>1.出国的旅程<a name="going_abroad"/></h2><h3 id="1-整个出国的过程-时间都是当地的时间"><a href="#1-整个出国的过程-时间都是当地的时间" class="headerlink" title="1.整个出国的过程(时间都是当地的时间!):"></a>1.整个出国的过程(时间都是当地的时间!):</h3><ul>
<li><p>1.广州 <code>客村</code> 出发(07:00) -&gt; 到达 <code>香港机场</code>(9:30) -&gt; 从<code>香港机场</code>起飞(13:35) -&gt; 到达荷兰 <code>阿姆斯特丹 AMSTERDAM 机场</code>(19:05) -&gt; 从 <code>阿姆斯特丹 机场</code>起飞(20:50) -&gt; 瑞典 <code>哥德堡 GOTEBORG 机场</code>(22:07) -&gt; 搭乘 Taxi 到<code>延雪平Jonkoping</code> 酒店(24:00)</p>
</li>
<li><p>2.总共历时 25 h.</p>
</li>
<li><p>3.搭乘到香港机场的 bus 为 <code>粤港巴士</code> ,公众号即可买票(扫我下面的图片关注后买票，我有赏金可领,呵呵,虽然只有一个月的有效期).</p>
<ul>
<li><p>1.客服说要 4 个小时才到，但是我们一路都不塞车，过关也没什么人，所以 两个半 小时就到机场了.</p>
</li>
<li><p>2.我用了 港澳通行证 过关，后来在机场出关的时候用 港澳通行证 及机票在自动门过关，无法过关，被告知 港澳通行证 的名字 <code>曾</code> 英文为 <code>CENG</code>,但机票的名字是根据护照打印的，是 <code>ZENG</code> ,所以无法过关，最后走人工通道后过了，有惊无险~~~.</p>
</li>
<li><p>3.从 <code>客村</code> 到 <code>香港太子</code> 单程才 90 块人民币,但到 <code>香港机场</code> 要 220 块人民币.<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/WechatIMG155.jpeg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/WechatIMG161.jpeg" alt="从广州到香港机场的上车地点"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/WechatIMG82.jpeg"></p>
</li>
</ul>
</li>
<li><p>4.机票行程<br>  <img src="http://pic.pgyjz.cn/blog/travel/Sweden/WechatIMG81.jpeg"></p>
<ul>
<li><p>飞机中拍到外面的景色<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/831553286690_.pic_hd.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/841553286691_.pic_hd.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/851553286692_.pic_hd.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/861553286694_.pic_hd.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/891553286938_.pic_hd.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/911553286942_.pic_hd.jpg"></p>
</li>
<li><p>飞机中拍到窗下的景色<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/901553286940_.pic_hd.jpg"></p>
</li>
<li><p>飞机餐<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/2781553283252_.pic_hd.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/2761553283249_.pic_hd.jpg"></p>
</li>
<li><p>APP 航旅纵横 截图.<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/1001553288169_.pic.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/1011553288170_.pic.jpg"></p>
</li>
</ul>
</li>
</ul>
<ul>
<li>5.从 <code>哥德堡</code>机场 到 <code>延雪平</code> 的路上，月亮超级亮,看到一个鹿通过，司机立刻急刹车让它通过，而且还露出了迷之微笑😊.</li>
<li>6.酒店这边只提供了 毛巾及洗发水，其他的(牙膏，牙刷，拖鞋)都不提供.</li>
</ul>
<h2 id="2-工作空闲时候拍摄的美景-1"><a href="#2-工作空闲时候拍摄的美景-1" class="headerlink" title="2.工作空闲时候拍摄的美景"></a>2.工作空闲时候拍摄的美景<a name="pictures"/></h2><ul>
<li>延雪平 山顶眺望.<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/2601553274296_.pic_hd.jpg"></li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/2611553276468_.pic_hd.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/921553287493_.pic_hd.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/931553287494_.pic_hd.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/941553287495_.pic_hd.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/951553287497_.pic_hd.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/961553287498_.pic_hd.jpg"></p>
<ul>
<li>中午的午餐<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/971553287783_.pic.jpg"></li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/991553287785_.pic.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190325_132846.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190323_125218.jpg"></p>
<ul>
<li><p>泰国菜<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/WechatIMG104.jpeg"></p>
</li>
<li><p>1.酒店的晚餐</p>
</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190324_185232.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190331_180738.jpg"></p>
<ul>
<li>2.有意思的晚餐(餐厅地址在 火柴博物馆旁边)</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190402_195054.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190402_203737.jpg"></p>
<ul>
<li>同事家的房子<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/981553287785_.pic.jpg"></li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190323_113537.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190323_133656.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190323_131541.jpg"></p>
<ul>
<li>好吃的披萨<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190402_124610.jpg"></li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190323_132009.jpg"></p>
<ul>
<li>马术训练课<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190323_100431.jpg"></li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190323_100528.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190323_102210.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190323_103349.jpg"></p>
<ul>
<li>Vattern 湖<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190323_093610.jpg"></li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190323_093557.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190329_180431.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190329_180725.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190329_180752.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190329_182643.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190329_183335.jpg"></p>
<ul>
<li>瑞典的森林<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190323_120843.jpg"></li>
</ul>
<ul>
<li>工艺品</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190330_185710.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190331_161447.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190402_132551.jpg"></p>
<ul>
<li>城市夜景</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190329_190703.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190329_191654.jpg"></p>
<hr>
<h2 id="3-购物相关-1"><a href="#3-购物相关-1" class="headerlink" title="3.购物相关"></a>3.购物相关<a name="shopping"/></h2><h3 id="3-1-购物商场-ABCD-因为不知道具体的名字"><a href="#3-1-购物商场-ABCD-因为不知道具体的名字" class="headerlink" title="3.1 购物商场 ABCD(因为不知道具体的名字)"></a>3.1 购物商场 ABCD(因为不知道具体的名字)</h3><ul>
<li>1.从 <code>Clarion Collection Hotel Victoria</code> 到 <code>购物商场 ABCD</code> 可以搭乘 3 号公交线路 , 需要瑞典币 <code>27</code>块钱,如下图所示:</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/Snip20190325_2.png"></p>
<ul>
<li><p>2.宜家里面的巧克力价格比它旁边区域的一个超市里的巧克力的价钱实惠很多(15 块两条与 12.5 一条的区别).</p>
</li>
<li><p>3.那个购物商城有很多东西可以买，就如同中国的一个超级商场百货大楼，不过这里就分成了很多个区域的区别.</p>
</li>
</ul>
<hr>
<h2 id="4-公司相关的活动-1"><a href="#4-公司相关的活动-1" class="headerlink" title="4.公司相关的活动"></a><a href="#activity">4.公司相关的活动</a></h2><h3 id="4-1自制啤酒"><a href="#4-1自制啤酒" class="headerlink" title="4.1自制啤酒"></a>4.1自制啤酒</h3><p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190325_175603.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190325_182214.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190325_183132.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190325_195748.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190325_211742.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190325_212326.jpg"></p>
<ul>
<li>公司厨房规定</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190325_210715.jpg"></p>
<ul>
<li>晚餐</li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190325_190112.jpg"></p>
<h2 id="6-回国的旅程"><a href="#6-回国的旅程" class="headerlink" title="6.回国的旅程"></a>6.回国的旅程<a name="back_abroad"/></h2><h3 id="1-整个回国的过程-时间都是当地的时间"><a href="#1-整个回国的过程-时间都是当地的时间" class="headerlink" title="1.整个回国的过程(时间都是当地的时间!):"></a>1.整个回国的过程(时间都是当地的时间!):</h3><ul>
<li><p>1.从延雪平公司出发搭 <code>Taxi</code> 到哥德堡 GOTEBORG 机场(10:00) -&gt;  哥德堡 GOTEBORG 机场起飞时间 (14:14) -&gt; 到达荷兰 <code>阿姆斯特丹 AMSTERDAM 机场</code>(15:29) -&gt; 从 <code>阿姆斯特丹 机场</code>起飞(17:36) -&gt; 到达 <code>香港机场</code>(10:30) -&gt; 从<code>香港机场</code>搭直通车出发(12:35) -&gt; 到达  深圳湾 口岸(13:35) -&gt; 从 深圳 湾口岸 出发(14:30) -&gt; 到达广州 天河城(16:30)</p>
</li>
<li><p>2.总共历时 25H 左右.</p>
</li>
<li><p>3.相关回国过程的图片</p>
<ul>
<li><p>1.哥德堡机场的骏马图<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190403_120157.jpg"></p>
</li>
<li><p>2.在飞机上差不多到香港机场时拍摄的照片<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190404_041236.jpg"><br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190404_022832.jpg"><br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190404_022813.jpg"></p>
</li>
<li><p>3.飞机餐<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190404_024817.jpg"></p>
</li>
<li><p>4.飞机时间相关</p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/Screenshot_20190405-184825.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/Screenshot_20190405-184754.jpg"></p>
</li>
</ul>
</li>
<li><p>4.从香港回广州的途径</p>
<ul>
<li><p>1.车票 及相关的旅游公司</p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/1201554461873_.pic_hd.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/1211554461925_.pic_hd.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/1221554461971_.pic_hd.jpg"></p>
</li>
<li><p>环岛<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/IMG_20190404_115205.jpg"></p>
</li>
</ul>
</li>
</ul>
<ul>
<li>5.感觉去香港机场比较贵而且折腾，下次可以在广州做国际的飞机(可能航班比较少),发现广州内有很多机场大巴，很方便,下面记录旁边的一个机场大巴的公众号(广州机场快线):<br><img src="http://pic.pgyjz.cn/blog/travel/Sweden/1231554469763_.pic.jpg"></li>
</ul>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/Screenshot_20190405-210934.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/Screenshot_20190405-210957.jpg"></p>
<p><img src="http://pic.pgyjz.cn/blog/travel/Sweden/Screenshot_20190405-211143.jpg"></p>
<h2 id="7-出国必备物品相关-1"><a href="#7-出国必备物品相关-1" class="headerlink" title="7.出国必备物品相关"></a>7.出国必备物品相关<a name="going_abroad_related"/></h2><h3 id="1-电话卡相关"><a href="#1-电话卡相关" class="headerlink" title="1.电话卡相关"></a>1.电话卡相关</h3><ul>
<li><p>1.移动卡国外欧洲漫游在网上查到 30 人民币一天，而且接听或拨打还需要另外付钱.</p>
</li>
<li><p>2.在淘宝上买了欧洲的电话卡,感觉还不错,流量一直用不完，手机一直开着 4 g，可以正常跟国内微信视频聊天(一直都是上网，虽然那张卡可以打电话).</p>
<ul>
<li><p>1.回国后，发现48块钱的卡(德国卡)到了香港都可以用(还可以上网)!!!<br>![](<a href="http://pic.pgyjz.cn/blog/travel/Sweden/screenshot">http://pic.pgyjz.cn/blog/travel/Sweden/screenshot</a> 2019-04-05 at 23.32.16.png)<br>![](<a href="http://pic.pgyjz.cn/blog/travel/Sweden/screenshot">http://pic.pgyjz.cn/blog/travel/Sweden/screenshot</a> 2019-04-05 at 23.28.34.png)</p>
</li>
<li><p>2.相关卡购买的链接:<br><a href="https://traveldetail.fliggy.com/item.htm?id=536438414612&spm=a1z09.2.0.0.7acc2e8dxzxiJ8&_u=51ui2k4b3913">德国卡</a><br><a href="https://traveldetail.fliggy.com/item.htm?id=554832150830&spm=a1z09.2.0.0.7acc2e8dxzxiJ8&_u=51ui2k4b6170">意大利卡</a></p>
</li>
</ul>
</li>
</ul>
<h3 id="2-买电话卡送的转接头是次品，用几次就坏了-如果有下次，请记得另外购买"><a href="#2-买电话卡送的转接头是次品，用几次就坏了-如果有下次，请记得另外购买" class="headerlink" title="2.买电话卡送的转接头是次品，用几次就坏了(如果有下次，请记得另外购买)!!"></a>2.买电话卡送的转接头是次品，用几次就坏了(如果有下次，请记得另外购买)!!</h3>]]></content>
      <categories>
        <category>Travel</category>
      </categories>
      <tags>
        <tag>Travel</tag>
      </tags>
  </entry>
  <entry>
    <title>网络速度相关</title>
    <url>/2018/01/24/%E7%BD%91%E7%BB%9C%E9%80%9F%E5%BA%A6%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<ul>
<li>用各种方法测试各个服务器的速度及稳定性.</li>
</ul>
<a id="more"></a>

<h3 id="1-用-站长工具-测试"><a href="#1-用-站长工具-测试" class="headerlink" title="1.用 站长工具 测试."></a><a href="#zhanzhang_util">1.用 站长工具 测试.</a></h3><h3 id="2-奇云测"><a href="#2-奇云测" class="headerlink" title="2.奇云测"></a><a href="#qiyuntest">2.奇云测</a></h3><h3 id="3-卡卡网"><a href="#3-卡卡网" class="headerlink" title="3.卡卡网"></a><a href="#kakanet">3.卡卡网</a></h3><hr>
<hr>
<hr>
<h3 id="1-用-站长工具-测试-1"><a href="#1-用-站长工具-测试-1" class="headerlink" title="1.用 站长工具 测试."></a>1.用 站长工具 测试.<a name="zhanzhang_util"/></h3><blockquote>
<p><a href="http://ping.chinaz.com/">http://ping.chinaz.com/</a></p>
</blockquote>
<ul>
<li><p>1.ping 检测</p>
<ul>
<li>1.1相关的图片<br><img src="/assets/imgs/net/ScreenShot2018-01-24_17.26.30.png"></li>
</ul>
</li>
<li><p>2.路由追踪</p>
</li>
</ul>
<hr>
<h3 id="2-奇云测-1"><a href="#2-奇云测-1" class="headerlink" title="2.奇云测"></a>2.奇云测<a name="qiyuntest"/></h3><blockquote>
<p><a href="http://ce.cloud.360.cn/">http://ce.cloud.360.cn/</a></p>
</blockquote>
<pre><code>* 2.1相关的图片</code></pre>
<p><img src="/assets/imgs/net/ScreenShot2018-01-24_17.40.43.png"><br><img src="/assets/imgs/net/ScreenShot2018-01-24_17.39.42.png"></p>
<hr>
<h3 id="3-卡卡网-1"><a href="#3-卡卡网-1" class="headerlink" title="3.卡卡网"></a>3.卡卡网<a name="kakanet"/></h3><ul>
<li>3.1.路由追踪</li>
</ul>
<blockquote>
<p><a href="http://www.webkaka.com/Tracert.aspx">http://www.webkaka.com/Tracert.aspx</a></p>
</blockquote>
<ul>
<li>3.2相关图片<br><img src="/assets/imgs/net/ScreenShot2018-01-24_17.50.55.png"></li>
</ul>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>自然拼读 APP 已购买项目没反应</title>
    <url>/2018/06/06/%E8%87%AA%E7%84%B6%E6%8B%BC%E8%AF%BBAPP/</url>
    <content><![CDATA[<h3 id="自然拼读-APP-已购买项目没反应"><a href="#自然拼读-APP-已购买项目没反应" class="headerlink" title="自然拼读 APP 已购买项目没反应"></a>自然拼读 APP 已购买项目没反应</h3><h2 id="1-背景"><a href="#1-背景" class="headerlink" title="1.背景"></a><a href="#background">1.背景</a></h2><h2 id="2-相关投诉或反馈的过程"><a href="#2-相关投诉或反馈的过程" class="headerlink" title="2.相关投诉或反馈的过程"></a><a href="#feedback">2.相关投诉或反馈的过程</a></h2><a id="more"></a>

<ul>
<li>4.APP 的反馈</li>
<li>6.到 苹果 处投诉</li>
<li>8.打电话到 12315 投诉</li>
<li>9.加 猫老师 的微信反馈投诉.</li>
</ul>
<h2 id="3-相关的证据资料"><a href="#3-相关的证据资料" class="headerlink" title="3.相关的证据资料"></a><a href="#info">3.相关的证据资料</a></h2><h2 id="4-终于拿到购买的课程"><a href="#4-终于拿到购买的课程" class="headerlink" title="4.终于拿到购买的课程"></a>4.终于拿到购买的课程</h2><blockquote>
<p>20180606,终于在已购买的列表里看到了课程，猫老师 回复说是苹果的问题，不管是否真的，这次 … 真的很折腾…</p>
</blockquote>
<hr>
<hr>
<hr>
<h2 id="1-背景-1"><a href="#1-背景-1" class="headerlink" title="1.背景"></a>1.背景<a name="background"/></h2><ul>
<li>1.在微信公众号 ‘华人父母圈’ 中看到,推荐 下载 ‘自然拼读 APP’</li>
</ul>
<ul>
<li><ol start="2">
<li>  2018/05/17 号中午,用 iPhone 购买了该 <a href="https://itunes.apple.com/cn/app/id1217349619?mt=8">APP(自然拼读)</a> 的付费第二期内容(自然拼读二期),共计 118 块.</li>
</ol>
<ul>
<li>到现在(2018/06/06)为止,在已购买课程处无任何的课程，点击课程还是提示要付费购买，重新开机和重新登陆都无用，而且在 APP 内反馈没有任何的回应.</li>
</ul>
</li>
</ul>
<hr>
<h2 id="2-相关投诉或反馈的过程-1"><a href="#2-相关投诉或反馈的过程-1" class="headerlink" title="2.相关投诉或反馈的过程"></a>2.相关投诉或反馈的过程<a name="feedback"/></h2><ul>
<li><p>1.<a href="https://mp.weixin.qq.com/s/2wrgkmUOOEwrsMH9UViV4w">那个推荐下载的公众号的推荐文章</a>:</p>
<ul>
<li><img src="/assets/imgs/abc_app/Screenshot_20180530-155200.png" width="40%" height="40%"></li>
</ul>
</li>
<li><p>2.iOS 的购买了课程后，在已购买的列表里没有显示，以为是 iOS APP 的问题。然后试试 Android ,在 华为应用市场 和 GooglePlay 都找不到该应用,只有从他们上面提供的二维码的地址,导航到了 <a href="http://a.app.qq.com/o/simple.jsp?pkgname=com.bm.ruicheng">腾讯应用宝</a> 去下载！！</p>
</li>
<li><p>3.在 Android 上也没有已购买的课程的显示.</p>
</li>
<li><p>4.然后想在 APP 上反馈，但是填写发送后，没什么卵用.</p>
<ul>
<li><img src="/assets/imgs/abc_app/Screenshot_20180530-164931.png" width="40%" height="40%"></li>
</ul>
</li>
<li><p>5.在 <a href="https://itunes.apple.com/cn/app/id1217349619?mt=8">AppStore</a> 上，点击 App 支持，发现是 <a href="http://www.bluemobi.cn/">上海科匠信息科技有限公司</a> 制作的产品,APP 是属于 ‘瑞骋(北京)教育咨询有限公司’ 的,估计 ‘科匠’ 只是代工的，跟 ‘科匠’ 联系也没什么用.在 ‘企查查’ 查到的相关的信息:</p>
<ul>
<li><img src="/assets/imgs/abc_app/屏幕快照 2018-05-30 16.55.55.png" width="60%" height="60%"></li>
<li><img src="/assets/imgs/abc_app/屏幕快照 2018-05-30 16.56.02.png" width="60%" height="60%">
</li>
</ul>
</li>
<li><p>6.到 苹果 处投诉</p>
<ul>
<li>1.到 iPhone 的购买记录。点击进去后到 ‘报告问题’处投诉，提交后没反应，跳转到要我们到 App 的供应商处去投诉(fully shit)。<ul>
<li><img src="/assets/imgs/abc_app/Snip20180530_3.png" width="40%" height="40%"></li>
<li><img src="/assets/imgs/abc_app/Snip20180530_4.png" width="40%" height="40%"></li>
</ul>
</li>
<li>2.根据 <a href="https://www.zhihu.com/question/20752407">知乎</a> 上面查到的，到 <a href="https://www.apple.com/legal/internet-services/itunes/appstorenotices/#/contacts?lang=zh">App Store Content Dispute</a> 那去投诉,得到的反馈是(他们不受理这种案件):<ul>
<li><img src="/assets/imgs/abc_app/屏幕快照 2018-05-30 17.12.02.png" width="60%" height="60%"></li>
</ul>
</li>
<li>3.根据上面的邮件提示的地址,到 <a href="https://support.apple.com/contact">Contact Support</a>处去投诉,结果一直选择不到 iOS 的 APP,只能选到 Mac 的 APP，无奈只能选择让苹果的电话联系.<ul>
<li><img src="/assets/imgs/abc_app/Snip20180530_5.png" width="40%" height="40%"></li>
</ul>
</li>
<li>4.客服打电话过来，了解了情况后，表示只能让我们联系 APP 的主体企业解决.(Fully shit 2)</li>
</ul>
</li>
<li><p>7.发邮件(5/30)到 ‘nchai@vip.com.cn’ 投诉,暂时没有反应.</p>
</li>
<li><p>8.打电话到 12315 投诉,因为 ‘瑞骋(北京)教育咨询有限公司’ 是属于北京的，我在广州，广州这边的 12315 表示不受理.</p>
<ul>
<li>1.然后打电话到 01012315 北京的 12315,一直在占线中,其中的自动语音推荐我们去 “北京消费投诉APP” 或到 ‘网站’ 去投诉 .</li>
<li>2.尝试到 <a href="http://www.baic.gov.cn/zmhd/">北京12315</a> 去投诉(政府的网站，谁用谁知道，投诉的订单一直提交不成功(1.要用手机验证码登录，2.选择 ‘主题名称’ 点击后没反应,3.尝试使用 IE9 及以上的浏览器也是不行.))</li>
<li>3.下载 “北京消费投诉”APP ,发现 AppStore/华为应用市场 的评价如下:<img src="/assets/imgs/abc_app/屏幕快照 2018-05-30 15.05.33.png" width="60%" height="60%">
<img src="/assets/imgs/abc_app/Screenshot_20180530-151032.png" width="40%" height="40%">
  * 不信邪，下载了 APP ，输入信息后，果然
<img src="/assets/imgs/abc_app/Screenshot_20180530-151554.png" width="40%" height="40%">
</li>
</ul>
</li>
<li><p>9.(20180603)在 <a href="https://mp.weixin.qq.com/s/2wrgkmUOOEwrsMH9UViV4w">自然拼读APP</a> 上看到一个猫老师 的微信号，遂加为好友，还是心存一点点的希望.</p>
<ul>
<li><p>1.猫老师 在后台(apple)没有查到我的订单的信息,然后建议我打电话给苹果(400-666-8800),说’内购了项目，但是卖方替你查了，告诉你苹果给的账单里没有你这一笔’.</p>
</li>
<li><p>2.打过去报上 APPID 和 名字后，苹果客服说 <code>系统有你的订单的信息，而且系统既然已经发了收据给你，就一定会发订单和款项给商家的</code></p>
<ul>
<li>1.(期间苹果客服好白痴，一直在问我需要怎么解决问题，但是又什么权限都没有(不能查账单是否已经提交给商家…),什么解决问题的能力也没有)，又让我找商家 … ,感觉很坑，想天真地让苹果取消订单并退钱，对不起，退款审核不通过。</li>
</ul>
</li>
<li><p>3.相关的 猫老师 的截图</p>
  <img src="/assets/imgs/abc_app/WechatIMG99.jpeg" ></li>
<li><p>4.相关的微信的截图</p>
  <img src="/assets/imgs/abc_app/ScreenShot_2018-06-03_23.11.48.png" >
  <img src="/assets/imgs/abc_app/ScreenShot_2018-06-06_13.18.53.png" >
  <img src="/assets/imgs/abc_app/Screenshot_20180606-133215.png" width="40%" height="40%">
  <img src="/assets/imgs/abc_app/WechatIMG370.png" width="40%" height="40%">
</li>
<li><p>5.GameOver , double kill !!!</p>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="3-相关的证据资料-1"><a href="#3-相关的证据资料-1" class="headerlink" title="3.相关的证据资料"></a>3.相关的证据资料<a name="info"/></h2><img src="/assets/imgs/abc_app/收据的副本.jpeg" width="40%" height="40%">
<img src="/assets/imgs/abc_app/WechatIMG5067.png" width="40%" height="40%">
<img src="/assets/imgs/abc_app/WechatIMG5068.png" width="40%" height="40%">
<img src="/assets/imgs/abc_app/WechatIMG5069.png" width="40%" height="40%">


<hr>
<h2 id="Game-over-正式放弃"><a href="#Game-over-正式放弃" class="headerlink" title="Game over!正式放弃"></a>Game over!正式放弃</h2>]]></content>
      <categories>
        <category>日杂</category>
      </categories>
      <tags>
        <tag>日杂</tag>
      </tags>
  </entry>
</search>
